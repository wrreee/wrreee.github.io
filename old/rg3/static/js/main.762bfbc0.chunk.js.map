{"version":3,"sources":["redux/players/actions.ts","redux/dishes/actions.ts","redux/players/reducer.ts","redux/dishes/reducer.ts","redux/fullscreen/index.ts","redux/index.ts","components/buttons/Button.tsx","components/buttons/ButtonSelect.tsx","utils/offset.ts","components/buttons/ButtonNumber/index.tsx","components/InputText.tsx","components/buttons/SelectButtons.tsx","components/buttons/SelectDrop.tsx","components/buttons/File.tsx","utils/utils.ts","components/DishForm.tsx","components/DishesList.tsx","components/StepForm.tsx","components/PlayersList.tsx","components/Report.tsx","components/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["EPlayersAction","EDishesAction","playersReducer","handleActions","ADD","state","action","name","console","log","Math","max","Object","values","map","n","dishes","REMOVE","CONSUME","EDishProperty","addDish","properties","isDop","dop","pic","type","removeDish","addMarks","marks","ADD_MARKS","EFullScreenAction","dishesReducer","fullscreenReducer","ON","OFF","SET","s","a","REVERSE","rootReducer","combineReducers","undoable","players","limit","fullscreen","enhancer","compose","applyMiddleware","thunk","logger","persistState","store","createStore","Button","ref","children","height","onClick","onMouseDown","onMouseUp","disabled","width","className","value","classNames","e","style","ButtonSelect","selected","props","data","getOffset","elem","getBoundingClientRect","box","body","document","docElem","documentElement","scrollTop","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","top","left","round","getOffsetRect","parseInt","offsetTop","offsetLeft","offsetParent","getOffsetSum","defaultGetText","toFixed","ValueD","step","oldValue","dx","dy","ButtonNumber","buttonRef","handleDown","startValue","persist","setState","startPoint","clientX","clientY","addEventListener","handleMove","handleUp","onChange","calcValue","calculateOneStep","precision","range","one","abs","target","min","pageX","removeEventListener","handlePress","onPress","handlePressed","handleRelease","onRelease","valueD","integer","nextValue","React","nextProps","nextState","this","shortcut","getText","text","otherProps","prevState","InputText","placeholder","onFocus","onBlur","defaultGetValue","SelectButtons","handleClick","item","items","getValue","nullAble","br","classnames","index","SelectDrop","nullText","File","inputRef","handleFile","reader","FileReader","onload","event","img","Image","src","result","current","files","readAsDataURL","id","htmlFor","getBase64Image","canvas","createElement","getContext","drawImage","toDataURL","replace","getRandomColor","color","i","floor","random","Date","getTime","toString","propsDescription","Sour","Salty","Spicy","Sweet","Bitter","Alcoholic","_merz","propertiesDefault","initialData","prop","DishFormComponent","open","close","changeHandler","nameChangeHandler","propChangeHandler","submitHandler","onSubmit","handleIsDopChange","handlePic","image","v","DishForm","connect","DishesListComponent","dish","borderBottom","length","reduce","res","m","bind","mapDispatchToProps","DishesList","present","valueDBig","StepFormComponent","fontFamily","background","textShadow","fontStyle","textTransform","fontWeight","backgroundColor","dops","dishChangeHandler","keys","Array","fill","handleDopClick","filter","fontSize","pow","StepForm","PlayersListComponent","currentPlayer","openNew","changeNameHandler","stepHandler","consume","chosePlayer","handleSubmit","addPlayer","reverse","player","isCurrent","removePlayer","PlayersList","propNames","ReportComponent","allDishes","onClose","dishesValues","dishAllPropsValues","ares","forEach","propName","ress","playersScore","total","thisDish","mainProp","Report","MainComponent","report","full","setFullScreen","reverseFullScreen","enabled","dispatch","ActionCreators","undo","redo","Main","App","PureComponent","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","onbeforeunload","evt","returnValue"],"mappings":"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","file":"static/js/main.762bfbc0.chunk.js","sourcesContent":["import {AddPlayerAction, RemovePlayerAction, ConsumeAction} from \"./types\";\n\nexport enum EPlayersAction {\n    ADD = \"players/add\",\n    REMOVE = \"players/remove\",\n    CONSUME = \"players/consume\",\n}\n\nexport const addPlayer = (name: string): AddPlayerAction =>\n    ({type: EPlayersAction.ADD, name});\n\nexport const removePlayer = (name: string): RemovePlayerAction =>\n    ({type: EPlayersAction.REMOVE, name});\n\nexport const consume = (name: string, dishes: string[]): ConsumeAction =>\n    ({type: EPlayersAction.CONSUME, name, dishes});","import {AddDishAction, RemoveDishAction, AddMarksAction} from \"./types\";\nimport {DishProperties} from \"./reducer\";\n\nexport enum EDishesAction {\n    ADD = \"dishes/add\",\n    REMOVE = \"dishes/remove\",\n    ADD_MARKS = \"dishes/add-marks\",\n}\n\nexport const addDish = ({name, properties, isDop, dop, pic}: {\n    name: string, properties?: DishProperties, isDop?: boolean, dop?: number, pic?:string\n}): AddDishAction =>\n    ({type: EDishesAction.ADD, name, properties, isDop, dop, pic});\n\nexport const removeDish = (name: string): RemoveDishAction =>\n    ({type: EDishesAction.REMOVE, name});\n\nexport const addMarks = (name: string, marks: DishProperties): AddMarksAction =>\n    ({type: EDishesAction.ADD_MARKS, name, marks});","import {handleActions, ReducerMapValue} from \"redux-actions\";\nimport {EPlayersAction} from \"./actions\";\nimport {AddPlayerAction, ConsumeAction, RemovePlayerAction} from \"./types\";\n\nexport interface PlayerState {\n    n: number\n    name: string\n    dishes: string[]\n}\n\nexport interface PlayersState {\n    [name: string]: PlayerState\n}\n\nexport const playersReducer = handleActions<PlayersState>({\n    [EPlayersAction.ADD]: ((state: PlayersState, action: AddPlayerAction) => {\n        const {name} = action;\n        console.log(Math.max(...Object.values(state).map(({n}) => n)));\n        const n = (Math.max(-1, ...Object.values(state).map(({n}) => n))) + 1;\n        return {\n            ...state,\n            [name]: {n, name, dishes: []}\n        }\n    }) as ReducerMapValue<PlayersState, PlayersState>,\n    [EPlayersAction.REMOVE]: ((state: PlayersState, action: RemovePlayerAction) => {\n        const {name} = action;\n        const {[name]: deleted, ...left} = state;\n        return left;\n    }) as ReducerMapValue<PlayersState, PlayersState>,\n    [EPlayersAction.CONSUME]: ((state: PlayersState, action: ConsumeAction) => {\n        const {name, dishes} = action;\n        const {[name]: deleted, ...left} = state;\n        return {\n            ...state,\n            [name]: {\n                ...state[name],\n                dishes: [...state[name].dishes, ...dishes]\n            }\n        };\n    }) as ReducerMapValue<PlayersState, PlayersState>,\n}, {});\n\n\n","import {handleActions, ReducerMapValue} from \"redux-actions\";\nimport {EDishesAction} from \"./actions\";\nimport {AddDishAction, AddMarksAction, RemoveDishAction} from \"./types\";\n\nexport enum EDishProperty {\n    _merz = '_merz',\n    Sour = 'sour',\n    Salty = 'salty',\n    Spicy = 'spicy',\n    Sweet = 'sweet',\n    Bitter = 'bitter',\n    Alcoholic = 'alcoholic',\n}\n\nexport interface DishProperties {\n    [EDishProperty.Sour]: number\n    [EDishProperty.Salty]: number\n    [EDishProperty.Spicy]: number\n    [EDishProperty.Sweet]: number\n    [EDishProperty.Bitter]: number\n    [EDishProperty.Alcoholic]: number\n\n    [EDishProperty._merz]: number\n}\n\nexport interface DishState {\n    name: string\n    properties: DishProperties\n    marks: DishProperties[]\n    isDop: boolean\n    dop: number\n    pic: any\n}\n\nexport interface DishesState {\n    [name: string]: DishState\n}\n\nexport const dishesReducer = handleActions<DishesState>({\n    [EDishesAction.ADD]: ((state: DishesState, action: AddDishAction) => {\n        const {name, properties, dop, isDop, pic} = action;\n        return {\n            ...state,\n            [name]: {\n                name,\n                marks: [],\n                isDop,\n                dop,\n                properties, pic\n            }\n        }\n    }) as ReducerMapValue<DishesState, DishesState>,\n    [EDishesAction.REMOVE]: ((state: DishesState, action: RemoveDishAction) => {\n        const {name} = action;\n        const {[name]: deleted, ...left} = state;\n        return left;\n    }) as ReducerMapValue<DishesState, DishesState>,\n    [EDishesAction.ADD_MARKS]: ((state: DishesState, action: AddMarksAction) => {\n        const {name, marks} = action;\n        return {\n            ...state,\n            [name]: {\n                ...state[name],\n                marks: [...state[name].marks, marks]\n            }\n        };\n    }) as ReducerMapValue<DishesState, DishesState>,\n}, {});\n\n\n","import {handleActions} from \"redux-actions\";\nimport {Action} from \"redux\";\n\nexport enum EFullScreenAction {\n    ON = \"fullscreen/on\",\n    OFF = \"fullscreen/off\",\n    SET = \"fullscreen/set\",\n    REVERSE = \"fullscreen/reverse\",\n}\n\nexport type FullScreenState = boolean;\n\nexport const fullscreenReducer = handleActions<FullScreenState>({\n    [EFullScreenAction.ON]: () => true,\n    [EFullScreenAction.OFF]: () => false,\n    [EFullScreenAction.SET]: (s, a) => a['value'],\n    [EFullScreenAction.REVERSE]: (s) => !s,\n}, false);\n\nexport const goFullScreen = () => ({\n    type: EFullScreenAction.ON\n});\nexport const setFullScreen = (value: boolean) => ({\n    type: EFullScreenAction.SET, value\n});\nexport const reverseFullScreen = () => ({\n    type: EFullScreenAction.REVERSE\n});","import {createStore, combineReducers, applyMiddleware, compose} from \"redux\";\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport undoable, {StateWithHistory} from 'redux-undo';\nimport persistState from 'redux-localstorage';\n\nimport {playersReducer, PlayersState} from \"./players/reducer\";\nimport {dishesReducer, DishesState} from \"./dishes/reducer\";\nimport {fullscreenReducer} from \"./fullscreen\";\n\nexport interface RootState {\n    undoable: StateWithHistory<UndoableState>\n    fullscreen: boolean\n}\n\nexport interface UndoableState {\n    players: PlayersState\n    dishes: DishesState\n}\n\nexport interface AppState extends RootState {\n\n}\n\nconst rootReducer = combineReducers<RootState>({\n    undoable: undoable<UndoableState>(combineReducers<UndoableState>({\n        players: playersReducer,\n        dishes: dishesReducer\n    }), {\n        limit: 10\n    }),\n    fullscreen: fullscreenReducer\n});\n\nconst enhancer = compose(\n    applyMiddleware(thunk, logger),\n    persistState(),\n);\n\nexport const store = createStore(rootReducer, enhancer);\n// export const store = createStore(rootReducer, applyMiddleware(thunk));","import * as React from \"react\";\nimport classNames from \"classnames\";\nimport \"../../styles/button.scss\";\nimport {EventData} from \"../../utils/types\";\n\nexport interface ButtonEventData extends EventData {\n}\n\nexport interface ButtonProps {\n    onClick?(data?: ButtonEventData)\n\n    onMouseDown?(data?: ButtonEventData)\n\n    onMouseUp?(data?: ButtonEventData)\n\n    value?: any\n    name?: string\n\n    className?: string\n    children?: React.ReactNode,\n    disabled?: boolean\n    width?: number\n    height?: number\n\n    ref?: React.RefObject<any>\n}\n\nexport const Button: React.FC<ButtonProps> = ({ref, children, height, onClick, onMouseDown, onMouseUp, disabled, width, className, value, name}) => {\n    return (\n        <button\n            ref={ref}\n            className={classNames(\"button\", className)}\n            onClick={e => !disabled && onClick && onClick({e, value, name})}\n            onMouseUp={e => !disabled && onMouseUp && onMouseUp({e, value, name})}\n            onMouseDown={e => !disabled && onMouseDown && onMouseDown({e, value, name})}\n            style={{width, height}}\n            disabled={disabled}>\n            {children}\n        </button>\n    )\n};","import * as React from \"react\";\nimport {Button, ButtonEventData, ButtonProps} from \"./Button\";\nimport classNames from \"classnames\";\n\nexport interface ButtonSelectEventData extends ButtonEventData {\n    selected?: boolean\n}\n\nexport interface ButtonSelectProps extends ButtonProps {\n    selected?: boolean\n\n    onClick?(data?: ButtonSelectEventData)\n\n    onMouseDown?(data?: ButtonSelectEventData)\n    onMouseUp?(data?: ButtonSelectEventData)\n}\n\nexport const ButtonSelect: React.FC<ButtonSelectProps> = ({className, selected, onClick, onMouseDown, onMouseUp, ...props}) => {\n\n    return (\n        <Button\n            {...props}\n            onClick={data => onClick && onClick({...data, selected})}\n            onMouseDown={data => onMouseDown && onMouseDown({...data, selected})}\n            onMouseUp={data => onMouseUp && onMouseUp({...data, selected})}\n            className={classNames(\"button-select\", className, {[\"button-select-selected\"]: selected})}/>\n    );\n};","export function getOffset(elem) {\n    if (!elem) return;\n\n    if (elem.getBoundingClientRect) {\n        // \"правильный\" вариант\n        return getOffsetRect(elem)\n    } else {\n        // пусть работает хоть как-то\n        return getOffsetSum(elem)\n    }\n}\n\nexport function getOffsetSum(elem) {\n    var top=0, left=0\n    while(elem) {\n        top = top + parseInt(elem.offsetTop)\n        left = left + parseInt(elem.offsetLeft)\n        elem = elem.offsetParent\n    }\n\n    return {top: top, left: left, box: null}\n}\n\nexport function getOffsetRect(elem) {\n    // (1)\n    var box = elem.getBoundingClientRect()\n\n    // (2)\n    var body = document.body\n    var docElem = document.documentElement\n\n    // (3)\n    var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop\n    var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft\n\n    // (4)\n    var clientTop = docElem.clientTop || body.clientTop || 0\n    var clientLeft = docElem.clientLeft || body.clientLeft || 0\n\n    // (5)\n    var top  = box.top +  scrollTop - clientTop\n    var left = box.left + scrollLeft - clientLeft\n\n    return { top: Math.round(top), left: Math.round(left), box }\n}","import * as React from \"react\";\nimport classNames from \"classnames\";\nimport {ButtonSelect, ButtonSelectProps, ButtonSelectEventData} from \"../ButtonSelect\";\nimport {getOffset} from \"../../../utils/offset\";\n\nconst DEFAULT_WIDTH = 70;\nconst defaultGetText = (value: any) => value.toFixed(1);\n\nexport const ValueD = {\n    VerticalLinear: (step: number) => (oldValue: any, dx: number, dy) => oldValue - dy / step,\n};\n\n\nexport interface ButtonNumberEventData extends ButtonSelectEventData {\n}\n\nexport interface ButtonNumberProps extends ButtonSelectProps {\n\n    integer?: boolean\n\n    width?: number\n    precision?: number | ((value?: any) => number)\n\n    text?: string\n\n    getText?(value?: any): React.ReactNode | string\n\n    range?: [number, number]\n\n    shortcut?: string | string[]\n\n\n    valueD?(oldValue: any, dx: number, dy: number): any\n\n    onChange?(data?: ButtonNumberEventData): any\n\n    onMouseDown?(data?: ButtonNumberEventData): any\n\n    onMouseUp?(data?: ButtonNumberEventData): any\n\n    onClick?(data?: ButtonNumberEventData): any\n\n    onPress?(data?: ButtonNumberEventData): any\n\n    onRelease?(data?: ButtonNumberEventData): any\n\n}\n\nexport interface ButtonNumberState {\n    value?: any\n    startPoint: [number, number]\n    startValue?: any\n}\n\nexport class ButtonNumber extends React.Component<ButtonNumberProps, ButtonNumberState> {\n\n    buttonRef: any;\n\n    constructor(props) {\n        super(props);\n\n        const {range} = props;\n\n        this.state = {\n            value: props.value || range[0],\n            startPoint: null,\n            startValue: null,\n        };\n\n        this.buttonRef = React.createRef();\n\n    }\n\n    shouldComponentUpdate(nextProps: any, nextState: any) {\n        return nextState.value !== this.state.value\n            || !!nextState.startPoint || !!this.state.startPoint\n            || nextProps.shortcut !== this.props.shortcut\n            || nextProps.className !== this.props.className;\n    }\n\n    static getDerivedStateFromProps(nextProps: any, prevState: any) {\n        return {\n            ...(!prevState.startPoint && nextProps.value !== prevState.value ? {\n                value: nextProps.value\n            } : {}),\n        };\n    }\n\n    handleDown = data => {\n\n        console.log(\"down\");\n\n\n        if (this.state.startValue) {\n            return;\n        }\n\n        const {e} = data;\n        e.persist();\n\n        const {onMouseDown, name, selected} = this.props;\n        const {value} = this.state;\n\n        onMouseDown && onMouseDown({e, value, name, selected});\n\n        this.setState(({value}) => ({\n            startValue: value,\n            startPoint: [e.clientX, e.clientY]\n        }), () => {\n            document.addEventListener(\"mousemove\", this.handleMove);\n            document.addEventListener(\"mouseup\", this.handleUp);\n        });\n    };\n\n    handleMove = e => {\n        const {onChange, name, selected} = this.props;\n        const value = this.calcValue(e);\n\n\n        console.log(\"move\", value);\n\n        onChange && onChange({e, value, name, selected});\n\n        this.setState({value});\n    };\n\n    calculateOneStep = (value) => {\n        const {precision = 100, range} = this.props;\n        if (typeof precision === \"function\") {\n            return (range[1] - range[0]) / precision(value)\n        } else {\n            return (range[1] - range[0]) / precision\n        }\n    };\n\n    handleUp = (e) => {\n        // //  modulation\n\n\n        const {onClick, onMouseUp, onChange, name, selected, width = DEFAULT_WIDTH, precision = 100, range} = this.props;\n        let value = this.calcValue(e);\n\n\n        const one = this.calculateOneStep(value);\n        if (Math.abs(value - this.state.startValue) < one) {\n\n            const {left} = getOffset(e.target);\n\n            value = Math.min(Math.max(\n                this.state.startValue + (left + width / 2 < e.pageX ? one : -one)\n                , range[0]), range[1]);\n\n            onChange && onChange({e, value, name, selected});\n        } else {\n            onMouseUp && onMouseUp({e, value, name, selected});\n\n            onClick && onClick({value, name, e, selected});\n\n        }\n\n\n        this.setState({\n            value,\n            startValue: null,\n            startPoint: null\n        }, () => {\n            document.removeEventListener(\"mousemove\", this.handleMove);\n            document.removeEventListener(\"mouseup\", this.handleUp);\n        });\n\n\n    };\n\n\n    handlePress = e => {\n        if (this.state.startValue) {\n            return;\n        }\n\n        const {onPress, name, selected} = this.props;\n        const {value} = this.state;\n\n        onPress && onPress({e, value, name, selected});\n\n        this.setState(({value}) => ({\n            startValue: value,\n            startPoint: null\n        }), () => {\n            document.addEventListener(\"mousemove\", this.handlePressed);\n        });\n    };\n\n    handlePressed = e => {\n        if (!this.state.startPoint) {\n            this.setState({\n                startPoint: [e.clientX, e.clientY]\n            });\n        } else {\n            const {onChange, name, selected} = this.props;\n            const value = this.calcValue(e);\n\n            onChange && onChange({e, value, name, selected});\n\n            this.setState({value});\n        }\n    };\n\n    handleRelease = e => {\n        const {onRelease, name, selected} = this.props;\n        const {value} = this.state;\n\n        onRelease && onRelease({value, name, e, selected});\n\n        this.setState({\n            value,\n            startValue: null,\n            startPoint: null\n        }, () => {\n            document.removeEventListener(\"mousemove\", this.handlePressed);\n        });\n    };\n\n    calcValue = e => {\n        console.log(this.state.startValue);\n        const {range, valueD = ValueD.VerticalLinear(5), integer} = this.props;\n\n        let nextValue = valueD(this.state.startValue, e.clientX - this.state.startPoint[0], e.clientY - this.state.startPoint[1]);\n        nextValue = Math.min(Math.max(nextValue, range[0]), range[1]);\n\n        if (integer) {\n            nextValue = Math.round(nextValue);\n        }\n        return nextValue;\n    };\n\n    render() {\n        const {range, width = DEFAULT_WIDTH, className, getText = defaultGetText, text, shortcut, ...otherProps} = this.props;\n        const {value = 0, startValue, startPoint} = this.state;\n\n        console.log(\"number button render\", getText(value));\n\n\n\n\n        return (\n            <ButtonSelect\n                {...otherProps}\n                className={classNames(\"button-number\", className, {\n                    [\"button-number-active\"]: !!startValue,\n                })}\n                width={width}\n                ref={this.buttonRef}\n                onMouseDown={this.handleDown}>\n                <div\n                    className={\"button-number-value\"}\n                    style={{width: (value - range[0]) / (range[1] - range[0]) * 100 + \"%\"}}>\n                    {getText ? getText(value) : text}\n                </div>\n\n            </ButtonSelect>\n        );\n    }\n}\n\n","import * as React from \"react\";\nimport classNames from \"classnames\";\n\nexport interface InputTextProps {\n    onChange?(value: string): void\n\n    onFocus?()\n    onBlur?()\n\n    className?: string\n\n    value: string\n    placeholder?: string\n}\n\nexport const InputText: React.FC<InputTextProps> = ({placeholder, onChange, onFocus, onBlur, value, className}) => {\n\n    const changeHandler = e => {\n        onChange && onChange(e.target.value)\n    };\n\n    return (\n        <input\n            placeholder={placeholder}\n            className={classNames(className, \"input-text\")}\n            type=\"text\"\n            value={value || ''}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            onChange={changeHandler}/>\n    );\n};","import * as React from \"react\";\nimport classnames from \"classnames\";\nimport {ButtonSelect} from \"./ButtonSelect\";\nimport {ButtonEventData} from \"./Button\";\n\nexport interface SelectButtonsEventData extends ButtonEventData {\n    item: any\n    items: any[]\n}\n\nexport interface SelectButtonsProps {\n    className?: string\n    name?: string\n    items: any[]\n    value?: any\n\n    nullAble?: boolean\n\n    height?: number\n    width?: number\n\n    br?: number\n\n    onChange?(data?: SelectButtonsEventData)\n\n    getValue?(item?: any)\n\n    getText?(item?: any)\n}\n\nexport const defaultGetValue = ({value}) => value;\nexport const defaultGetText = ({text}) => text;\n\nexport class SelectButtons extends React.PureComponent<SelectButtonsProps> {\n\n\n    handleClick = ({value: item, selected, e}) => {\n        const {name, items, onChange, getValue = defaultGetValue, nullAble, value: oldValue} = this.props;\n        let value = getValue(item);\n\n        if (nullAble && oldValue === value) {\n            value = null\n        }\n\n        onChange && onChange({\n            value,\n            e, item, items, name\n        });\n    };\n\n    render() {\n        const {className, items, value,width, height, name, getValue = defaultGetValue, getText = defaultGetText, br} = this.props;\n\n        console.log(\"select buttons render\", name);\n\n        return (\n            <span className={classnames(className, \"select-buttons\")}>\n            {items.map((item, index) => (\n                <React.Fragment key={getValue(item)}>\n                    {!!br && !!index && !(index % br) && <br/>}\n                    <ButtonSelect\n                        width={width}\n                        height={height}\n                        value={item}\n                        // key={getValue(item)}\n                        selected={getValue(item) === value}\n                        onMouseUp={(e) => {\n                            console.log(e)\n                        }}\n                        onClick={this.handleClick}>\n                        {getText(item)}\n                    </ButtonSelect>\n                </React.Fragment>\n            ))}</span>\n        );\n    }\n}","import * as React from \"react\";\nimport {defaultGetText, SelectButtons, SelectButtonsProps} from \"./SelectButtons\";\nimport classNames from \"classnames\";\nimport \"../../styles/selectDrop.scss\"\nimport {Button} from \"./Button\";\n\nexport interface SelectDropProps extends SelectButtonsProps {\n    nullText?: string\n}\n\nexport interface SelectDropState {\n\n}\n\nexport class SelectDrop extends React.PureComponent<SelectDropProps, SelectDropState> {\n\n    render() {\n        const {className, nullText, ...props} = this.props;\n        const {value, getText = defaultGetText} = props;\n        console.log(\"select drop render\", props.name, value);\n\n        return (\n            <div className={classNames(className, \"select-drop\")}>\n                <Button className={\"select-drop-value\"}>\n                    {getText(value )|| nullText || \"null\"}\n                </Button>\n                <SelectButtons {...props} className={\"select-drop-items\"}/>\n            </div>\n        );\n    }\n}","import * as React from \"react\";\nimport '../../styles/inputFile.scss';\nimport {Button} from \"./Button\";\n\nexport interface FileProps {\n    onChange(image)\n    name: string\n    children: string\n}\n\nexport interface FileState {\n\n}\n\nexport class File extends React.PureComponent<FileProps, FileState> {\n\n    inputRef;\n\n    constructor(props) {\n        super(props);\n\n        this.inputRef = React.createRef();\n    }\n\n    handleFile = e => {\n        var reader = new FileReader();\n        reader.onload = (event) => {\n            var img = new Image();\n            img.onload = () => {\n                this.props.onChange(img);\n                // this.refs.canvas.ctx.drawImage(img, 0, 0, this.props.value.w, this.props.value.h);\n                // this.updateMaskedImage();\n            };\n            img.src = event.target.result as string;\n            this.inputRef.current.value = null;\n        };\n        if (e.target.files[0])\n            reader.readAsDataURL(e.target.files[0]);\n    };\n\n    render() {\n        const { name, children } = this.props;\n        return (\n            <div className={'input-file'}>\n                <input\n                    type=\"file\"\n                    name={name}\n                    id={name}\n                    ref={this.inputRef}\n                    onChange={this.handleFile}/>\n                <label htmlFor={name}>{children}</label>\n            </div>\n        );\n    }\n}","const defaultValue = (value, key?) => key;\nexport const objectToSelectItems = (\n    object: object,\n    value: (value: any, key: string) => any = defaultValue,\n    text: (value: any, key: string) => string = defaultValue,\n    withNull?: boolean,\n    nullText?: string\n) => {\n    const items = Object.keys(object).map(key => ({\n        value: value(object[key], key),\n        text: text(object[key], key),\n    }));\n\n    return withNull\n        ? [{\n            value: null,\n            text: nullText || \"-\"\n        }, ...items] : items;\n\n};\n\nconst defaultArrayValue = (item) => item;\nexport const arrayToSelectItems = (\n    array: any[],\n    value: (item: any) => any = defaultArrayValue,\n    text: (item: any) => string = defaultArrayValue\n) =>\n    array.map(item => ({\n        value: value(item),\n        text: text(item),\n    }));\n\nconst defaultKey = ({name}) => name;\nexport const arrayToObject = (\n    array: any[],\n    key: (item: any) => string = defaultKey,\n    value: (item: any) => any = defaultValue\n) =>\n    array.reduce((res, item) => ({\n        ...res,\n        [key(item)]: value(item),\n    }), {});\n\n\nexport const enumToSelectItems = (\n    object: object,\n    value: (value: any, key: string) => any = value => value,\n    text: (value: any, key: string) => string = value => value\n) =>\n    Object.keys(object).map(key => ({\n        value: value(object[key], key),\n        text: text(object[key], key),\n    }));\n\nexport function randomInteger(min, max) {\n    var rand = min - 0.5 + Math.random() * (max - min + 1);\n    rand = Math.round(rand);\n    return rand;\n}\n\nexport const randomZ = () => {\n    const size0 = randomInteger(4, 11);\n\n    let s = \"\";\n    for (let i = 0; i < size0; i++) {\n        const ff = randomInteger(1, 20) > 10;\n        s += ff ? \"Z\" : \"z\"\n    }\n\n    return s;\n\n};\n\nconst tosSzZ = (string, offset) => string\n    .split(((0 + offset) % 4).toString()).join(\"z\")\n    .split(((1 + offset) % 4).toString()).join(\"s\")\n    .split(((2 + offset) % 4).toString()).join(\"k\")\n    .split(((3 + offset) % 4).toString()).join(\"i\");\nconst tozZsS = (string, offset) => string\n    .split(((0 + offset) % 4).toString()).join(\"s\")\n    .split(((1 + offset) % 4).toString()).join(\"z\")\n    .split(((2 + offset) % 4).toString()).join(\"S\")\n    .split(((3 + offset) % 4).toString()).join(\"z\");\n\n\nlet offset = 0;\nexport const dateZs = () => {\n\n    const date = new Date();\n\n    let f;\n\n    if (date.getDay() === 4) {\n        f = tozZsS;\n    } else if (date.getDay() === 4) {\n        f = tozZsS;\n    } else {\n        f = tosSzZ;\n    }\n\n    offset = (offset + 1) % 4;\n\n    return f(date.getTime().toString(4), 0);\n\n};\n\nexport function getBase64Image(img, width?, height?) {\n    var canvas = document.createElement(\"canvas\");\n    canvas.width = width || img.width;\n    canvas.height = height || img.height;\n\n    var ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0, width || img.width, height || img.height);\n\n    var dataURL = canvas.toDataURL(\"image/png\");\n\n    return dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\n}\n\nexport function getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n}\n\nconsole.log(new Date().getTime().toString(4));","import * as React from \"react\";\nimport {connect, MapDispatchToProps, MapStateToProps} from \"react-redux\";\nimport {AppState} from \"../redux\";\nimport {DishProperties, EDishProperty} from \"../redux/dishes/reducer\";\nimport {ButtonNumber, ValueD} from \"./buttons/ButtonNumber\";\nimport {Button} from \"./buttons/Button\";\nimport {InputText} from \"./InputText\";\nimport {SelectDrop} from \"./buttons/SelectDrop\";\nimport {ButtonSelect} from \"./buttons/ButtonSelect\";\nimport {File} from \"./buttons/File\";\nimport {getBase64Image} from \"../utils/utils\";\n\nexport interface DishFormStateProps {\n}\n\nexport interface DishFormActionProps {\n}\n\nexport interface DishFormOwnProps {\n    onSubmit(data)\n}\n\nexport interface DishFormProps extends DishFormStateProps, DishFormActionProps, DishFormOwnProps {\n\n}\n\nexport interface DishFormState {\n    name: string\n    properties: DishProperties\n    prop: string\n    open: boolean\n    isDop: boolean\n    dop: number\n    pic: string\n}\n\nconst propsDescription = {\n    [EDishProperty.Sour]: \"кислое\",\n    [EDishProperty.Salty]: \"соленое\",\n    [EDishProperty.Spicy]: \"острое\",\n    [EDishProperty.Sweet]: \"соленое\",\n    [EDishProperty.Bitter]: \"горькое\",\n    [EDishProperty.Alcoholic]: \"алкоголь\",\n    [EDishProperty._merz]: \"мерзость\",\n\n};\nconst valueD = ValueD.VerticalLinear(9);\n\nconst propertiesDefault = {\n    [EDishProperty.Sour]: 0,\n    [EDishProperty.Salty]: 0,\n    [EDishProperty.Spicy]: 0,\n    [EDishProperty.Sweet]: 0,\n    [EDishProperty.Bitter]: 0,\n    [EDishProperty.Alcoholic]: 0,\n\n    [EDishProperty._merz]: 0,\n\n};\n\nconst initialData = {\n    name: \"\",\n    properties: propertiesDefault,\n    prop: null,\n    dop: 0,\n    pic: null\n};\n\nclass DishFormComponent extends React.PureComponent<DishFormProps, DishFormState> {\n\n    state = {\n        open: false,\n        isDop: false,\n        ...initialData\n    };\n\n    open = () => this.setState({open: true});\n    close = () => this.setState({open: false, ...initialData});\n\n    changeHandler = (name: EDishProperty) => ({value}) => {\n        this.setState(state => ({...state, properties: {...state.properties, [name]: value}}));\n    };\n\n    nameChangeHandler = (name) => this.setState({name});\n\n    propChangeHandler = ({value}) => {\n        this.setState(state => ({\n            prop: value,\n            properties: {\n                ...propertiesDefault,\n                [EDishProperty._merz]: state.properties[EDishProperty._merz]\n            }\n        }));\n    };\n\n    submitHandler = () => {\n        this.props.onSubmit({\n            name: this.state.name,\n            properties: this.state.properties,\n            isDop: this.state.isDop,\n            dop: this.state.properties[EDishProperty._merz],\n            pic: this.state.pic\n        });\n\n        this.setState(initialData);\n    };\n\n    handleIsDopChange = (data) => {\n\n        this.setState({isDop: !data.selected});\n    };\n\n    handlePic = (image) => {\n        this.setState({pic: getBase64Image(image, 50, 50)})\n        // getBase64Image(image, 50, 50);\n\n\n        // console.log(new Blob([getBase64Image(image)]).size);\n        // console.log(new Blob([]).size);\n\n    };\n\n    render() {\n        return (this.state.open ?\n                <div className={'dish-form'}>\n                    <div className={'flex-row'}>\n                        <div className={'flex-column'}>\n                            <ButtonSelect\n                                selected={this.state.isDop}\n                                onClick={this.handleIsDopChange}>\n                                дополнит.\n                            </ButtonSelect>\n                            <File onChange={this.handlePic} name={'pic'}>изобр.</File>\n                        </div>\n                        {this.state.pic &&\n                        <img\n                            width={70}\n                            height={40}\n                            src={\"data:image/png;base64,\" + this.state.pic}/>}\n                    </div>\n                    <div className={'dish-merz'}>\n                        <ButtonNumber\n                            getText={value => <span className={'merz-value'}>{value.toFixed(2)}</span>}\n                            width={140}\n                            height={30}\n                            range={[0, 10]}\n                            valueD={valueD}\n                            integer={this.state.isDop}\n                            value={this.state.properties[EDishProperty._merz]}\n                            onChange={this.changeHandler(EDishProperty._merz)}/>\n                    </div>\n                    <InputText\n                        placeholder={'название'}\n                        className={'dish-name-input'} value={this.state.name} onChange={this.nameChangeHandler}/>\n                    <div className={'row1'}>\n\n                        {!this.state.isDop && (<>\n                            <SelectDrop\n                                value={this.state.prop}\n                                onChange={this.propChangeHandler}\n                                getValue={v => v}\n                                getText={v => propsDescription[v]}\n                                nullAble\n                                nullText={\"-\"}\n                                items={[\n                                    EDishProperty.Sour,\n                                    EDishProperty.Salty,\n                                    EDishProperty.Spicy,\n                                    EDishProperty.Sweet,\n                                    EDishProperty.Bitter,\n                                    EDishProperty.Alcoholic\n                                ]}/>\n                            <div className={'dish-props'}>\n                                {this.state.prop ? (\n                                    <div className={'dish-prop'}>\n                                        {/*<div className={'dish-prop-name'}>*/}\n                                        {/*    {propsDescription[this.state.prop]}*/}\n                                        {/*</div>*/}\n                                        <ButtonNumber\n                                            range={[0, 10]}\n                                            valueD={valueD}\n                                            value={this.state.properties[this.state.prop]}\n                                            onChange={this.changeHandler(this.state.prop)}/>\n                                    </div>\n                                ) : null\n                                }\n                            </div>\n                        </>)}\n                        {/*</div>*/}\n\n                        {/*<div className={'row2'}>*/}\n                    </div>\n                    <div className={'row1'}>\n\n                        <Button className={'dish-submit'} onClick={this.submitHandler}>добавить</Button>\n                        <Button onClick={this.close} className='dish-close-form'>отмена</Button>\n                    </div>\n                </div>\n                : <Button onClick={this.open} className='dish-open-form'>+</Button>\n        );\n    }\n}\n\nconst mapStateToProps: MapStateToProps<DishFormStateProps, DishFormOwnProps, AppState> = state => ({});\n\nconst mapDispatchToProps: MapDispatchToProps<DishFormActionProps, DishFormOwnProps> = {};\n\nexport const DishForm = connect<DishFormStateProps, DishFormActionProps, DishFormOwnProps, AppState>(\n    mapStateToProps,\n    mapDispatchToProps\n)(DishFormComponent);","import * as React from \"react\";\nimport {connect, MapDispatchToProps, MapStateToProps} from \"react-redux\";\nimport {AppState, store} from \"../redux\";\nimport {StepForm} from \"./StepForm\";\nimport {addDish, addMarks, removeDish} from \"../redux/dishes/actions\";\nimport {DishForm} from \"./DishForm\";\nimport {DishesState, DishState, EDishProperty} from \"../redux/dishes/reducer\";\nimport {PlayersList} from \"./PlayersList\";\nimport {Button} from \"./buttons/Button\";\nimport '../styles/dishes.scss';\n\nexport interface DishesListStateProps {\n\n    dishes: DishesState\n}\n\nexport interface DishesListActionProps {\n    addMarks\n    addDish\n    removeDish\n\n}\n\nexport interface DishesListOwnProps {\n\n}\n\nexport interface DishesListProps extends DishesListStateProps, DishesListActionProps, DishesListOwnProps {\n\n}\n\nexport interface DishesListState {\n\n}\n\nclass DishesListComponent extends React.PureComponent<DishesListProps, DishesListState> {\n    render() {\n        const {addDish, dishes, removeDish} = this.props;\n        return (\n            <div className={'dishes'}>\n\n                <DishForm onSubmit={addDish}/>\n                <div className={'dishes-list'}>\n                    {Object.values(dishes).map((dish) => {\n\n                        return (\n                            <div\n                                className={'dish-item'}\n                                style={{\n                                    borderBottom: dish.isDop ? '1px solid white' : '1px solid red'\n                                }}\n                            >\n                                <div\n                                    className={'dish-name'}\n                                >{dish.name}</div>\n                                <div className={'dish-mark'}>{\n                                    dish.isDop ? dish.dop :\n                                        (dish.marks.length\n                                        ? (dish.marks.reduce((res, m) => res + m[EDishProperty._merz], 0) / dish.marks.length).toFixed(2)\n                                        : 0)\n                                }</div>\n                                <Button className={'dish-delete-button'}\n                                        onClick={removeDish.bind(this, dish.name)}>del</Button>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps: MapStateToProps<DishesListStateProps, DishesListOwnProps, AppState> = (state) => ({\n    dishes: state.undoable.present.dishes\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DishesListActionProps, DishesListOwnProps> = {\n    addMarks,\n    addDish,\n    removeDish,\n};\n\nexport const DishesList = connect<DishesListStateProps, DishesListActionProps, DishesListOwnProps, AppState>(\n    mapStateToProps,\n    mapDispatchToProps\n)(DishesListComponent);","import * as React from \"react\";\nimport {connect, MapDispatchToProps, MapStateToProps} from \"react-redux\";\nimport {AppState} from \"../redux\";\nimport {DishesState, DishProperties, EDishProperty} from \"../redux/dishes/reducer\";\nimport {ButtonNumber, ValueD} from \"./buttons/ButtonNumber\";\nimport {Button} from \"./buttons/Button\";\nimport {SelectButtons} from \"./buttons/SelectButtons\";\nimport '../styles/stepForm.scss';\nimport {ButtonSelect} from \"./buttons/ButtonSelect\";\nimport {getRandomColor} from \"../utils/utils\";\n\n\n\nexport interface StepFormStateProps {\n    dishes: DishesState\n}\n\nexport interface StepFormActionProps {\n}\n\nexport interface StepFormOwnProps {\n    onSubmit(properties: DishProperties, dish: string, dops: string[])\n}\n\nexport interface StepFormProps extends StepFormStateProps, StepFormActionProps, StepFormOwnProps {\n\n}\n\nexport interface StepFormState {\n    properties: DishProperties,\n    dish: string\n    dops: {\n        [dopname: string]: number\n    }\n}\n\nconst propsDescription = {\n    [EDishProperty.Sour]: \"кислое\",\n    [EDishProperty.Salty]: \"соленое\",\n    [EDishProperty.Spicy]: \"острое\",\n    [EDishProperty.Sweet]: \"сладкое\",\n    [EDishProperty.Bitter]: \"горькое\",\n    [EDishProperty.Alcoholic]: \"алкоголь\",\n    [EDishProperty._merz]: \"мерз\",\n\n};\nconst valueD = ValueD.VerticalLinear(9);\nconst valueDBig = ValueD.VerticalLinear(50);\n\nconst stylesByTaste = {\n    [EDishProperty.Sour]: {\n\n        fontFamily: 'monospace',\n        background: 'blue',\n        color: 'yellowgreen',\n        textShadow: '1px 1px 0 yellow',\n    },\n    [EDishProperty.Alcoholic]: {\n        background: 'palevioletred',\n        fontStyle: 'italic',\n        color: 'black',\n        textTransform: 'capitalize'\n    },\n    [EDishProperty.Bitter]: {\n        background: 'black',\n        color: 'powderblue',\n        fontWeight: 'bold',\n        fontFamily: 'Arial black',\n\n    },\n    [EDishProperty.Salty]: {\n        background: 'white',\n        fontWeight: 'bold',\n        color: 'dodgerblue',\n    },\n    [EDishProperty.Spicy]: {\n        background: 'red',\n        color: 'ivory',\n        textShadow: 'yellow 1px 1px 0px'\n    },\n    [EDishProperty.Sweet]: {\n        backgroundColor: 'rgb(255,255,255);',\n        background: 'repeating-linear-gradient(90deg, rgba(255,255,255,1) 35%, rgba(0,212,255,1) 35%, rgba(255,0,0,1) 53%)',\n        color: 'white'\n    },\n};\n\nclass StepFormComponent extends React.PureComponent<StepFormProps, StepFormState> {\n\n    state = {\n        properties: {\n            [EDishProperty.Sour]: 0,\n            [EDishProperty.Salty]: 0,\n            [EDishProperty.Spicy]: 0,\n            [EDishProperty.Sweet]: 0,\n            [EDishProperty.Bitter]: 0,\n            [EDishProperty.Alcoholic]: 0,\n\n            [EDishProperty._merz]: 0,\n\n        },\n        dops: {},\n        dish: null\n    };\n\n    changeHandler = (name: EDishProperty) => ({value}) => {\n        this.setState(state => ({...state, properties: {...state.properties, [name]: value}}));\n    };\n\n    dishChangeHandler = ({value}) => this.setState({dish: value});\n\n    submitHandler = () => {\n        const {properties, dish, dops} = this.state;\n        this.props.onSubmit(\n            properties,\n            dish,\n            Object.keys(dops).reduce((res, name) => {\n                return [...res, ...(new Array(dops[name])).fill(name)]\n            }, [])\n        )\n    };\n\n    handleDopClick = (data) => {\n        const {value: name} = data;\n        this.setState(state => ({\n            dops: {\n                ...state.dops,\n                [name]: state.dops[name] > 3 ? 0 : (state.dops[name] || 0) + 1\n            }\n        }))\n    };\n\n    render() {\n        return (\n            <div className={'step-form'}>\n                <SelectButtons\n                    width={70}\n                    height={40}\n                    className={'dishes'}\n                    value={this.state.dish}\n                    onChange={this.dishChangeHandler}\n                    getText={({name, properties, pic}) => {\n                        return pic ? <>\n                            {pic &&  <img width={70} height={40} src={ \"data:image/png;base64,\" + pic}/>}\n                            <span style={{\n                                color: getRandomColor(),\n                                fontWeight: properties[EDishProperty._merz] * 100,\n                            }}>{name}</span>\n                        </> : <div style={{color: getRandomColor()}}>{name}</div>\n                    }}\n                    getValue={({name}) => name}\n                    items={Object.values(this.props.dishes).filter(({isDop}) => !isDop)}/>\n                    <div className={'dops'}>\n                {Object.values(this.props.dishes)\n                    .filter(({isDop}) => isDop)\n                    .map(({name, pic}) => {\n                        const text = pic ? <>\n                            <img width={70} height={40} src={ \"data:image/png;base64,\" + pic}/>\n                            <span style={{color: getRandomColor()}}>{name}<span>{this.state.dops[name] || ''}</span></span>\n\n                        </> : <div style={{color: getRandomColor()}}>{name}<span>{this.state.dops[name] || ''}</span></div>;\n                        return (\n                            <ButtonSelect\n                                className={'dop-button'}\n                                height={40}\n                                onClick={this.handleDopClick}\n                                value={name}\n                                selected={this.state.dops[name]}>\n                                {text}\n                            </ButtonSelect>);\n                    })}\n                    </div>\n                <div className={'dish-props'}>\n                    {[\n                        EDishProperty.Sour,\n                        EDishProperty.Salty,\n                        EDishProperty.Spicy,\n                        EDishProperty.Sweet,\n                        EDishProperty.Bitter,\n                        EDishProperty.Alcoholic\n                    ].map(prop => {\n                        return (\n                            <div className={'dish-prop-item'}>\n                                <div className={'dish-prop-item-title'}>{propsDescription[prop]}</div>\n                                <ButtonNumber\n                                    height={30}\n                                    range={[0, 10]}\n                                    valueD={valueD}\n\n                                    value={this.state.properties[prop]}\n                                    onChange={this.changeHandler(prop)}/>\n                            </div>\n                        );\n                    })}\n                </div>\n                <div className={'dish-merz'} style={{\n\n                    // backgroundSize: '142px  50%'\n                }}>\n                    {/*<div>{propsDescription[EDishProperty._merz]}</div>*/}\n                    <ButtonNumber\n                        getText={value => <span style={{\n                            // fontWeight: 'bold',\n                            // color: `rgb(${value/10 * 100 + 140},${(1-value/10) * 100 + 80},${50})`,\n                            fontSize: 172 * Math.pow(value / 2, 2) / 10 + 172 * Math.pow(value / 2, 2) / 100\n                        }}>{value}</span>}\n                        width={420}\n                        height={160}// * this.state.properties[EDishProperty._merz] / 10 + 20}\n                        range={[0, 10]}\n                        valueD={valueDBig}\n                        value={this.state.properties[EDishProperty._merz]}\n                        onChange={this.changeHandler(EDishProperty._merz)}/>\n                </div>\n                <Button\n                    height={100}\n                    width={140}\n                    className={'submit'}\n                    onClick={this.submitHandler} disabled={!this.state.dish}>съел</Button>\n            </div>\n        )\n            ;\n    }\n}\n\nconst mapStateToProps: MapStateToProps<StepFormStateProps, StepFormOwnProps, AppState> = state => ({\n    dishes: state.undoable.present.dishes\n});\n\nconst mapDispatchToProps: MapDispatchToProps<StepFormActionProps, StepFormOwnProps> = {};\n\nexport const StepForm = connect<StepFormStateProps, StepFormActionProps, StepFormOwnProps, AppState>(\n    mapStateToProps,\n    mapDispatchToProps\n)(StepFormComponent);","import * as React from \"react\";\nimport classnames from 'classnames';\nimport {connect, MapDispatchToProps, MapStateToProps} from \"react-redux\";\nimport {addPlayer, consume, removePlayer} from \"../redux/players/actions\";\nimport {PlayersState} from \"../redux/players/reducer\";\nimport {AppState} from \"../redux\";\nimport {InputText} from \"./InputText\";\nimport {Button} from \"./buttons/Button\";\nimport {StepForm} from \"./StepForm\";\nimport {addMarks} from \"../redux/dishes/actions\";\nimport '../styles/players.scss';\nimport {ButtonSelect} from \"./buttons/ButtonSelect\";\n\nexport interface PlayersListStateProps {\n    players: PlayersState\n}\n\nexport interface PlayersListActionProps {\n    addPlayer\n    removePlayer\n\n    addMarks\n    consume\n}\n\nexport interface PlayersListOwnProps {\n\n}\n\nexport interface PlayersListProps extends PlayersListStateProps, PlayersListActionProps, PlayersListOwnProps {\n\n}\n\nexport interface PlayersListState {\n    name: string\n    currentPlayer: string\n    openNew: boolean\n}\n\nclass PlayersListComponent extends React.PureComponent<PlayersListProps, PlayersListState> {\n    state = {name: '', currentPlayer: null, openNew: false};\n    changeNameHandler = (name) => this.setState({name});\n\n    stepHandler = (name) => (properties, dish, dops) => {\n        this.props.addMarks(dish, properties);\n        this.props.consume(name, [dish, ...dops]);\n        this.setState({currentPlayer: null});\n    };\n\n    chosePlayer = ({value}) => {\n        if (this.state.currentPlayer === value) {\n            this.setState({currentPlayer: null})\n        } else {\n            this.setState({currentPlayer: value})\n        }\n    };\n\n    open = () => {\n        this.setState({openNew: true})\n    };\n\n    close = () => {\n        this.setState({openNew: false})\n    };\n\n    handleSubmit = (name) => {\n        this.props.addPlayer(name);\n        this.setState({\n            name: ''\n        })\n    };\n\n    render() {\n        return (\n            <div className={'players'}>\n                {this.state.openNew ?\n                    <div className='new-player'>\n\n                        <InputText\n                            className='new-player-input'\n                            value={this.state.name}\n                            placeholder={'имя игрока'}\n                            onChange={this.changeNameHandler}/>\n                        <div className={'new-player-buttons'}>\n                            <Button\n                                className='new-player-submit'\n                                onClick={this.handleSubmit.bind(this, this.state.name)}>добавить</Button>\n                            <Button onClick={this.close}>отмена</Button>\n                        </div>\n                    </div>\n                    : <ButtonSelect className={'add-new-player'} onClick={this.open}>+</ButtonSelect>}\n                <div className={'players-list'}>\n                    {Object.values(this.props.players).reverse().map(player => {\n                        const isCurrent = player.name === this.state.currentPlayer;\n                        return (\n                            <div className={classnames('player-item', `brain${player.n % 6 + 1}`)}>\n                                <ButtonSelect\n                                    className={'player-name'}\n                                    onClick={this.chosePlayer}\n                                    value={player.name}\n                                    selected={isCurrent}>\n                                    <span>{player.name}</span>\n                                </ButtonSelect>\n                                <div className={'player-ate'}>\n                                    {player.dishes.map((dish) =>\n                                        <span>\n                                            {dish} \\\n                                        </span>\n                                    )}\n                                    {/*{player.dishes.join(' |')}*/}\n                                </div>\n                                <Button\n                                    className='player-delete'\n                                    onClick={this.props.removePlayer.bind(this, player.name)}>удалить</Button>\n                                {isCurrent && <StepForm onSubmit={this.stepHandler(player.name)}/>}\n                            </div>\n                        )\n                    })}\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps: MapStateToProps<PlayersListStateProps, PlayersListOwnProps, AppState> = state => ({\n    players: state.undoable.present.players\n});\n\nconst mapDispatchToProps: MapDispatchToProps<PlayersListActionProps, PlayersListOwnProps> = {\n    addPlayer,\n    removePlayer,\n    addMarks,\n    consume,\n};\n\nexport const PlayersList = connect<PlayersListStateProps, PlayersListActionProps, PlayersListOwnProps, AppState>(\n    mapStateToProps,\n    mapDispatchToProps\n)(PlayersListComponent);","import * as React from \"react\";\nimport {connect, MapDispatchToProps, MapStateToProps} from \"react-redux\";\nimport {AppState} from \"../redux\";\nimport {DishesState, EDishProperty} from \"../redux/dishes/reducer\";\nimport {PlayersState} from \"../redux/players/reducer\";\nimport '../styles/report.scss';\n\nexport interface ReportStateProps {\n    dishes: DishesState\n    players: PlayersState\n}\n\nexport interface ReportActionProps {\n}\n\nexport interface ReportOwnProps {\n    type: number\n\n    onClose()\n\n}\n\nexport interface ReportProps extends ReportStateProps, ReportActionProps, ReportOwnProps {\n\n}\n\nexport interface ReportState {\n\n}\n\nconst propNames = [\n    EDishProperty.Sweet,\n    EDishProperty.Spicy,\n    EDishProperty.Salty,\n    EDishProperty.Bitter,\n    EDishProperty.Alcoholic,\n    EDishProperty.Sour,\n];\n\nclass ReportComponent extends React.PureComponent<ReportProps, ReportState> {\n    render() {\n        const {dishes: allDishes, players, onClose} = this.props;\n\n        const dishesValues = Object.values(allDishes).reduce((res, dish) => {\n            const {name, marks, dop, isDop} = dish;\n            res[name] = isDop ? dop : marks.reduce((res, m) => res + m[EDishProperty._merz], 0) / marks.length;\n            return res;\n        }, {});\n\n        const dishAllPropsValues = Object.values(allDishes).reduce((res, dish) => {\n            const {name, marks, dop, isDop} = dish;\n            if (!isDop) {\n                const ares = marks.reduce((res, props) => {\n                    propNames.forEach(propName => res[propName] = (res[propName] || 0) +  props[propName]);\n                    return res;\n                }, {});\n\n                console.log(marks, ares);\n\n                res[name] = Object.keys(ares).reduce((ress, propName) => {\n                    ress[propName] = ress[propName]/ marks.length;\n                    return ress;\n                }, ares);\n                console.log(res[name]);\n            }\n\n            return res;\n        }, {});\n\n        const playersScore = Object.values(players).reduce((res, player) => {\n            const {dishes, name} = player;\n            res[name] = {\n                total: dishes.reduce((res, dish) => res + dishesValues[dish], 0),\n                dops: dishes.reduce((res, dish) => {\n                    const isDop = allDishes[dish].isDop;\n                    if (isDop) {\n                        res[dish] = (res[dish] || 0) + 1\n                    }\n                    return res;\n                }, {}),\n                dishes: dishes.reduce((res, dish) => {\n                    const isDish = !allDishes[dish].isDop;\n                    if (isDish) {\n                        res[dish] = (res[dish] || 0) + 1\n                    }\n                    return res;\n                }, {})\n            };\n            return res;\n        }, {});\n\n        return (\n            <div className={'report-backdrop'} onClick={onClose}>\n                <div className={'report'}>\n                    <table>\n                        {this.props.type === 1 ? (\n                            <>\n                                <tr>\n                                    <td>имя</td>\n                                    <td>дополнительные</td>\n                                    <td>основные</td>\n                                    <td>баллы</td>\n                                </tr>\n                                {Object.keys(players).map((player) => {\n                                    return (\n                                        <tr>\n                                            <td>{player}</td>\n                                            <td>\n                                                {Object.keys(playersScore[player].dops).map(dop => {\n                                                    return <div>{playersScore[player].dops[dop]} {dop}</div>\n                                                })}\n                                            </td>\n                                            <td>\n                                                {Object.keys(playersScore[player].dishes).map(dish => {\n                                                    return <div>{playersScore[player].dishes[dish]} {dish} </div>\n                                                })}\n                                            </td>\n                                            <td style={{fontSize: playersScore[player].total * 7}}>{playersScore[player].total.toFixed(4)}</td>\n                                        </tr>\n                                    );\n                                })}\n                            </>\n                        ) : (\n                            <>\n                                <tr>\n                                    <td>название</td>\n                                    <td>оценка автора</td>\n                                    <td>средняя оценка</td>\n                                    <td>баллы за мерзость</td>\n                                    <td>оценка вкуса</td>\n                                    <td>средняя оценка вкуса</td>\n                                    <td>баллы за вкус</td>\n                                </tr>\n                                {Object.keys(allDishes).filter(dish => !allDishes[dish].isDop).map((dish) => {\n                                    const thisDish = allDishes[dish];\n                                    const mainProp = Object.keys(allDishes[dish].properties).reduce((res, prop) => {\n                                        const propValue = thisDish.properties[prop];\n                                        return propValue > res ? prop : res;\n                                    }, null);\n                                    console.log(dishAllPropsValues[dish]);\n                                    return (\n                                        <tr>\n                                            <td>{dish}</td>\n                                            <td>\n                                                {allDishes[dish].properties[EDishProperty._merz]}\n                                            </td>\n                                            <td>\n                                                {dishesValues[dish]?.toFixed(4)}\n                                            </td>\n                                            <td style={{fontSize: dishesValues[dish] * 10}}>{10 - Math.abs((dishesValues[dish] || 0) - allDishes[dish].properties[EDishProperty._merz])}</td>\n                                            <td>\n                                                {mainProp}\n                                                {allDishes[dish].properties[mainProp]}\n                                            </td>\n                                            <td>\n                                                {dishAllPropsValues[dish][mainProp]}\n                                            </td>\n                                            <td style={{fontSize: dishAllPropsValues[dish][mainProp] * 10}}>{10 - Math.abs((dishAllPropsValues[dish][mainProp]?.toFixed(4) || 0) - allDishes[dish].properties[mainProp])}</td>\n                                        </tr>\n                                    );\n                                })} </>\n                        )}\n                    </table>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps: MapStateToProps<ReportStateProps, ReportOwnProps, AppState> = state => ({\n    dishes: state.undoable.present.dishes,\n    players: state.undoable.present.players,\n});\n\nconst mapDispatchToProps: MapDispatchToProps<ReportActionProps, ReportOwnProps> = {};\n\nexport const Report = connect<ReportStateProps, ReportActionProps, ReportOwnProps, AppState>(\n    mapStateToProps,\n    mapDispatchToProps\n)(ReportComponent);","import * as React from \"react\";\nimport {connect, MapDispatchToProps, MapStateToProps} from \"react-redux\";\nimport {AppState, store} from \"../redux\";\nimport {StepForm} from \"./StepForm\";\nimport {addDish, addMarks, removeDish} from \"../redux/dishes/actions\";\nimport {DishForm} from \"./DishForm\";\nimport {DishesState} from \"../redux/dishes/reducer\";\nimport {DishesList} from \"./DishesList\";\nimport {PlayersList} from \"./PlayersList\";\nimport {Button} from \"./buttons/Button\";\nimport {ActionCreators} from 'redux-undo';\n\nimport FullScreen from \"react-full-screen\";\nimport {reverseFullScreen, setFullScreen} from \"../redux/fullscreen\";\nimport {Report} from \"./Report\";\n\nexport interface MainStateProps {\n\n    dishes: DishesState\n    full: boolean\n}\n\nexport interface MainActionProps {\n    addMarks\n    addDish\n    removeDish\n    setFullScreen\n    reverseFullScreen\n}\n\nexport interface MainOwnProps {\n\n}\n\nexport interface MainProps extends MainStateProps, MainActionProps, MainOwnProps {\n\n}\n\nexport interface MainState {\n    report: number\n}\n\nclass MainComponent extends React.PureComponent<MainProps, MainState> {\n    state = {\n        report: 0\n    };\n    render() {\n        const {addMarks, addDish, dishes, removeDish, full, setFullScreen, reverseFullScreen} = this.props;\n        return (\n            <FullScreen enabled={full} onChange={setFullScreen}>\n                <div className={'layout'}>\n                <div className={'main'}>\n                    <div className={'main-buttons'}>\n                        <Button onClick={reverseFullScreen}>{'□'}</Button>\n                        <Button onClick={() => store.dispatch(ActionCreators.undo())}>{'<'}</Button>\n                        <Button onClick={() => store.dispatch(ActionCreators.redo())}>{'>'}</Button>\n                        <Button onClick={() => this.setState({report: 1})}>итоги</Button>\n                        <Button onClick={() => this.setState({report: 2})}>итоги 2</Button>\n                    </div>\n                    <DishesList/>\n                    <PlayersList/>\n                    <div className={'ass-kebab'}>ASS.KEBAB</div>\n                </div>\n                </div>\n                {this.state.report &&\n                <Report type={this.state.report} onClose={() => this.setState({report: 0})}/>}\n            </FullScreen>\n        );\n    }\n}\n\nconst mapStateToProps: MapStateToProps<MainStateProps, MainOwnProps, AppState> = (state) => ({\n    dishes: state.undoable.present.dishes,\n    full: state.fullscreen\n});\n\nconst mapDispatchToProps: MapDispatchToProps<MainActionProps, MainOwnProps> = {\n    addMarks,\n    addDish,\n    removeDish,\n    setFullScreen,\n    reverseFullScreen\n};\n\nexport const Main = connect<MainStateProps, MainActionProps, MainOwnProps, AppState>(\n    mapStateToProps,\n    mapDispatchToProps\n)(MainComponent);","import React from 'react';\nimport './App.scss';\nimport {InputNumber} from \"./components/InputNumber\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux\";\nimport {connect, MapDispatchToProps, MapStateToProps} from \"react-redux\";\nimport {Main} from \"./components/Main\";\n\n/** люди вводят свою !оценку! для блюда которое съели (!номер!)\n * оценка складываются в массив оценок этого ьлюда\n * съеденное блюдо записывается в массив съеденных блюд участника\n *\n * расчет баллов уучасника: узнать среднюю оценку по всем блюдам а потом вычислить баллы\n *\n * бонусы это блюда с заранее известными оценками, при добавлении блюда в массив также могут добавиться бонусы\n * */\nexport class App extends React.PureComponent {\n\n    state = {};\n\n    render() {\n        return (\n            <Provider store={store}>\n                <Main/>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nwindow.onbeforeunload = function (evt) {\n    var message = \"Document 'foo' is not saved. You will lost the changes if you leave the page.\";\n    if (typeof evt == \"undefined\") {\n        evt = window.event;\n    }\n    if (evt) {\n        evt.returnValue = message;\n    }\n    return message;\n}"],"sourceRoot":""}