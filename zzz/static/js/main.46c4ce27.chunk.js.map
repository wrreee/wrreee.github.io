{"version":3,"sources":["components/Canvas.js","components/utils.js","components/Color.js","components/Select.js","components/Brush.js","components/PatternEditor.js","components/floodfill.js","components/floodfillpattern.js","components/Paint.js","components/Line.js","components/Enter.js","App.js","serviceWorker.js","index.js"],"names":["Canvas","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","drawing","mouseDownHandler","e","setState","_this$props","props","onDraw","onClick","ctx","canvas","mouseUpHandler","prevE","_this$props2","onChange","width","height","getImageData","mouseLeaveHandler","mouseMoveHandler","setImageData","image","putImageData","drawImage","_this$ctx","getCtx","clear","fillStyle","fillRect","inherits","createClass","key","value","refs","getContext","addEventListener","document","nextProps","_this$props3","resize","imageData","resizeImageData","setTimeout","_this$props4","_this$props5","readonly","react_default","a","createElement","className","ref","React","Component","Tools","Brush","Paint","Line","Fills","Color","Pattern","BrushTypes","Square","Circle","ResizeType","zero","nn","bi","randomInteger","min","max","rand","Math","random","round","createPattern","_ref2","_ref2$w","w","_ref2$h","h","createImageData","i","data","mask","masked","resizeType","cutCircle","context","x","y","radius","globalCompositeOperation","moveTo","beginPath","arc","PI","closePath","fill","circle","createImage","Promise","resolve","reject","tempCanvas","tempCtx","img","Image","onload","src","toDataURL","hexToRgbaObject","hex","c","opacity","undefined","test","substring","split","r","join","g","b","Error","Select","_React$PureComponent","handleChose","_this2","items","map","item","PureComponent","handleSizeChange","objectSpread","size","target","handleOpacityChang","selectType","type","step","Select_Select","values","tp","color","indexOf","console","log","handleValueChange","handleChoseColor","handleChangeHSL","val","Color2","hsl","p1000","delta","colors","p1000change","togglePalette","palette","style","backgroundColor","p","nextType","PatternEditor","updateMaskedImage","then","imageMasked","imageMask","maskToggle","sizeChangeHandler","s","defineProperty","mirrorChangeHandler","name","imageChangeHandler","maskChangeHandler","resizeTypeChangeHandler","_this$props6","_this$props7","_this$props8","onPatternDraw","onMaskDraw","onPatternClick","onMaskClick","chosen","onChose","react","Canvas_Canvas","display","visibility","xMirror","yMirror","floodfill","fillcolor","tolerance","me","mw","Q","w2","targetcolor","pixelCompare","push","kkk","pixelCompareAndSet","pop","parseInt","j","abs","handlePaintFillChose","Enter","order","handleMouseEnter","onMouseEnter","App","keys","brush","line","paint","patterns","currentPattern","currentTool","getRGBAColor","handleCanvasChange","handleBrushChange","handleColorChange","handlePaintChange","handleLineChange","handlePatternChange","n","pattern","handleAddPattern","toConsumableArray","handleCurrentPatternChose","handleToolChose","tool","drawProcessing","hexToRgbaString","globalAlpha","offsetX","offsetY","lineTo","strokeStyle","lineWidth","stroke","clickProcessing","imda","pat","patternImageData","maskImageData","getPatX","pWidth","trunc","getPatY","pHeight","floor","P","oldData","Uint8ClampedArray","forEach","maskcolor","floodfillpatternmask","maskDrawProcessing","toLocaleLowerCase","clearRect","maskClickProcessing","floodfillmask","save","dataURL","link","body","appendChild","href","download","click","removeChild","keyMap","PREV","NEXT","BRUSH","BRUSH_S","BRUSH_C","BRUSH_P","PAINT","PAINT_C","PAINT_P","LINE","WHITE","BLACK","RAND","hotKeysHandlers","rgb","keydownHandler","code","charCodeAt","keyupHandler","_omit","move","delay","fn","lastCall","now","Date","getTime","throttled","_ref","_this3","index_es","handlers","Brush_Brush","Paint_Paint","Line_Line","Color_Color","index","PatternEditor_PatternEditor","Enter_Enter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.46c4ce27.chunk.js","sourcesContent":["import React from 'react';\nimport resizeImageData from \"resize-image-data\";\n\nexport class Canvas extends React.Component {\n\n    state = {\n        drawing: false\n    };\n\n    canvas;\n    ctx;\n\n    prevE;\n\n    mouseDownHandler = e => {\n        this.setState({drawing: true});\n\n        const {onDraw, onClick} = this.props;\n\n        onDraw && onDraw(e, this.ctx, this.canvas);\n        onClick && onClick(e, this.ctx, this.canvas);\n    };\n\n    mouseUpHandler = e => {\n        if (this.state.drawing) {\n            this.setState({drawing: false});\n\n            this.prevE = null;\n            const {onChange, width, height} = this.props;\n            onChange && onChange(this.ctx.getImageData(0, 0, width, height));\n        }\n    };\n\n    mouseLeaveHandler = e => {\n        if (this.state.drawing)\n            this.mouseUpHandler();\n    };\n\n    mouseMoveHandler = e => {\n        if (this.state.drawing) {\n            const {onDraw} = this.props;\n\n            onDraw && onDraw(e, this.ctx, this.canvas, this.prevE);\n            this.prevE = e;\n        }\n    };\n\n    componentDidMount() {\n        this.canvas = this.refs.canvas;\n        this.ctx = this.canvas.getContext(\"2d\");\n\n\n        this.canvas.addEventListener(\"mousedown\", this.mouseDownHandler);\n        document.addEventListener(\"mouseup\", this.mouseUpHandler);\n        this.canvas.addEventListener(\"mousemove\", this.mouseMoveHandler);\n        //this.canvas.addEventListener(\"mouseleave\", this.mouseLeaveHandler);\n\n\n        // this.clear();\n        // const {onChange, width, height} = this.props;\n        // onChange && onChange(this.ctx.getImageData(0, 0, width, height));\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if ((nextProps.width !== this.props.width || nextProps.height !== this.props.height)) {\n            const {onChange, width, height, resize} = this.props;\n            let imageData = this.ctx.getImageData(0, 0, width, height);\n            resize && (imageData = resizeImageData(imageData, nextProps.width, nextProps.height, resize));\n            setTimeout(() => onChange && onChange(imageData), 0);\n        }\n        if (this.props.value !== nextProps.value) {\n            if (!nextProps.value) {\n                this.clear();\n                const {onChange, width, height} = this.props;\n                onChange && onChange(this.ctx.getImageData(0, 0, width, height));\n            } else {\n                this.ctx.putImageData(nextProps.value, 0, 0);\n            }\n        }\n    }\n\n    setImageData = image =>\n        this.ctx.putImageData(image, 0, 0);\n\n    drawImage = (...p) =>\n        this.ctx.drawImage(...p);\n    getCtx = () =>\n        this.ctx;\n\n    getImageData = () =>\n        this.ctx.getImageData(0, 0, this.props.width, this.props.height);\n\n    clear = () => {\n        this.ctx.fillStyle = \"#ffffff\";\n        this.ctx.fillRect(0, 0, this.props.width, this.props.height);\n    };\n\n    render() {\n        const {width, height, readonly} = this.props;\n        return (\n            <div className={\"canvas\" + (readonly ? \" readonlyCanvas\" : \"\")}>\n                <canvas ref=\"canvas\" width={width} height={height}/>\n            </div>\n        )\n    }\n}","export const Tools = {\n    Brush: 'brush',\n    Paint: 'paint',\n    Line: 'line'\n};\n\nexport const Fills = {\n    Color: 'color',\n    Pattern: 'pattern'\n};\n\nexport const BrushTypes = {\n    Square: 'square',\n    Circle: 'circle',\n    Pattern: 'pattern',\n};\n\nexport const ResizeType = {\n    zero: \"\",\n    nn: \"nearest-neighbor\",\n    bi: \"biliniear-interpolation\"\n};\n\nexport function throttled(delay, fn) {\n    let lastCall = 0;\n    return function (...args) {\n        const now = (new Date).getTime();\n        if (now - lastCall < delay) {\n            return;\n        }\n        lastCall = now;\n        return fn(...args);\n    }\n}\n\nexport function randomInteger(min, max) {\n    var rand = min - 0.5 + Math.random() * (max - min + 1);\n    rand = Math.round(rand);\n    return rand;\n}\n\nexport const whiteSheet = ctx => ({w, h}) => {\n    const image = ctx.createImageData(w, h);\n    for (let i = 0; i < image.data.length; i++)\n        image.data[i] = 255;\n    return image;\n};\n\nexport const createPattern = ctx => ({w = 50, h = 50}) => {\n    const image = ctx.createImageData(w, h);\n    for (let i = 0; i < image.data.length; i++)\n        image.data[i] = 255;\n\n    const mask = ctx.createImageData(w, h);\n    for (let i = 0; i < mask.data.length; i+=4) {\n        mask.data[i] = 0;\n        mask.data[i+1] = 0;\n        mask.data[i +2] = 0;\n        mask.data[i + 3] = 255;\n    }\n    return {\n        w, h,\n        image: image,\n        mask: mask,\n        masked: ctx.createImageData(w, h),\n        resizeType: \"nn\"\n    }\n};\n\nexport const cutCircle = function (context, x, y, radius) {\n    context.globalCompositeOperation = 'destination-out';\n    context.moveTo(x, y);\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, true);\n    context.closePath();\n    context.fill();\n    context.globalCompositeOperation = \"source-over\";\n};\nexport const circle = function (context, x, y, radius) {\n    context.moveTo(x, y);\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, true);\n    context.closePath();\n    context.fill();\n};\n\nexport const createImage = canvas => {\n    return new Promise((resolve, reject) => {\n        var tempCanvas = document.createElement(\"canvas\");\n        var tempCtx = tempCanvas.getContext(\"2d\");\n\n        tempCanvas.width = canvas.width;\n        tempCanvas.height = canvas.height;\n\n        // put the modified pixels on the temp canvas\n        tempCtx.drawImage(canvas, 0, 0, canvas.width, canvas.height);\n\n        // use the tempCanvas.toDataURL to create an img object\n        var img = new Image();\n        img.onload = () => {\n            resolve(img)\n        };\n        img.src = tempCanvas.toDataURL();\n    });\n};\n\nexport function hexToRgbaObject(hex, opacity = 1) {\n    var c;\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n        c = hex.substring(1).split('');\n        if (c.length === 3) {\n            c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n        }\n        c = '0x' + c.join('');\n        return {\n            r: (c >> 16) & 255,\n            g: (c >> 8) & 255,\n            b: c & 255,\n            a: Math.round(255 * opacity)\n        };\n    }\n    throw new Error('Bad Hex');\n}\n\nexport function hexToRgbaString(hex, opacity) {\n    var c = hexToRgbaObject(hex, opacity);\n    return `rgba(${c.r},${c.g},${c.b},${c.a})`\n}","import React from 'react';\nimport Color2 from \"color\";\nimport {randomInteger} from \"./utils\";\n\n\nlet tp = new Array(1000);\n\nfor (let i = 0; i < 1000; i++) {\n    let color;\n    do {\n        const r = randomInteger(150, 180);\n        const g = randomInteger(40, 60);\n        const b = randomInteger(200, 250);\n        color = `rgb(${r},${g},${b})`\n    } while (tp.indexOf(color) !== -1)\n    tp[i] = color;\n}\n\nconsole.log(tp);\n\n\nexport class Color extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        const {value} = props;\n\n        console.log(Color2(value.value).hsl());\n\n        this.state = {\n            value: Color2(value.value).hsl(),\n            colors: [],\n            p1000: 150,\n            palette: false\n        };\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.value.value !== this.props.value.value)\n            this.setState({\n                value: Color2(nextProps.value.value).hsl()\n            });\n    }\n\n\n    handleValueChange = e => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, value: e.target.value});\n    };\n    handleChoseColor = c => e => {\n        console.log(c)\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, value: c});\n    };\n\n    handleChangeHSL = (i) => e => {\n        const val = +e.target.value;\n        this.setState(state => {\n            let value = [state.value.color[0], state.value.color[1], state.value.color[2]];\n            value[i] = val;\n            return {\n                value: Color2.hsl(value)\n            }\n        }, () => {\n\n            const {onChange, value} = this.props;\n\n            onChange && onChange({...value, value: this.state.value.hex()});\n        });\n\n\n    };\n\n    p1000 = (e) => {\n        const delta = (this.state.p1000/4 - 67 + 100) % 100;\n\n        this.setState(state => {\n            const colors = new Array(1000);\n            for (let i = 0; i < 1000; i++) {\n                let color;\n                do {\n                    const r = randomInteger(Math.max(265 - delta * 3, 0), Math.min(280 + delta * 3, 359));\n                    const g = randomInteger(Math.max(60 - delta * delta, 0), Math.min(100 + delta * delta, 100));\n                    const b = randomInteger(Math.max(25 - delta / randomInteger(-20, 20), 0), Math.min(75 + delta / randomInteger(-20, 20), 100));\n                    color = Color2.hsl([r, g, b]).hex();\n                } while (colors.indexOf(color) !== -1)\n                colors[i] = color;\n            }\n            return {\n                colors\n            }\n        })\n    };\n\n    p1000change = e => {\n        const delta = +e.target.value;\n        this.setState({p1000: delta});\n    };\n\n    togglePalette = e => this.setState(state => ({palette: !state.palette}))\n\n    render() {\n        const {value} = this.props;\n        return (\n            <div className={\"color\"}>\n                <div>color</div>\n                <div className={\"flex\"}>\n                    <div className={\"colorValue\"} style={{\n                        backgroundColor: value.value\n                    }}/>\n                    {/*<input*/}\n                    {/*type=\"color\"*/}\n                    {/*value={value.value}*/}\n                    {/*onChange={this.handleValueChange}/>*/}\n                    <input type={\"range\"} min={0} max={359} step={1}\n                           onChange={this.handleChangeHSL(0)}\n                           value={this.state.value.color[0]}/>\n                    <input type={\"range\"} min={0} max={100} step={1}\n                           onChange={this.handleChangeHSL(1)}\n                           value={this.state.value.color[1]}/>\n                    <input type={\"range\"} min={0} max={100} step={1}\n                           onChange={this.handleChangeHSL(2)}\n                           value={this.state.value.color[2]}/>\n                    <div>\n                        <button onClick={this.togglePalette}>p</button>\n                    </div>\n                </div>\n                {this.state.palette && <div className={\"randomnes\"}>\n                    <div className={\"flex\"}>\n                        <button onClick={this.p1000} className={\"randomnes-b\"}>r</button>\n                        <input type={\"range\"} min={0} max={400} step={1} onChange={this.p1000change}\n                               value={this.state.p1000}/>\n                    </div>\n                    <div className={\"palette\"}>\n                        {this.state.colors.map(p => (\n                            <div\n                                onClick={this.handleChoseColor(p)}\n                                key={p}\n                                style={{\n                                    backgroundColor: p\n                                }}/>\n                        ))}\n                    </div>\n                </div>}\n            </div>\n        );\n    }\n}","import React from \"react\";\n\nexport class Select extends React.PureComponent {\n    handleChose = value => e => {\n\n        const {onChange} = this.props;\n        onChange && onChange(value);\n    };\n    render() {\n        const {value, items} = this.props;\n        return (\n            <div>\n                {items.map(item => (\n                    <button\n                        className={\"buttonControle\"}\n                        key={item}\n                        onClick={this.handleChose(item)}>{item + (item === value ? \"*\" : \"\")}</button>))}\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport {BrushTypes, Fills} from \"./utils\";\nimport {Select} from \"./Select\";\n\nexport class Brush extends React.PureComponent {\n\n    handleSizeChange = e => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({\n            ...value,\n            size: e.target.value\n        });\n    };\n\n    handleOpacityChang = e => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, opacity: e.target.value});\n    };\n\n    selectType = type => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, type});\n    };\n\n    render() {\n        const {value} = this.props;\n        return (\n            <div className={\"brush\"}>\n                <div>brush</div>\n                <div className={\"brushbody\"}>\n                    <input type=\"range\" min={1} max={100} value={value.size} onChange={this.handleSizeChange}/>\n                    <input\n                        type=\"range\"\n                        min={0} max={1} step={0.05}\n                        value={value.opacity}\n                        onChange={this.handleOpacityChang}/>\n\n                    <Select\n                        items={Object.values(BrushTypes)}\n                        value={value.type}\n                        onChange={this.selectType}/>\n                </div>\n\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport {Canvas} from \"./Canvas\";\nimport {createImage, ResizeType} from \"./utils\";\n\n\nconst nextType = {\n    zero: \"nn\",\n    nn: \"bi\",\n    bi: \"zero\"\n};\n\nexport class PatternEditor extends React.Component {\n\n    state = {\n        mask: false\n    };\n\n    componentDidMount() {\n        this.updateMaskedImage();\n    }\n\n    updateMaskedImage = () => {\n        try {\n            const {onChange, value} = this.props;\n\n            const ctx = this.refs[\"canvasMasked\"].getCtx();\n\n            ctx.putImageData(this.refs[\"canvasMask\"].getImageData(), 0, 0);\n            ctx.globalCompositeOperation = \"source-in\";\n            ctx.drawImage(this.refs.canvas.canvas, 0, 0, value.w, value.h);\n\n\n            createImage(ctx.canvas).then(img => onChange && onChange({...this.props.value, imageMasked: img}));\n            createImage(this.refs[\"canvasMask\"].canvas).then(img => onChange && onChange({\n                ...this.props.value,\n                imageMask: img\n            }));\n\n        } catch (e) {\n        }\n    };\n\n    maskToggle = e => this.setState(state => ({mask: !state.mask}));\n\n    sizeChangeHandler = s => e => {\n        const {onChange, value} = this.props;\n        const size = +e.target.value || 1;\n        onChange && onChange({...value, [s]: size});\n        this.updateMaskedImage();\n    };\n    mirrorChangeHandler = name => e => {\n        const {onChange, value} = this.props;\n        onChange && onChange({...value, [name]: !value[name]});\n    };\n    imageChangeHandler = image => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, image});\n        this.updateMaskedImage();\n    };\n    maskChangeHandler = mask => {\n        const {onChange, value} = this.props;\n        onChange && onChange({...value, mask});\n        this.updateMaskedImage();\n    };\n    resizeTypeChangeHandler = e => {\n        const {onChange, value} = this.props;\n        onChange && onChange({...value, resizeType: nextType[value.resizeType]});\n    };\n    resizeTypeChangeHandler = e => {\n        const {onChange, value} = this.props;\n        onChange && onChange({...value, resizeType: nextType[value.resizeType]});\n    };\n\n    render() {\n        const {value, onPatternDraw, onMaskDraw, onPatternClick, onMaskClick, chosen, onChose} = this.props;\n        return (\n            <div className={\"patternEditor\"}>\n                <div className={value.w < 63 ? \"canvases\" : \"canvases-col\"}>\n                    <Canvas ref=\"canvas\" resize={ResizeType[value.resizeType]}\n                            value={value.image}\n                            width={value.w} height={value.h}\n                            onDraw={onPatternDraw}\n                            onClick={onPatternClick}\n                            onChange={this.imageChangeHandler}/>\n                    <div style={{display: !this.state.mask ? \"none\" : \"\"}}>\n                        <Canvas ref=\"canvasMask\"\n                                resize={ResizeType[value.resizeType === \"bi\" ? \"nn\" : value.resizeType]}\n                                value={value.mask}\n                                width={value.w} height={value.h}\n                                onDraw={onMaskDraw}\n                                onClick={onMaskClick}\n                                onChange={this.maskChangeHandler}/>\n                    </div>\n                    <div style={{display: !this.state.mask ? \"none\" : \"\"}}>\n                        <Canvas ref=\"canvasMasked\"\n                                readonly\n                                resize={ResizeType[value.resizeType === \"bi\" ? \"nn\" : value.resizeType]}\n                                value={value.masked}\n                                width={value.w} height={value.h}/>\n                    </div>\n                </div>\n                <div className={\"btns\"}>\n                    <button onClick={onChose} style={{\n                        visibility: chosen ? \"visible\" : \"\"\n                    }}>c</button>\n                    <button onClick={this.maskToggle}>m</button>\n                    <button onClick={this.resizeTypeChangeHandler} className={'resizeType'}>{value.resizeType}</button>\n                    <input type=\"number\" step={1} min={1} max={200} value={value.w}\n                           onChange={this.sizeChangeHandler('w')}/>\n                    <input type=\"number\" step={1} min={1} max={200} value={value.h}\n                           onChange={this.sizeChangeHandler('h')}/>\n                    <input type=\"checkbox\" value={value.xMirror} onChange={this.mirrorChangeHandler('xMirror')}/>\n                    <input type=\"checkbox\" value={value.yMirror} onChange={this.mirrorChangeHandler('yMirror')}/>\n                </div>\n            </div>\n        );\n    }\n}","\n\n\nexport function floodfill(data, x, y, fillcolor, tolerance, width, height) {\n\n    var length = data.length;\n    var Q = [];\n    var i = (x + y * width) * 4;\n    var e = i, w = i, me, mw, w2 = width * 4;\n\n    var targetcolor = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\n    console.log(targetcolor, fillcolor);\n\n    if (!pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n        return false;\n    }\n    Q.push(i);\n    let kkk = 0;\n    while (Q.length) {\n        kkk++;\n        i = Q.pop();\n        let a = 0;\n        if (pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n            e = i;\n            w = i;\n            mw = parseInt(i / w2) * w2 - 1; //left bound\n            me = mw + w2 - 1;               //right bound\n\n\n            while (mw < w && mw < (w -= 4) && pixelCompareAndSet(w, targetcolor, fillcolor, data, length, tolerance, width)) {a++} //go left until edge hit\n            while (me > e && me > (e += 4) && pixelCompareAndSet(e, targetcolor, fillcolor, data, length, tolerance, width)) {a++} //go right until edge hit\n            for (var j = w + 4; j < e; j += 4) {\n                if (j - w2 >= 0 && pixelCompare(j - w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j - w2); //queue y-1\n                if (j + w2 < length && pixelCompare(j + w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j + w2); //queue y+1\n            }\n        }\n        //if (kkk > 30000) return data;\n        //console.log(kkk, a);\n    }\n    return data;\n}\n\nfunction pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width) {\n    if (i < 0 || i >= length) return false; //out of bounds\n    if (data[i + 3] === 0 && fillcolor.a > 0) return true;  //surface is invisible and fill is visible\n\n    if (\n        Math.abs(targetcolor[3] - fillcolor.a) <= tolerance &&\n        Math.abs(targetcolor[0] - fillcolor.r) <= tolerance &&\n        Math.abs(targetcolor[1] - fillcolor.g) <= tolerance &&\n        Math.abs(targetcolor[2] - fillcolor.b) <= tolerance\n    ) return false; //target is same as fill\n\n    if (\n        (targetcolor[3] === data[i + 3]) &&\n        (targetcolor[0] === data[i]) &&\n        (targetcolor[1] === data[i + 1]) &&\n        (targetcolor[2] === data[i + 2])\n    ) return true; //target matches surface\n\n    if (\n        Math.abs(targetcolor[3] - data[i + 3]) <= (tolerance) &&\n        Math.abs(targetcolor[0] - data[i]) <= tolerance &&\n        Math.abs(targetcolor[1] - data[i + 1]) <= tolerance &&\n        Math.abs(targetcolor[2] - data[i + 2]) <= tolerance\n    ) return true; //target to surface within tolerance\n\n    return false; //no match\n}\n\nfunction pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width) {\n    if (pixelCompare(i, targetcolor, fillcolor, data, length, tolerance)) {\n        //fill the color\n        data[i] = fillcolor.r;\n        data[i + 1] = fillcolor.g;\n        data[i + 2] = fillcolor.b;\n        data[i + 3] = fillcolor.a;\n        return true;\n    }\n    return false;\n}","export function floodfillmask(data, x, y, maskImageData, tolerance, width, height) {\n\n    const fillcolor = {\n        r: 255,\n        g: 0,\n        b: 0,\n        a: 255\n    };\n    var length = data.length;\n    var Q = [];\n    var P = [];\n    var i = (x + y * width) * 4;\n    var e = i, w = i, me, mw, w2 = width * 4;\n\n    var targetcolor = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\n    const oldData = new Uint8ClampedArray(data);\n\n    if (!pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n        return false;\n    }\n    Q.push(i);\n    let kkk = 0;\n    while (Q.length) {\n        kkk++;\n        i = Q.pop();\n        if (pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n            P.push(i);\n            e = i;\n            w = i;\n            mw = parseInt(i / w2) * w2 - 1; //left bound\n            me = mw + w2 - 1;               //right bound\n            while (mw < w && mw < (w -= 4) && pixelCompareAndSet(w, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(w)\n            } //go left until edge hit\n            while (me > e && me > (e += 4) && pixelCompareAndSet(e, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(e)\n            } //go right until edge hit\n            for (var j = w + 4; j < e; j += 4) {\n                if (j - w2 >= 0 && pixelCompare(j - w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j - w2); //queue y-1\n                if (j + w2 < length && pixelCompare(j + w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j + w2); //queue y+1\n            }\n        }\n    }\n\n    console.log(kkk);\n\n    P.forEach(p => {\n\n        var x = (p / 4) % width % maskImageData.width;\n        var y = Math.floor((p / 4) / width) % maskImageData.height;\n\n\n        var j = (x + y * maskImageData.width) * 4;\n        var targetcolor = [0, 0, 0, 255];\n        var maskcolor = [maskImageData.data[j], maskImageData.data[j + 1], maskImageData.data[j + 2], maskImageData.data[j + 3]];\n\n        // console.log(maskcolor);\n        if (maskcolor[0] === 0 && maskcolor[1] === 0 && maskcolor[2] === 0 && maskcolor[3] === 255) {\n            //black\n            data[p] = targetcolor[0];\n            data[p + 1] = targetcolor[1];\n            data[p + 2] = targetcolor[2];\n            data[p + 3] = targetcolor[3];\n        } else {\n            data[p] = oldData[p];\n            data[p + 1] = oldData[p + 1];\n            data[p + 2] = oldData[p + 2];\n            data[p + 3] = oldData[p + 3];\n        }\n    });\n\n\n    return data;\n}\n\nexport function floodfillpatternmask(data, x, y, patternImageData, maskImageData, tolerance, width, height, xMirror, yMirror) {\n\n    const getPatX = !xMirror\n        ? (i, width, pWidth) => (i / 4) % width % pWidth\n        : (i, width, pWidth) => {\n            const x = (i / 4) % width;\n\n            return Math.trunc(x / pWidth) % 2 === 0\n                ? x % pWidth\n                : pWidth - x % pWidth;\n        };\n    const getPatY = !yMirror\n        ? (i, width, pHeight) => y = Math.floor((i / 4) / width) % pHeight\n        : (i, width, pHeight) => {\n            const y =  Math.floor((i / 4) / width);\n\n            return Math.trunc(y / pHeight) % 2 === 0\n                ? y % pHeight\n                : pHeight - y % pHeight;\n        };\n    const fillcolor = {\n        r: 255,\n        g: 0,\n        b: 0,\n        a: 255\n    };\n    var length = data.length;\n    var Q = [];\n    var P = [];\n    var i = (x + y * width) * 4;\n    var e = i, w = i, me, mw, w2 = width * 4;\n\n    var targetcolor = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\n    const oldData = new Uint8ClampedArray(data);\n\n    if (!pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n        return false;\n    }\n    Q.push(i);\n    let kkk = 0;\n    while (Q.length) {\n        kkk++;\n        i = Q.pop();\n        if (pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n            P.push(i);\n            e = i;\n            w = i;\n            mw = parseInt(i / w2) * w2 - 1; //left bound\n            me = mw + w2 - 1;               //right bound\n            while (mw < w && mw < (w -= 4) && pixelCompareAndSet(w, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(w)\n            } //go left until edge hit\n            while (me > e && me > (e += 4) && pixelCompareAndSet(e, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(e)\n            } //go right until edge hit\n            for (var j = w + 4; j < e; j += 4) {\n                if (j - w2 >= 0 && pixelCompare(j - w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j - w2); //queue y-1\n                if (j + w2 < length && pixelCompare(j + w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j + w2); //queue y+1\n            }\n        }\n    }\n\n    console.log(kkk);\n\n    P.forEach(p => {\n\n        var x = getPatX(p, width, patternImageData.width);\n        var y = getPatY(p, width, patternImageData.height);\n\n\n        var j = (x + y * patternImageData.width) * 4;\n        var targetcolor = [patternImageData.data[j], patternImageData.data[j + 1], patternImageData.data[j + 2], patternImageData.data[j + 3]];\n        var maskcolor = [maskImageData.data[j], maskImageData.data[j + 1], maskImageData.data[j + 2], maskImageData.data[j + 3]];\n\n        // console.log(maskcolor);\n        if (maskcolor[0] === 0 && maskcolor[1] === 0 && maskcolor[2] === 0 && maskcolor[3] === 255) {\n            //\n            data[p] = targetcolor[0];\n            data[p + 1] = targetcolor[1];\n            data[p + 2] = targetcolor[2];\n            data[p + 3] = targetcolor[3];\n        } else {\n            data[p] = oldData[p];\n            data[p + 1] = oldData[p + 1];\n            data[p + 2] = oldData[p + 2];\n            data[p + 3] = oldData[p + 3];\n        }\n    });\n\n\n    return data;\n}\n\nexport function floodfillpattern(data, x, y, patternImageData, tolerance, width, height) {\n\n    const fillcolor = {\n        r: 255,\n        g: 0,\n        b: 0,\n        a: 255\n    };\n    var length = data.length;\n    var Q = [];\n    var P = [];\n    var i = (x + y * width) * 4;\n    var e = i, w = i, me, mw, w2 = width * 4;\n\n    var targetcolor = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\n    if (!pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n        return false;\n    }\n    Q.push(i);\n    let kkk = 0;\n    while (Q.length) {\n        kkk++;\n        i = Q.pop();\n        if (pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n            P.push(i);\n            e = i;\n            w = i;\n            mw = parseInt(i / w2) * w2 - 1; //left bound\n            me = mw + w2 - 1;               //right bound\n            while (mw < w && mw < (w -= 4) && pixelCompareAndSet(w, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(w)\n            } //go left until edge hit\n            while (me > e && me > (e += 4) && pixelCompareAndSet(e, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(e)\n            } //go right until edge hit\n            for (var j = w + 4; j < e; j += 4) {\n                if (j - w2 >= 0 && pixelCompare(j - w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j - w2); //queue y-1\n                if (j + w2 < length && pixelCompare(j + w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j + w2); //queue y+1\n            }\n        }\n    }\n\n    console.log(kkk);\n\n    P.forEach(p => {\n\n        var x = (p / 4) % width % patternImageData.width;\n        var y = Math.floor((p / 4) / width) % patternImageData.height;\n\n\n        var j = (x + y * patternImageData.width) * 4;\n        var targetcolor = [patternImageData.data[j], patternImageData.data[j + 1], patternImageData.data[j + 2], patternImageData.data[j + 3]];\n\n\n        data[p] = targetcolor[0];\n        data[p + 1] = targetcolor[1];\n        data[p + 2] = targetcolor[2];\n        data[p + 3] = targetcolor[3];\n    });\n\n\n    return data;\n}\n\nfunction pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width) {\n    if (i < 0 || i >= length) return false; //out of bounds\n    if (data[i + 3] === 0 && fillcolor.a > 0) return true;  //surface is invisible and fill is visible\n\n    if (\n        Math.abs(targetcolor[3] - fillcolor.a) <= tolerance &&\n        Math.abs(targetcolor[0] - fillcolor.r) <= tolerance &&\n        Math.abs(targetcolor[1] - fillcolor.g) <= tolerance &&\n        Math.abs(targetcolor[2] - fillcolor.b) <= tolerance\n    ) return false; //target is same as fill\n\n    if (\n        (targetcolor[3] === data[i + 3]) &&\n        (targetcolor[0] === data[i]) &&\n        (targetcolor[1] === data[i + 1]) &&\n        (targetcolor[2] === data[i + 2])\n    ) return true; //target matches surface\n\n    if (\n        Math.abs(targetcolor[3] - data[i + 3]) <= (255 - tolerance) &&\n        Math.abs(targetcolor[0] - data[i]) <= tolerance &&\n        Math.abs(targetcolor[1] - data[i + 1]) <= tolerance &&\n        Math.abs(targetcolor[2] - data[i + 2]) <= tolerance\n    ) return true; //target to surface within tolerance\n\n    return false; //no match\n}\n\nfunction pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width) {\n    if (pixelCompare(i, targetcolor, fillcolor, data, length, tolerance)) {\n        //fill the color\n        data[i] = fillcolor.r;\n        data[i + 1] = fillcolor.g;\n        data[i + 2] = fillcolor.b;\n        data[i + 3] = fillcolor.a;\n        return true;\n    }\n    return false;\n}","import React from 'react';\nimport {Fills, Tools} from \"./utils\";\nimport {Select} from \"./Select\";\n\nexport class Paint extends React.PureComponent {\n\n    handlePaintFillChose = fill => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({\n            ...value,\n            fill\n        });\n    };\n\n    render() {\n        const {value} = this.props;\n        return (\n            <div className={\"paint\"}>\n                <div>paint</div>\n                <Select\n                    items={Object.values(Fills)}\n                    value={value.fill}\n                    onChange={this.handlePaintFillChose}/>\n\n            </div>\n        );\n    }\n}","import React from \"react\";\n\nexport class Line extends React.PureComponent {\n\n    handleSizeChange = e => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({\n            ...value,\n            size: e.target.value\n        });\n    };\n\n    handleOpacityChang = e => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, opacity: e.target.value});\n    };\n\n    render() {\n        const {value} = this.props;\n        return (\n            <div className={\"line\"}>\n                <div>line</div>\n                <input type=\"range\" min={1} max={100} value={value.size} onChange={this.handleSizeChange}/>\n                <input\n                    type=\"range\"\n                    min={0} max={1} step={0.05}\n                    value={value.opacity}\n                    onChange={this.handleOpacityChang}/>\n            </div>\n        );\n    }\n}","import React from \"react\";\n\nexport class Enter extends React.PureComponent {\n    order = [0, 2, 3, 0];\n    state = {\n        i: 0\n    };\n    handleMouseEnter = i => e => {\n        if (i === this.order[this.state.i]) {\n            this.setState(state => ({i: state.i + 1}), () => {\n                if (this.state.i === 4) {\n                    console.log(111111111)\n                }\n            })\n        } else {\n            this.setState(state => ({i: 0}), () => {\n                console.log(2222222222)\n            })\n        }\n    };\n\n    render() {\n        return (\n            <div className={\"enter\"}>\n                {[0, 1, 2, 3].map(i => (\n                    <div className={\"enter-door\"} onMouseEnter={this.handleMouseEnter(i)}></div>\n                ))}\n            </div>\n        );\n    }\n\n}","import React, {Component} from 'react';\nimport './App.css';\nimport {Canvas} from \"./components/Canvas\";\nimport {Brush} from \"./components/Brush\";\nimport {Color} from \"./components/Color\";\nimport {PatternEditor} from \"./components/PatternEditor\";\nimport {floodfill} from \"./components/floodfill\";\nimport {floodfillmask, floodfillpatternmask} from \"./components/floodfillpattern\";\nimport {\n    Tools,\n    Fills,\n    hexToRgbaObject,\n    hexToRgbaString,\n    BrushTypes,\n    createPattern,\n    circle,\n    cutCircle, whiteSheet, randomInteger, throttled\n} from \"./components/utils\";\nimport {Paint} from \"./components/Paint\";\nimport {Line} from \"./components/Line\";\nimport {HotKeys, GlobalHotKeys} from \"react-hotkeys\";\nimport Color2 from \"color\";\nimport {Select} from \"./components/Select\";\nimport _omit from \"lodash/omit\";\nimport {Enter} from \"./components/Enter\";\n\n/**\n *\n *\n *\n *\n *\n *\n *\n * изменение мышкой с кнопкой\n *\n *\n *\n *\n *  расстояние между кистями\n *\n\n mouse trottling\n\n отмена операции (история)\n *\n * */\n\n\nclass App extends Component {\n\n\n    componentDidMount() {\n\n\n\n        document.addEventListener(\"mousemove\", throttled(100, this.move));\n        document.addEventListener(\"keydown\", this.keydownHandler);\n        document.addEventListener(\"keyup\", this.keyupHandler);\n\n        this.setState(state => ({\n            patterns: state.patterns.map(createPattern(this.refs.canvas.ctx)),\n            canvas: {...state.canvas, image: whiteSheet(this.refs.canvas.ctx)(state.canvas)}\n        }));\n        setTimeout(() => console.log(this.state), 0)\n    }\n\n    state = {\n        keys: {},\n        canvas: {\n            w: 400,\n            h: 400,\n        },\n        brush: {\n            size: 8,\n            opacity: 1,\n            type: BrushTypes.Circle\n        },\n        line: {\n            size: 8,\n            opacity: 1,\n        },\n        color: {\n            value: '#000000'\n        },\n        paint: {\n            fill: Fills.Color\n        },\n        patterns: [{\n            w: 50,\n            h: 62,\n            resizeType: \"zero\"\n        }, {\n            w: 50,\n            h: 62,\n            resizeType: \"zero\"\n        }],\n        currentPattern: 0,\n        currentTool: Tools.Brush\n    };\n\n    getRGBAColor = () =>\n        hexToRgbaObject(this.state.color.value, this.state.color.opacity);\n\n    handleCanvasChange = image => this.setState(state => ({canvas: {...state.canvas, image}}));\n\n    handleBrushChange = brush => this.setState({brush}, () => console.log(this.state.brush));\n    handleColorChange = color => this.setState({color}, () => console.log(this.state.color));\n    handlePaintChange = paint => this.setState({paint}, () => console.log(this.state.color));\n    handleLineChange = line => this.setState({line}, () => console.log(this.state.color));\n\n    handlePatternChange = (n) => pattern => {\n        this.setState(state => ({\n            patterns: state.patterns.map((p, i) => i === n ? pattern : p)\n        }), () => console.log(this.state.patterns[n]))\n    };\n    handleAddPattern = e => {\n        this.setState(state => ({\n            patterns: [...state.patterns, createPattern(this.refs.canvas.ctx)({\n                w: 50,\n                h: 50,\n            })]\n        }))\n    };\n\n    handleCurrentPatternChose = pattern => e => this.setState({currentPattern: pattern});\n\n\n    handleToolChose = tool => this.setState({currentTool: tool});\n\n    drawProcessing = (e, ctx, canvas, prevE) => {\n        if (this.state.currentTool === Tools.Brush) {\n            ctx.fillStyle = hexToRgbaString(this.state.color.value);\n            ctx.globalAlpha = this.state.brush.opacity;\n\n            if (this.state.brush.type === BrushTypes.Square) {\n                ctx.fillRect(e.offsetX - this.state.brush.size / 2, e.offsetY - this.state.brush.size / 2, this.state.brush.size, this.state.brush.size);\n            } else if (this.state.brush.type === BrushTypes.Circle) {\n                ctx.beginPath();\n                ctx.arc(e.offsetX, e.offsetY, this.state.brush.size / 2, 0, 2 * Math.PI);\n                ctx.fill();\n            } else if (this.state.brush.type === BrushTypes.Pattern) {\n                const p = this.state.patterns[this.state.currentPattern].image;\n                const i = this.state.patterns[this.state.currentPattern].imageMasked;\n                ctx.drawImage(i, e.offsetX - p.width / 2, e.offsetY - p.height / 2, p.width, p.height);\n            }\n            ctx.globalAlpha = 1;\n\n        } else if (this.state.currentTool === Tools.Line) {\n            if (prevE) {\n                ctx.globalAlpha = this.state.line.opacity;\n                ctx.beginPath();\n                ctx.moveTo(prevE.offsetX, prevE.offsetY);\n                ctx.lineTo(e.offsetX, e.offsetY);\n                ctx.strokeStyle = this.state.color.value;\n                ctx.lineWidth = this.state.line.size;\n                ctx.stroke();\n                ctx.globalAlpha = 1;\n                ctx.closePath();\n            }\n        }\n    };\n\n    clickProcessing = (e, ctx, canvas) => {\n        if (this.state.currentTool === Tools.Paint) {\n            if (this.state.paint.fill === Fills.Color) {\n                console.log(1);\n                const imda = ctx.getImageData(0, 0, this.state.canvas.w, this.state.canvas.h);\n\n                let data = imda.data;\n                let width = imda.width;\n                let height = imda.height;\n                let color = hexToRgbaObject(this.state.color.value);\n\n                floodfill(data, e.offsetX, e.offsetY, color, 0, width, height);\n\n                ctx.putImageData(imda, 0, 0);\n            } else if (this.state.paint.fill === Fills.Pattern) {\n                const imda = ctx.getImageData(0, 0, this.state.canvas.w, this.state.canvas.h);\n\n                let data = imda.data;\n                let width = imda.width;\n                let height = imda.height;\n\n                const pat = this.state.patterns[this.state.currentPattern];\n\n                floodfillpatternmask(data, e.offsetX, e.offsetY, pat.image, pat.mask, 0, width, height, pat.xMirror, pat.yMirror);\n\n                ctx.putImageData(imda, 0, 0);\n            }\n        }\n    };\n\n    maskDrawProcessing = (e, ctx, canvas, prevE) => {\n        if (this.state.currentTool === Tools.Brush) {\n            if (this.state.brush.type === BrushTypes.Pattern) {\n                const p = this.state.patterns[this.state.currentPattern].mask;\n                const i = this.state.patterns[this.state.currentPattern].imageMask;\n                ctx.drawImage(i, e.offsetX - p.width / 2, e.offsetY - p.height / 2, p.width, p.height);\n            } else {\n                if (this.state.color.value.toLocaleLowerCase() === \"#ffffff\") {\n                    if (this.state.brush.type === BrushTypes.Square) {\n                        ctx.clearRect(e.offsetX - this.state.brush.size / 2, e.offsetY - this.state.brush.size / 2, this.state.brush.size, this.state.brush.size);\n                    } else if (this.state.brush.type === BrushTypes.Circle) {\n                        cutCircle(ctx, e.offsetX, e.offsetY, this.state.brush.size / 2);\n                    }\n                } else {\n                    ctx.fillStyle = \"#000000\";\n                    if (this.state.brush.type === BrushTypes.Square) {\n                        ctx.fillRect(e.offsetX - this.state.brush.size / 2, e.offsetY - this.state.brush.size / 2, this.state.brush.size, this.state.brush.size);\n                    } else if (this.state.brush.type === BrushTypes.Circle) {\n                        circle(ctx, e.offsetX, e.offsetY, this.state.brush.size / 2);\n                    }\n                }\n            }\n        } else if (this.state.currentTool === Tools.Line) {\n            if (prevE) {\n\n                if (this.state.color.value.toLocaleLowerCase() === \"#ffffff\") {\n\n                    ctx.globalCompositeOperation = 'destination-out';\n                    ctx.beginPath();\n                    ctx.moveTo(prevE.offsetX, prevE.offsetY);\n                    ctx.lineTo(e.offsetX, e.offsetY);\n                    ctx.strokeStyle = 'black';\n                    ctx.lineWidth = this.state.line.size;\n                    ctx.stroke();\n                    ctx.closePath();\n                    ctx.globalCompositeOperation = \"source-over\";\n                } else {\n                    ctx.beginPath();\n                    ctx.moveTo(prevE.offsetX, prevE.offsetY);\n                    ctx.lineTo(e.offsetX, e.offsetY);\n                    ctx.strokeStyle = 'black';\n                    ctx.lineWidth = this.state.line.size;\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n        }\n    };\n\n    maskClickProcessing = (e, ctx, canvas) => {\n        if (this.state.currentTool === Tools.Paint) {\n            if (this.state.paint.fill === Fills.Color) {\n                const imda = ctx.getImageData(0, 0, this.state.canvas.w, this.state.canvas.h);\n\n                let data = imda.data;\n                let width = imda.width;\n                let height = imda.height;\n                let color = this.state.color.value.toLocaleLowerCase() === \"#ffffff\"\n                    ? {r: 0, g: 0, b: 0, a: 0}\n                    : {r: 0, g: 0, b: 0, a: 255}\n\n                floodfill(data, e.offsetX, e.offsetY, color, 55, width, height);\n\n                ctx.putImageData(imda, 0, 0);\n            } else if (this.state.paint.fill === Fills.Pattern) {\n                const imda = ctx.getImageData(0, 0, this.state.canvas.w, this.state.canvas.h);\n\n                let data = imda.data;\n                let width = imda.width;\n                let height = imda.height;\n\n                floodfillmask(data, e.offsetX, e.offsetY, this.state.patterns[this.state.currentPattern].mask, 0, width, height);\n\n                ctx.putImageData(imda, 0, 0);\n            }\n        }\n    };\n\n    save = () => {\n        var dataURL = this.refs.canvas.canvas.toDataURL(\"image/jpeg\");\n        var link = document.createElement(\"a\");\n        document.body.appendChild(link); // Firefox requires the link to be in the body :(\n        link.href = dataURL;\n        link.download = \"ZzZzZzZ.jpg\";\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    keyMap = {\n        PREV: \"1\",\n        NEXT: \"2\",\n        BRUSH: \"q\",\n        BRUSH_S: \"w\",\n        BRUSH_C: \"e\",\n        BRUSH_P: \"r\",\n        PAINT: \"a\",\n        PAINT_C: \"s\",\n        PAINT_P: \"d\",\n        LINE: \"z\",\n        WHITE: \"x\",\n        BLACK: \"c\",\n        RAND: \"v\",\n\n    };\n\n    hotKeysHandlers = {\n        NEXT: () =>\n            this.setState(state => ({currentPattern: (state.currentPattern + 1) % state.patterns.length})),\n        PREV: () =>\n            this.setState(state => ({currentPattern: (state.currentPattern - 1 + state.patterns.length) % state.patterns.length})),\n        BRUSH: () =>\n            this.setState({currentTool: Tools.Brush}),\n        BRUSH_S: () =>\n            this.setState(state => ({brush: {...state.brush, type: BrushTypes.Square}})),\n        BRUSH_C: () =>\n            this.setState(state => ({brush: {...state.brush, type: BrushTypes.Circle}})),\n        BRUSH_P: () =>\n            this.setState(state => ({brush: {...state.brush, type: BrushTypes.Pattern}})),\n        PAINT: () =>\n            this.setState({currentTool: Tools.Paint}),\n        PAINT_C: () =>\n            this.setState(state => ({paint: {...state.paint, fill: Fills.Color}})),\n        PAINT_P: () =>\n            this.setState(state => ({paint: {...state.paint, fill: Fills.Pattern}})),\n        LINE: () =>\n            this.setState({currentTool: Tools.Line}),\n        WHITE: () =>\n            this.setState(state => ({color: {...state.color, value: \"#ffffff\"}})),\n        BLACK: () =>\n            this.setState(state => ({color: {...state.color, value: \"#000000\"}})),\n        RAND: () =>\n            this.setState(state => {\n                const r = randomInteger(0, 255);\n                const g = randomInteger(0, 255);\n                const b = randomInteger(0, 255);\n                const color = Color2.rgb([r, g, b]).hex();\n                return {color: {...state.color, value: color}}\n            }),\n    };\n\n    keydownHandler = e => {\n        const code = e.key.charCodeAt(0);\n        console.log(e);\n\n        if (!this.state.keys[code]) {\n\n            this.setState(state => ({keys: {...state.keys, [code]: true}}), () => console.log(this.state.keys));\n        }\n    };\n\n    keyupHandler = (e) => {\n        const code = e.key.charCodeAt(0);\n\n        this.setState(state => ({keys: _omit(state.keys, code)}), () => console.log(this.state.keys));\n    };\n\n    move = e => {\n        if (this.state.keys[70] || this.state.keys[102]) {\n\n        }\n    }\n\n    render() {\n        return (\n\n            <GlobalHotKeys keyMap={this.keyMap} handlers={this.hotKeysHandlers}>\n                <HotKeys>\n                    <div className={\"all\"}>\n                        <div className=\"App\">\n                            <div className={\"controls\"}>\n                                <div className={\"kunteynir\"}>\n                                    {/*PatternCurr:{Object.keys(this.state.patterns).map(pattern => (*/}\n                                    {/*<button key={pattern}*/}\n                                            {/*onClick={this.handleCurrentPatternChose(pattern)}>{pattern}</button>*/}\n\n                                {/*))}:{this.state.currentPattern}*/}\n\n                                    <Select\n                                        items={Object.values(Tools)}\n                                        value={this.state.currentTool}\n                                        onChange={this.handleToolChose}/>\n                                    {this.state.currentTool === Tools.Brush &&\n                                    <Brush\n                                        value={this.state.brush}\n                                        onChange={this.handleBrushChange}/>}\n                                    {this.state.currentTool === Tools.Paint &&\n                                    <Paint\n                                        value={this.state.paint}\n                                        onChange={this.handlePaintChange}/>}\n                                    {this.state.currentTool === Tools.Line &&\n                                    <Line\n                                        value={this.state.line}\n                                        onChange={this.handleLineChange}/>}\n                                    <Color\n                                        value={this.state.color}\n                                        onChange={this.handleColorChange}/>\n                                </div>\n                            </div>\n                            <div className={\"patterns\"}>\n                                {this.state.patterns.map((pattern, index) => (\n                                    <PatternEditor\n                                        chosen={index === this.state.currentPattern}\n                                        onChose={this.handleCurrentPatternChose(index)}\n                                        key={index}\n                                        onPatternDraw={this.drawProcessing}\n                                        onPatternClick={this.clickProcessing}\n                                        onMaskDraw={this.maskDrawProcessing}\n                                        onMaskClick={this.maskClickProcessing}\n                                        name={index}\n                                        value={pattern}\n                                        onChange={this.handlePatternChange(index)}/>\n                                ))}\n                                <div className={\"patternEditor\"}>\n                                    <Canvas\n                                        ref=\"canvas\"\n                                        width={this.state.canvas.w}\n                                        height={this.state.canvas.h}\n                                        value={this.state.canvas.image}\n                                        onChange={this.handleCanvasChange}\n                                        onClick={this.clickProcessing}\n                                        onDraw={this.drawProcessing}/>\n                                    <div className={\"btns\"}>\n                                        <button onClick={this.handleAddPattern}>+</button>\n                                        <button onClick={this.save}>save</button>\n                                    </div>\n\n                                </div>\n                            </div>\n\n                            <Enter/>\n\n                            {/*<div>*/}\n                            {/*{tp.map(p => (*/}\n                            {/*<div style={{*/}\n                            {/*display: \"inline-block\",*/}\n                            {/*width: 15,*/}\n                            {/*height: 15,*/}\n                            {/*backgroundColor: p*/}\n                            {/*}}/>*/}\n                            {/*))}*/}\n                            {/*</div>*/}\n                        </div>\n                    </div>\n                </HotKeys>\n            </GlobalHotKeys>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}