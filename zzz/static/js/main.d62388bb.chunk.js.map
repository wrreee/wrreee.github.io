{"version":3,"sources":["components/Canvas.js","components/utils.js","components/Color.js","components/Select.js","components/Brush.js","components/Palette.js","components/PatternEditor.js","components/Input.js","components/floodfill.js","components/floodfillpattern.js","components/Paint.js","components/Line.js","components/Enter.js","App.js","serviceWorker.js","index.js"],"names":["Canvas","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","drawing","mouseDownHandler","e","setState","_this$props","props","onDraw","onClick","ctx","canvas","mouseUpHandler","prevE","_this$props2","onChange","width","height","getImageData","mouseLeaveHandler","mouseMoveHandler","setImageData","image","putImageData","drawImage","_this$ctx","getCtx","clear","fillStyle","fillRect","inherits","createClass","key","value","refs","getContext","addEventListener","document","nextProps","_this$props3","resize","imageData","resizeImageData","setTimeout","_this$props4","_this$props5","readonly","react_default","a","createElement","className","ref","React","Component","Tools","Brush","Paint","Line","Fills","Color","Pattern","BrushTypes","Square","Circle","ResizeType","zero","nn","bi","randomInteger","min","max","rand","Math","random","round","createPattern","_ref2","_ref2$w","w","_ref2$h","h","createImageData","i","data","mask","masked","resizeType","cutCircle","context","x","y","radius","globalCompositeOperation","moveTo","beginPath","arc","PI","closePath","fill","circle","createImage","Promise","resolve","reject","tempCanvas","tempCtx","img","Image","onload","src","toDataURL","hexToRgbaObject","hex","c","opacity","undefined","test","substring","split","r","join","g","b","Error","Select","_React$PureComponent","handleChose","_this2","items","map","item","PureComponent","handleSizeChange","objectSpread","size","target","handleOpacityChang","selectType","type","step","Select_Select","values","colors","Palette","handleClick","onPip","edited","_len2","p","_key2","Color2","offsetX","offsetY","slice","floor","handleDraw","delta","j","color","hsl","indexOf","Canvas_Canvas","tp","console","log","handleChoseColor","index","currentColor","handleChangeHSL","val","p1000","palette","p1000change","togglePalette","handlePip","paletteX","paletteY","paletteEdit","style","backgroundColor","Palette_Palette","nextType","PatternEditor","updateMaskedImage","then","imageMasked","imageMask","maskToggle","sizeChangeHandler","s","defineProperty","mirrorChangeHandler","name","imageChangeHandler","maskChangeHandler","resizeTypeChangeHandler","_this$props6","_this$props7","onPatternDraw","onMaskDraw","onPatternClick","onMaskClick","chosen","onChose","react","display","visibility","xMirror","yMirror","floodfill","fillcolor","tolerance","me","mw","Q","w2","targetcolor","pixelCompare","push","kkk","pixelCompareAndSet","pop","parseInt","abs","handlePaintFillChose","Enter","order","handleMouseEnter","onMouseEnter","App","keys","brush","line","paint","patterns","currentPattern","currentTool","getRGBAColor","handleCanvasChange","handleBrushChange","handleColorChange","handlePaintChange","handleLineChange","handlePatternChange","n","pattern","handleAddPattern","toConsumableArray","handleCurrentPatternChose","handleToolChose","tool","drawProcessing","hexToRgbaString","globalAlpha","lineTo","strokeStyle","lineWidth","stroke","clickProcessing","imda","pat","patternImageData","maskImageData","getPatX","pWidth","trunc","getPatY","pHeight","P","oldData","Uint8ClampedArray","forEach","maskcolor","floodfillpatternmask","maskDrawProcessing","toLocaleLowerCase","clearRect","maskClickProcessing","floodfillmask","save","dataURL","link","body","appendChild","href","download","click","removeChild","keyMap","PREV","NEXT","BRUSH","BRUSH_S","BRUSH_C","BRUSH_P","PAINT","PAINT_C","PAINT_P","LINE","WHITE","BLACK","RAND","hotKeysHandlers","rgb","keydownHandler","code","charCodeAt","keyupHandler","_omit","move","delay","fn","lastCall","now","Date","getTime","throttled","_ref","_this3","index_es","handlers","Brush_Brush","Paint_Paint","Line_Line","Color_Color","PatternEditor_PatternEditor","Enter_Enter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d62388bb.chunk.js","sourcesContent":["import React from 'react';\nimport resizeImageData from \"resize-image-data\";\n\nexport class Canvas extends React.Component {\n\n    state = {\n        drawing: false\n    };\n\n    canvas;\n    ctx;\n\n    prevE;\n\n    mouseDownHandler = e => {\n        this.setState({drawing: true});\n\n        const {onDraw, onClick} = this.props;\n\n        onDraw && onDraw(e, this.ctx, this.canvas);\n        onClick && onClick(e, this.ctx, this.canvas);\n    };\n\n    mouseUpHandler = e => {\n        if (this.state.drawing) {\n            this.setState({drawing: false});\n\n            this.prevE = null;\n            const {onChange, width, height} = this.props;\n            onChange && onChange(this.ctx.getImageData(0, 0, width, height));\n        }\n    };\n\n    mouseLeaveHandler = e => {\n        if (this.state.drawing)\n            this.mouseUpHandler();\n    };\n\n    mouseMoveHandler = e => {\n        if (this.state.drawing) {\n            const {onDraw} = this.props;\n\n            onDraw && onDraw(e, this.ctx, this.canvas, this.prevE);\n            this.prevE = e;\n        }\n    };\n\n    componentDidMount() {\n        this.canvas = this.refs.canvas;\n        this.ctx = this.canvas.getContext(\"2d\");\n\n\n        this.canvas.addEventListener(\"mousedown\", this.mouseDownHandler);\n        document.addEventListener(\"mouseup\", this.mouseUpHandler);\n        this.canvas.addEventListener(\"mousemove\", this.mouseMoveHandler);\n        //this.canvas.addEventListener(\"mouseleave\", this.mouseLeaveHandler);\n\n\n        // this.clear();\n        // const {onChange, width, height} = this.props;\n        // onChange && onChange(this.ctx.getImageData(0, 0, width, height));\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if ((nextProps.width !== this.props.width || nextProps.height !== this.props.height)) {\n            const {onChange, width, height, resize} = this.props;\n            let imageData = this.ctx.getImageData(0, 0, width, height);\n            resize && (imageData = resizeImageData(imageData, nextProps.width, nextProps.height, resize));\n            setTimeout(() => onChange && onChange(imageData), 0);\n        }\n        if (this.props.value !== nextProps.value) {\n            if (!nextProps.value) {\n                this.clear();\n                const {onChange, width, height} = this.props;\n                onChange && onChange(this.ctx.getImageData(0, 0, width, height));\n            } else {\n                this.ctx.putImageData(nextProps.value, 0, 0);\n            }\n        }\n    }\n\n    setImageData = image =>\n        this.ctx.putImageData(image, 0, 0);\n\n    drawImage = (...p) =>\n        this.ctx.drawImage(...p);\n    getCtx = () =>\n        this.ctx;\n\n    getImageData = () =>\n        this.ctx.getImageData(0, 0, this.props.width, this.props.height);\n\n    clear = () => {\n        this.ctx.fillStyle = \"#ffffff\";\n        this.ctx.fillRect(0, 0, this.props.width, this.props.height);\n    };\n\n    render() {\n        const {width, height, readonly} = this.props;\n        return (\n            <div className={\"canvas\" + (readonly ? \" readonlyCanvas\" : \"\")}>\n                <canvas ref=\"canvas\" width={width > 0 ? width : 1} height={height > 0 ? height : 1}/>\n            </div>\n        )\n    }\n}","export const Tools = {\n    Brush: 'brush',\n    Paint: 'paint',\n    Line: 'line'\n};\n\nexport const Fills = {\n    Color: 'color',\n    Pattern: 'pattern'\n};\n\nexport const BrushTypes = {\n    Square: 'square',\n    Circle: 'circle',\n    Pattern: 'pattern',\n};\n\nexport const ResizeType = {\n    zero: \"\",\n    nn: \"nearest-neighbor\",\n    bi: \"biliniear-interpolation\"\n};\n\nexport function throttled(delay, fn) {\n    let lastCall = 0;\n    return function (...args) {\n        const now = (new Date).getTime();\n        if (now - lastCall < delay) {\n            return;\n        }\n        lastCall = now;\n        return fn(...args);\n    }\n}\n\nexport function randomInteger(min, max) {\n    var rand = min - 0.5 + Math.random() * (max - min + 1);\n    rand = Math.round(rand);\n    return rand;\n}\n\nexport const whiteSheet = ctx => ({w, h}) => {\n    const image = ctx.createImageData(w, h);\n    for (let i = 0; i < image.data.length; i++)\n        image.data[i] = 255;\n    return image;\n};\n\nexport const createPattern = ctx => ({w = 50, h = 50}) => {\n    const image = ctx.createImageData(w, h);\n    for (let i = 0; i < image.data.length; i++)\n        image.data[i] = 255;\n\n    const mask = ctx.createImageData(w, h);\n    for (let i = 0; i < mask.data.length; i+=4) {\n        mask.data[i] = 0;\n        mask.data[i+1] = 0;\n        mask.data[i +2] = 0;\n        mask.data[i + 3] = 255;\n    }\n    return {\n        w, h,\n        image: image,\n        mask: mask,\n        masked: ctx.createImageData(w, h),\n        resizeType: \"nn\"\n    }\n};\n\nexport const cutCircle = function (context, x, y, radius) {\n    context.globalCompositeOperation = 'destination-out';\n    context.moveTo(x, y);\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, true);\n    context.closePath();\n    context.fill();\n    context.globalCompositeOperation = \"source-over\";\n};\nexport const circle = function (context, x, y, radius) {\n    context.moveTo(x, y);\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, true);\n    context.closePath();\n    context.fill();\n};\n\nexport const createImage = canvas => {\n    return new Promise((resolve, reject) => {\n        var tempCanvas = document.createElement(\"canvas\");\n        var tempCtx = tempCanvas.getContext(\"2d\");\n\n        tempCanvas.width = canvas.width;\n        tempCanvas.height = canvas.height;\n\n        // put the modified pixels on the temp canvas\n        tempCtx.drawImage(canvas, 0, 0, canvas.width, canvas.height);\n\n        // use the tempCanvas.toDataURL to create an img object\n        var img = new Image();\n        img.onload = () => {\n            resolve(img)\n        };\n        img.src = tempCanvas.toDataURL();\n    });\n};\n\nexport function hexToRgbaObject(hex, opacity = 1) {\n    var c;\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n        c = hex.substring(1).split('');\n        if (c.length === 3) {\n            c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n        }\n        c = '0x' + c.join('');\n        return {\n            r: (c >> 16) & 255,\n            g: (c >> 8) & 255,\n            b: c & 255,\n            a: Math.round(255 * opacity)\n        };\n    }\n    throw new Error('Bad Hex');\n}\n\nexport function hexToRgbaString(hex, opacity) {\n    var c = hexToRgbaObject(hex, opacity);\n    return `rgba(${c.r},${c.g},${c.b},${c.a})`\n}","import React from 'react';\nimport Color2 from \"color\";\nimport {randomInteger} from \"./utils\";\nimport {Palette} from \"./Palette\";\n\n\nlet tp = new Array(1000);\n\nfor (let i = 0; i < 1000; i++) {\n    let color;\n    do {\n        const r = randomInteger(150, 180);\n        const g = randomInteger(40, 60);\n        const b = randomInteger(200, 250);\n        color = `rgb(${r},${g},${b})`\n    } while (tp.indexOf(color) !== -1)\n    tp[i] = color;\n}\n\nconsole.log(tp);\n\n\nexport class Color extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        const {value} = props;\n\n\n        this.state = {\n            value: Color2(value.value).hsl(),\n            colors: [],\n            currentColor: 0,\n            p1000: 150,\n            palette: false,\n            paletteX: 0,\n            paletteY: 0,\n            paletteEdit: false\n        };\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.value.value !== this.props.value.value) {\n            let colors = this.state.colors;\n            colors[this.state.currentColor] = Color2(nextProps.value.value).hex()\n            this.setState({\n                value: Color2(nextProps.value.value).hsl(),\n                colors\n            });\n        }\n    }\n\n\n    // handleValueChange = e => {\n    //     const {onChange, value} = this.props;\n    //\n    //     onChange && onChange({...value, value: e.target.value});\n    // };\n    handleChoseColor = (c, index) => e => {\n        this.setState({currentColor: index}, () => {\n            const {onChange, value} = this.props;\n\n            onChange && onChange({...value, value: c});\n        });\n    };\n\n    handleChangeHSL = (i) => e => {\n        const val = +e.target.value;\n        this.setState(state => {\n            let value = [state.value.color[0], state.value.color[1], state.value.color[2]];\n            value[i] = val;\n            return {\n                value: Color2.hsl(value)\n            }\n        }, () => {\n\n            const {onChange, value} = this.props;\n\n            onChange && onChange({...value, value: this.state.value.hex()});\n        });\n\n\n    };\n\n    p1000 = (e) => {\n        const delta = (this.state.p1000 / 4 - 67 + 100) % 100;\n\n        this.refs.palette.random(delta);\n    };\n\n    p1000change = e => {\n        const delta = +e.target.value;\n        this.setState({p1000: delta});\n    };\n\n    togglePalette = e => this.setState(state => ({palette: !state.palette}));\n\n\n    handlePip = (color, x, y) =>\n        this.setState({\n            paletteX: x,\n            paletteY: y\n        }, () => {\n\n            const {onChange, value} = this.props;\n\n            onChange && onChange({...value, value: color});\n        });\n\n    paletteEdit = () => this.setState(state => ({paletteEdit: !state.paletteEdit}));\n\n    render() {\n        const {value, onDraw, onClick} = this.props;\n        return (\n            <div className={\"color\"}>\n                <div>color</div>\n                <div className={\"flex\"}>\n                    <div className={\"colorValue\"} style={{\n                        backgroundColor: value.value\n                    }}/>\n                    {/*<input*/}\n                    {/*type=\"color\"*/}\n                    {/*value={value.value}*/}\n                    {/*onChange={this.handleValueChange}/>*/}\n                    <input type={\"range\"} min={0} max={359} step={1}\n                           onChange={this.handleChangeHSL(0)}\n                           value={this.state.value.color[0]}/>\n                    <input type={\"range\"} min={0} max={100} step={1}\n                           onChange={this.handleChangeHSL(1)}\n                           value={this.state.value.color[1]}/>\n                    <input type={\"range\"} min={0} max={100} step={1}\n                           onChange={this.handleChangeHSL(2)}\n                           value={this.state.value.color[2]}/>\n                    <div>\n                        <button onClick={this.togglePalette}>p</button>\n                    </div>\n                </div>\n                <div className={\"randomnes\" + (this.state.palette ? \"\" : \" randomes-hide\")}>\n                    <div className={\"flex\"}>\n                        <button onClick={this.p1000} className={\"randomnes-b\"}>r</button>\n                        <input type={\"range\"} min={0} max={400} step={1} onChange={this.p1000change}\n                               value={this.state.p1000}/>\n                        <button onClick={this.paletteEdit}\n                                className={\"buttonControle\"}>edit{this.state.paletteEdit ? \"*\" : \"\"}</button>\n                    </div>\n                    <div className={\"palette\"}>\n                        <Palette ref={\"palette\"}\n                                 edited={this.state.paletteEdit}\n                                 onDraw={onDraw}\n                                 onClick={onClick}\n                                 onPip={this.handlePip} x={this.state.paletteX} y={this.state.paletteY}\n                                 value={value.value}/>\n                    </div>\n                    {/*<div className={\"palette\"}>*/}\n                    {/*{this.state.colors.map((p, index) => (*/}\n                    {/*<div*/}\n                    {/*onClick={this.handleChoseColor(p, index)}*/}\n                    {/*key={p}*/}\n                    {/*style={{*/}\n                    {/*backgroundColor: p*/}\n                    {/*}}/>*/}\n                    {/*))}*/}\n                    {/*</div>*/}\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\n\nexport class Select extends React.PureComponent {\n    handleChose = value => e => {\n\n        const {onChange} = this.props;\n        onChange && onChange(value);\n    };\n    render() {\n        const {value, items} = this.props;\n        return (\n            <div>\n                {items.map(item => (\n                    <button\n                        className={\"buttonControle\"}\n                        key={item}\n                        onClick={this.handleChose(item)}>{item + (item === value ? \"*\" : \"\")}</button>))}\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport {BrushTypes, Fills} from \"./utils\";\nimport {Select} from \"./Select\";\n\nexport class Brush extends React.PureComponent {\n\n    handleSizeChange = e => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({\n            ...value,\n            size: e.target.value\n        });\n    };\n\n    handleOpacityChang = e => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, opacity: e.target.value});\n    };\n\n    selectType = type => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, type});\n    };\n\n    render() {\n        const {value} = this.props;\n        return (\n            <div className={\"brush\"}>\n                <div>brush</div>\n                <div className={\"brushbody\"}>\n                    <input type=\"range\" min={1} max={100} value={value.size} onChange={this.handleSizeChange}/>\n                    <input\n                        type=\"range\"\n                        min={0} max={1} step={0.05}\n                        value={value.opacity}\n                        onChange={this.handleOpacityChang}/>\n\n                    <Select\n                        items={Object.values(BrushTypes)}\n                        value={value.type}\n                        onChange={this.selectType}/>\n                </div>\n\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {Canvas} from \"./Canvas\";\nimport {randomInteger} from \"./utils\";\nimport Color2 from \"color\";\n\nconst w = 10;\n\nlet colors = new Array(1000)\nexport class Palette extends React.PureComponent {\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.value !== this.props.value) {\n\n            const ctx = this.refs.canvas.getCtx();\n            ctx.fillStyle = nextProps.value;\n            const {x, y} = nextProps;\n\n            ctx.fillRect(x, y, w, w);\n        }\n    }\n\n    handleClick = (...p) => {\n        const {onClick, onPip, edited} = this.props;\n        if (edited)\n            onClick && onClick(...p);\n        else {\n            const ctx = this.refs.canvas.getCtx();\n\n            onPip && onPip(Color2(ctx.getImageData(p[0].offsetX, p[0].offsetY, 1, 1).data.slice(0, 3)).hex(), Math.floor(p[0].offsetX / w) * w, Math.floor(p[0].offsetY / w) * w);\n        }\n\n    };\n    handleDraw = (...p) => {\n        const {onDraw, edited} = this.props;\n        if (edited)\n            onDraw && onDraw(...p);\n\n    };\n    random = (delta) => {\n        const ctx = this.refs.canvas.getCtx();\n        colors = new Array(1000);\n        for (let i = 0; i < 40; i++) {\n            for (let j = 0; j < 25; j++) {\n                let color;\n                do {\n                    const r = randomInteger(Math.max(265 - delta * 3, 0), Math.min(280 + delta * 3, 359));\n                    const g = randomInteger(Math.max(60 - delta * delta, 0), Math.min(100 + delta * delta, 100));\n                    const b = randomInteger(Math.max(25 - delta / randomInteger(-20, 20), 0), Math.min(75 + delta / randomInteger(-20, 20), 100));\n                    color = Color2.hsl([r, g, b]).hex();\n                    ctx.fillStyle = color;\n                    ctx.fillRect(i*w, j*w, w, w);\n                } while (colors.indexOf(color) !== -1)\n                colors[i] = color;\n            }\n        }\n\n    };\n    render() {\n        return (\n            <Canvas\n                readonly={!this.props.edited}\n                ref=\"canvas\"\n                width={40 * w} height={25 * w}\n                onClick={this.handleClick}\n                onDraw={this.handleDraw}/>\n        );\n    }\n}","import * as React from 'react';\nimport {Canvas} from \"./Canvas\";\nimport {createImage, ResizeType} from \"./utils\";\nimport {Input} from \"./Input\";\n\n\nconst nextType = {\n    zero: \"nn\",\n    nn: \"bi\",\n    bi: \"zero\"\n};\n\nexport class PatternEditor extends React.Component {\n\n    state = {\n        mask: false,\n    };\n\n    componentDidMount() {\n        this.updateMaskedImage();\n    }\n\n    updateMaskedImage = () => {\n        try {\n            const {onChange, value} = this.props;\n\n            const ctx = this.refs[\"canvasMasked\"].getCtx();\n\n            ctx.putImageData(this.refs[\"canvasMask\"].getImageData(), 0, 0);\n            ctx.globalCompositeOperation = \"source-in\";\n            ctx.drawImage(this.refs.canvas.canvas, 0, 0, value.w, value.h);\n\n\n            createImage(ctx.canvas).then(img => onChange && onChange({...this.props.value, imageMasked: img}));\n            createImage(this.refs[\"canvasMask\"].canvas).then(img => onChange && onChange({\n                ...this.props.value,\n                imageMask: img\n            }));\n\n        } catch (e) {\n        }\n    };\n\n    maskToggle = e => this.setState(state => ({mask: !state.mask}));\n\n    sizeChangeHandler = s => e => {\n        const {onChange, value} = this.props;\n        const size = +e.target.value || 1;\n        onChange && onChange({...value, [s]: size});\n        this.updateMaskedImage();\n    };\n    mirrorChangeHandler = name => e => {\n        const {onChange, value} = this.props;\n        onChange && onChange({...value, [name]: !value[name]});\n    };\n    imageChangeHandler = image => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, image});\n        this.updateMaskedImage();\n    };\n    maskChangeHandler = mask => {\n        const {onChange, value} = this.props;\n        onChange && onChange({...value, mask});\n        this.updateMaskedImage();\n    };\n    resizeTypeChangeHandler = e => {\n        const {onChange, value} = this.props;\n        onChange && onChange({...value, resizeType: nextType[value.resizeType]});\n    };\n\n    render() {\n        const {value, onPatternDraw, onMaskDraw, onPatternClick, onMaskClick, chosen, onChose} = this.props;\n        return (\n            <div className={\"patternEditor\"}>\n                <div className={value.w < 63 ? \"canvases\" : \"canvases-col\"}>\n                    <Canvas ref=\"canvas\" resize={ResizeType[value.resizeType]}\n                            value={value.image}\n                            width={value.w} height={value.h}\n                            onDraw={onPatternDraw}\n                            onClick={onPatternClick}\n                            onChange={this.imageChangeHandler}/>\n                    <div style={{display: !this.state.mask ? \"none\" : \"\"}}>\n                        <Canvas ref=\"canvasMask\"\n                                resize={ResizeType[value.resizeType === \"bi\" ? \"nn\" : value.resizeType]}\n                                value={value.mask}\n                                width={value.w} height={value.h}\n                                onDraw={onMaskDraw}\n                                onClick={onMaskClick}\n                                onChange={this.maskChangeHandler}/>\n                    </div>\n                    <div style={{display: !this.state.mask ? \"none\" : \"\"}}>\n                        <Canvas ref=\"canvasMasked\"\n                                readonly\n                                resize={ResizeType[value.resizeType === \"bi\" ? \"nn\" : value.resizeType]}\n                                value={value.masked}\n                                width={value.w} height={value.h}/>\n                    </div>\n                </div>\n                <div className={\"btns\"}>\n                    <button onClick={onChose} style={{\n                        visibility: chosen ? \"visible\" : \"\"\n                    }}>c</button>\n                    <button onClick={this.maskToggle}>m</button>\n                    <button onClick={this.resizeTypeChangeHandler} className={'resizeType'}>{value.resizeType}</button>\n                    <input type=\"number\" step={1} min={1} max={200} value={value.w}\n                           onChange={this.sizeChangeHandler('w')}/>\n                    <input type=\"number\" step={1} min={1} max={200} value={value.h}\n                           onChange={this.sizeChangeHandler('h')}/>\n                    <input type=\"checkbox\" value={value.xMirror} onChange={this.mirrorChangeHandler('xMirror')}/>\n                    <input type=\"checkbox\" value={value.yMirror} onChange={this.mirrorChangeHandler('yMirror')}/>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport class Input extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: props.value\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.value !== this.props.value) {\n            this.setState({value: nextProps.value});\n        }\n    }\n\n    handleChange = e => {\n        this.setState({value: e.target.value});\n    };\n\n    handleComit = e => {\n        console.log(1);\n        const {onChange} = this.props;\n\n        if (onChange)\n            if (!onChange(this.state.value))\n                this.setState({value: this.props.value});\n    };\n\n    render() {\n        const {onChange, onBlur, value, ...props} = this.props;\n        return (\n            <input {...props}\n                   value={this.state.value}\n                   onClick={this.handleComit}\n                   onChange={this.handleChange}\n                   onBlur={this.handleComit}/>\n        );\n    }\n}","\n\n\nexport function floodfill(data, x, y, fillcolor, tolerance, width, height) {\n\n    var length = data.length;\n    var Q = [];\n    var i = (x + y * width) * 4;\n    var e = i, w = i, me, mw, w2 = width * 4;\n\n    var targetcolor = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\n    console.log(targetcolor, fillcolor);\n\n    if (!pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n        return false;\n    }\n    Q.push(i);\n    let kkk = 0;\n    while (Q.length) {\n        kkk++;\n        i = Q.pop();\n        let a = 0;\n        if (pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n            e = i;\n            w = i;\n            mw = parseInt(i / w2) * w2 - 1; //left bound\n            me = mw + w2 - 1;               //right bound\n\n\n            while (mw < w && mw < (w -= 4) && pixelCompareAndSet(w, targetcolor, fillcolor, data, length, tolerance, width)) {a++} //go left until edge hit\n            while (me > e && me > (e += 4) && pixelCompareAndSet(e, targetcolor, fillcolor, data, length, tolerance, width)) {a++} //go right until edge hit\n            for (var j = w + 4; j < e; j += 4) {\n                if (j - w2 >= 0 && pixelCompare(j - w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j - w2); //queue y-1\n                if (j + w2 < length && pixelCompare(j + w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j + w2); //queue y+1\n            }\n        }\n        //if (kkk > 30000) return data;\n        //console.log(kkk, a);\n    }\n    return data;\n}\n\nfunction pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width) {\n    if (i < 0 || i >= length) return false; //out of bounds\n    if (data[i + 3] === 0 && fillcolor.a > 0) return true;  //surface is invisible and fill is visible\n\n    if (\n        Math.abs(targetcolor[3] - fillcolor.a) <= tolerance &&\n        Math.abs(targetcolor[0] - fillcolor.r) <= tolerance &&\n        Math.abs(targetcolor[1] - fillcolor.g) <= tolerance &&\n        Math.abs(targetcolor[2] - fillcolor.b) <= tolerance\n    ) return false; //target is same as fill\n\n    if (\n        (targetcolor[3] === data[i + 3]) &&\n        (targetcolor[0] === data[i]) &&\n        (targetcolor[1] === data[i + 1]) &&\n        (targetcolor[2] === data[i + 2])\n    ) return true; //target matches surface\n\n    if (\n        Math.abs(targetcolor[3] - data[i + 3]) <= (tolerance) &&\n        Math.abs(targetcolor[0] - data[i]) <= tolerance &&\n        Math.abs(targetcolor[1] - data[i + 1]) <= tolerance &&\n        Math.abs(targetcolor[2] - data[i + 2]) <= tolerance\n    ) return true; //target to surface within tolerance\n\n    return false; //no match\n}\n\nfunction pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width) {\n    if (pixelCompare(i, targetcolor, fillcolor, data, length, tolerance)) {\n        //fill the color\n        data[i] = fillcolor.r;\n        data[i + 1] = fillcolor.g;\n        data[i + 2] = fillcolor.b;\n        data[i + 3] = fillcolor.a;\n        return true;\n    }\n    return false;\n}","export function floodfillmask(data, x, y, maskImageData, tolerance, width, height) {\n\n    const fillcolor = {\n        r: 255,\n        g: 0,\n        b: 0,\n        a: 255\n    };\n    var length = data.length;\n    var Q = [];\n    var P = [];\n    var i = (x + y * width) * 4;\n    var e = i, w = i, me, mw, w2 = width * 4;\n\n    var targetcolor = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\n    const oldData = new Uint8ClampedArray(data);\n\n    if (!pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n        return false;\n    }\n    Q.push(i);\n    let kkk = 0;\n    while (Q.length) {\n        kkk++;\n        i = Q.pop();\n        if (pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n            P.push(i);\n            e = i;\n            w = i;\n            mw = parseInt(i / w2) * w2 - 1; //left bound\n            me = mw + w2 - 1;               //right bound\n            while (mw < w && mw < (w -= 4) && pixelCompareAndSet(w, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(w)\n            } //go left until edge hit\n            while (me > e && me > (e += 4) && pixelCompareAndSet(e, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(e)\n            } //go right until edge hit\n            for (var j = w + 4; j < e; j += 4) {\n                if (j - w2 >= 0 && pixelCompare(j - w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j - w2); //queue y-1\n                if (j + w2 < length && pixelCompare(j + w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j + w2); //queue y+1\n            }\n        }\n    }\n\n    console.log(kkk);\n\n    P.forEach(p => {\n\n        var x = (p / 4) % width % maskImageData.width;\n        var y = Math.floor((p / 4) / width) % maskImageData.height;\n\n\n        var j = (x + y * maskImageData.width) * 4;\n        var targetcolor = [0, 0, 0, 255];\n        var maskcolor = [maskImageData.data[j], maskImageData.data[j + 1], maskImageData.data[j + 2], maskImageData.data[j + 3]];\n\n        // console.log(maskcolor);\n        if (maskcolor[0] === 0 && maskcolor[1] === 0 && maskcolor[2] === 0 && maskcolor[3] === 255) {\n            //black\n            data[p] = targetcolor[0];\n            data[p + 1] = targetcolor[1];\n            data[p + 2] = targetcolor[2];\n            data[p + 3] = targetcolor[3];\n        } else {\n            data[p] = oldData[p];\n            data[p + 1] = oldData[p + 1];\n            data[p + 2] = oldData[p + 2];\n            data[p + 3] = oldData[p + 3];\n        }\n    });\n\n\n    return data;\n}\n\nexport function floodfillpatternmask(data, x, y, patternImageData, maskImageData, tolerance, width, height, xMirror, yMirror) {\n\n    const getPatX = !xMirror\n        ? (i, width, pWidth) => (i / 4) % width % pWidth\n        : (i, width, pWidth) => {\n            const x = (i / 4) % width;\n\n            return Math.trunc(x / pWidth) % 2 === 0\n                ? x % pWidth\n                : pWidth - x % pWidth;\n        };\n    const getPatY = !yMirror\n        ? (i, width, pHeight) => y = Math.floor((i / 4) / width) % pHeight\n        : (i, width, pHeight) => {\n            const y =  Math.floor((i / 4) / width);\n\n            return Math.trunc(y / pHeight) % 2 === 0\n                ? y % pHeight\n                : pHeight - y % pHeight;\n        };\n    const fillcolor = {\n        r: 255,\n        g: 0,\n        b: 0,\n        a: 255\n    };\n    var length = data.length;\n    var Q = [];\n    var P = [];\n    var i = (x + y * width) * 4;\n    var e = i, w = i, me, mw, w2 = width * 4;\n\n    var targetcolor = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\n    const oldData = new Uint8ClampedArray(data);\n\n    if (!pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n        return false;\n    }\n    Q.push(i);\n    let kkk = 0;\n    while (Q.length) {\n        kkk++;\n        i = Q.pop();\n        if (pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n            P.push(i);\n            e = i;\n            w = i;\n            mw = parseInt(i / w2) * w2 - 1; //left bound\n            me = mw + w2 - 1;               //right bound\n            while (mw < w && mw < (w -= 4) && pixelCompareAndSet(w, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(w)\n            } //go left until edge hit\n            while (me > e && me > (e += 4) && pixelCompareAndSet(e, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(e)\n            } //go right until edge hit\n            for (var j = w + 4; j < e; j += 4) {\n                if (j - w2 >= 0 && pixelCompare(j - w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j - w2); //queue y-1\n                if (j + w2 < length && pixelCompare(j + w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j + w2); //queue y+1\n            }\n        }\n    }\n\n    console.log(kkk);\n\n    P.forEach(p => {\n\n        var x = getPatX(p, width, patternImageData.width);\n        var y = getPatY(p, width, patternImageData.height);\n\n\n        var j = (x + y * patternImageData.width) * 4;\n        var targetcolor = [patternImageData.data[j], patternImageData.data[j + 1], patternImageData.data[j + 2], patternImageData.data[j + 3]];\n        var maskcolor = [maskImageData.data[j], maskImageData.data[j + 1], maskImageData.data[j + 2], maskImageData.data[j + 3]];\n\n        // console.log(maskcolor);\n        if (maskcolor[0] === 0 && maskcolor[1] === 0 && maskcolor[2] === 0 && maskcolor[3] === 255) {\n            //\n            data[p] = targetcolor[0];\n            data[p + 1] = targetcolor[1];\n            data[p + 2] = targetcolor[2];\n            data[p + 3] = targetcolor[3];\n        } else {\n            data[p] = oldData[p];\n            data[p + 1] = oldData[p + 1];\n            data[p + 2] = oldData[p + 2];\n            data[p + 3] = oldData[p + 3];\n        }\n    });\n\n\n    return data;\n}\n\nexport function floodfillpattern(data, x, y, patternImageData, tolerance, width, height) {\n\n    const fillcolor = {\n        r: 255,\n        g: 0,\n        b: 0,\n        a: 255\n    };\n    var length = data.length;\n    var Q = [];\n    var P = [];\n    var i = (x + y * width) * 4;\n    var e = i, w = i, me, mw, w2 = width * 4;\n\n    var targetcolor = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\n    if (!pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n        return false;\n    }\n    Q.push(i);\n    let kkk = 0;\n    while (Q.length) {\n        kkk++;\n        i = Q.pop();\n        if (pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n            P.push(i);\n            e = i;\n            w = i;\n            mw = parseInt(i / w2) * w2 - 1; //left bound\n            me = mw + w2 - 1;               //right bound\n            while (mw < w && mw < (w -= 4) && pixelCompareAndSet(w, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(w)\n            } //go left until edge hit\n            while (me > e && me > (e += 4) && pixelCompareAndSet(e, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(e)\n            } //go right until edge hit\n            for (var j = w + 4; j < e; j += 4) {\n                if (j - w2 >= 0 && pixelCompare(j - w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j - w2); //queue y-1\n                if (j + w2 < length && pixelCompare(j + w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j + w2); //queue y+1\n            }\n        }\n    }\n\n    console.log(kkk);\n\n    P.forEach(p => {\n\n        var x = (p / 4) % width % patternImageData.width;\n        var y = Math.floor((p / 4) / width) % patternImageData.height;\n\n\n        var j = (x + y * patternImageData.width) * 4;\n        var targetcolor = [patternImageData.data[j], patternImageData.data[j + 1], patternImageData.data[j + 2], patternImageData.data[j + 3]];\n\n\n        data[p] = targetcolor[0];\n        data[p + 1] = targetcolor[1];\n        data[p + 2] = targetcolor[2];\n        data[p + 3] = targetcolor[3];\n    });\n\n\n    return data;\n}\n\nfunction pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width) {\n    if (i < 0 || i >= length) return false; //out of bounds\n    if (data[i + 3] === 0 && fillcolor.a > 0) return true;  //surface is invisible and fill is visible\n\n    if (\n        Math.abs(targetcolor[3] - fillcolor.a) <= tolerance &&\n        Math.abs(targetcolor[0] - fillcolor.r) <= tolerance &&\n        Math.abs(targetcolor[1] - fillcolor.g) <= tolerance &&\n        Math.abs(targetcolor[2] - fillcolor.b) <= tolerance\n    ) return false; //target is same as fill\n\n    if (\n        (targetcolor[3] === data[i + 3]) &&\n        (targetcolor[0] === data[i]) &&\n        (targetcolor[1] === data[i + 1]) &&\n        (targetcolor[2] === data[i + 2])\n    ) return true; //target matches surface\n\n    if (\n        Math.abs(targetcolor[3] - data[i + 3]) <= (255 - tolerance) &&\n        Math.abs(targetcolor[0] - data[i]) <= tolerance &&\n        Math.abs(targetcolor[1] - data[i + 1]) <= tolerance &&\n        Math.abs(targetcolor[2] - data[i + 2]) <= tolerance\n    ) return true; //target to surface within tolerance\n\n    return false; //no match\n}\n\nfunction pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width) {\n    if (pixelCompare(i, targetcolor, fillcolor, data, length, tolerance)) {\n        //fill the color\n        data[i] = fillcolor.r;\n        data[i + 1] = fillcolor.g;\n        data[i + 2] = fillcolor.b;\n        data[i + 3] = fillcolor.a;\n        return true;\n    }\n    return false;\n}","import React from 'react';\nimport {Fills, Tools} from \"./utils\";\nimport {Select} from \"./Select\";\n\nexport class Paint extends React.PureComponent {\n\n    handlePaintFillChose = fill => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({\n            ...value,\n            fill\n        });\n    };\n\n    render() {\n        const {value} = this.props;\n        return (\n            <div className={\"paint\"}>\n                <div>paint</div>\n                <Select\n                    items={Object.values(Fills)}\n                    value={value.fill}\n                    onChange={this.handlePaintFillChose}/>\n\n            </div>\n        );\n    }\n}","import React from \"react\";\n\nexport class Line extends React.PureComponent {\n\n    handleSizeChange = e => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({\n            ...value,\n            size: e.target.value\n        });\n    };\n\n    handleOpacityChang = e => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, opacity: e.target.value});\n    };\n\n    render() {\n        const {value} = this.props;\n        return (\n            <div className={\"line\"}>\n                <div>line</div>\n                <input type=\"range\" min={1} max={100} value={value.size} onChange={this.handleSizeChange}/>\n                <input\n                    type=\"range\"\n                    min={0} max={1} step={0.05}\n                    value={value.opacity}\n                    onChange={this.handleOpacityChang}/>\n            </div>\n        );\n    }\n}","import React from \"react\";\n\nexport class Enter extends React.PureComponent {\n    order = [0, 2, 3, 0];\n    state = {\n        i: 0\n    };\n    handleMouseEnter = i => e => {\n        if (i === this.order[this.state.i]) {\n            this.setState(state => ({i: state.i + 1}), () => {\n                if (this.state.i === 4) {\n                    console.log(111111111)\n                }\n            })\n        } else {\n            this.setState(state => ({i: 0}), () => {\n                console.log(2222222222)\n            })\n        }\n    };\n\n    render() {\n        return (\n            <div className={\"enter\"}>\n                {[0, 1, 2, 3].map(i => (\n                    <div className={\"enter-door\"} onMouseEnter={this.handleMouseEnter(i)}></div>\n                ))}\n            </div>\n        );\n    }\n\n}","import React, {Component} from 'react';\nimport './App.css';\nimport {Canvas} from \"./components/Canvas\";\nimport {Brush} from \"./components/Brush\";\nimport {Color} from \"./components/Color\";\nimport {PatternEditor} from \"./components/PatternEditor\";\nimport {floodfill} from \"./components/floodfill\";\nimport {floodfillmask, floodfillpatternmask} from \"./components/floodfillpattern\";\nimport {\n    Tools,\n    Fills,\n    hexToRgbaObject,\n    hexToRgbaString,\n    BrushTypes,\n    createPattern,\n    circle,\n    cutCircle, whiteSheet, randomInteger, throttled\n} from \"./components/utils\";\nimport {Paint} from \"./components/Paint\";\nimport {Line} from \"./components/Line\";\nimport {HotKeys, GlobalHotKeys} from \"react-hotkeys\";\nimport Color2 from \"color\";\nimport {Select} from \"./components/Select\";\nimport _omit from \"lodash/omit\";\nimport {Enter} from \"./components/Enter\";\n\n/**\n *\n *\n *\n *\n *\n *\n *\n * изменение мышкой с кнопкой\n * enter\n отмена операции (история)\n *\n *\n *\n *\n *  расстояние между кистями\n *\n\n mouse trottling\n\n *\n * */\n\n\nclass App extends Component {\n\n\n    componentDidMount() {\n\n\n\n        document.addEventListener(\"mousemove\", throttled(100, this.move));\n        document.addEventListener(\"keydown\", this.keydownHandler);\n        document.addEventListener(\"keyup\", this.keyupHandler);\n\n        this.setState(state => ({\n            patterns: state.patterns.map(createPattern(this.refs.canvas.ctx)),\n            canvas: {...state.canvas, image: whiteSheet(this.refs.canvas.ctx)(state.canvas)}\n        }));\n        setTimeout(() => console.log(this.state), 0)\n    }\n\n    state = {\n        keys: {},\n        canvas: {\n            w: 400,\n            h: 400,\n        },\n        brush: {\n            size: 8,\n            opacity: 1,\n            type: BrushTypes.Circle\n        },\n        line: {\n            size: 8,\n            opacity: 1,\n        },\n        color: {\n            value: '#000000'\n        },\n        paint: {\n            fill: Fills.Color\n        },\n        patterns: [{\n            w: 50,\n            h: 62,\n            resizeType: \"zero\"\n        }, {\n            w: 50,\n            h: 62,\n            resizeType: \"zero\"\n        }],\n        currentPattern: 0,\n        currentTool: Tools.Brush\n    };\n\n    getRGBAColor = () =>\n        hexToRgbaObject(this.state.color.value, this.state.color.opacity);\n\n    handleCanvasChange = image => this.setState(state => ({canvas: {...state.canvas, image}}));\n\n    handleBrushChange = brush => this.setState({brush});//, () => console.log(this.state.brush));\n    handleColorChange = color => this.setState({color});//, () => console.log(this.state.color));\n    handlePaintChange = paint => this.setState({paint});//, () => console.log(this.state.color));\n    handleLineChange = line => this.setState({line});//, () => console.log(this.state.color));\n\n    handlePatternChange = (n) => pattern => {\n        this.setState(state => ({\n            patterns: state.patterns.map((p, i) => i === n ? pattern : p)\n        }), () => console.log(this.state.patterns[n]))\n    };\n    handleAddPattern = e => {\n        this.setState(state => ({\n            patterns: [...state.patterns, createPattern(this.refs.canvas.ctx)({\n                w: 50,\n                h: 50,\n            })]\n        }))\n    };\n\n    handleCurrentPatternChose = pattern => e => this.setState({currentPattern: pattern});\n\n\n    handleToolChose = tool => this.setState({currentTool: tool});\n\n    drawProcessing = (e, ctx, canvas, prevE) => {\n        if (this.state.currentTool === Tools.Brush) {\n            ctx.fillStyle = hexToRgbaString(this.state.color.value);\n            ctx.globalAlpha = this.state.brush.opacity;\n\n            if (this.state.brush.type === BrushTypes.Square) {\n                ctx.fillRect(e.offsetX - this.state.brush.size / 2, e.offsetY - this.state.brush.size / 2, this.state.brush.size, this.state.brush.size);\n            } else if (this.state.brush.type === BrushTypes.Circle) {\n                ctx.beginPath();\n                ctx.arc(e.offsetX, e.offsetY, this.state.brush.size / 2, 0, 2 * Math.PI);\n                ctx.fill();\n            } else if (this.state.brush.type === BrushTypes.Pattern) {\n                const p = this.state.patterns[this.state.currentPattern].image;\n                const i = this.state.patterns[this.state.currentPattern].imageMasked;\n                ctx.drawImage(i, e.offsetX - p.width / 2, e.offsetY - p.height / 2, p.width, p.height);\n            }\n            ctx.globalAlpha = 1;\n\n        } else if (this.state.currentTool === Tools.Line) {\n            if (prevE) {\n                ctx.globalAlpha = this.state.line.opacity;\n                ctx.beginPath();\n                ctx.moveTo(prevE.offsetX, prevE.offsetY);\n                ctx.lineTo(e.offsetX, e.offsetY);\n                ctx.strokeStyle = this.state.color.value;\n                ctx.lineWidth = this.state.line.size;\n                ctx.stroke();\n                ctx.globalAlpha = 1;\n                ctx.closePath();\n            }\n        }\n    };\n\n    clickProcessing = (e, ctx, canvas) => {\n        if (this.state.currentTool === Tools.Paint) {\n            if (this.state.paint.fill === Fills.Color) {\n                console.log(1);\n                const imda = ctx.getImageData(0, 0, this.state.canvas.w, this.state.canvas.h);\n\n                let data = imda.data;\n                let width = imda.width;\n                let height = imda.height;\n                let color = hexToRgbaObject(this.state.color.value);\n\n                floodfill(data, e.offsetX, e.offsetY, color, 0, width, height);\n\n                ctx.putImageData(imda, 0, 0);\n            } else if (this.state.paint.fill === Fills.Pattern) {\n                const imda = ctx.getImageData(0, 0, this.state.canvas.w, this.state.canvas.h);\n\n                let data = imda.data;\n                let width = imda.width;\n                let height = imda.height;\n\n                const pat = this.state.patterns[this.state.currentPattern];\n\n                floodfillpatternmask(data, e.offsetX, e.offsetY, pat.image, pat.mask, 0, width, height, pat.xMirror, pat.yMirror);\n\n                ctx.putImageData(imda, 0, 0);\n            }\n        }\n    };\n\n    maskDrawProcessing = (e, ctx, canvas, prevE) => {\n        if (this.state.currentTool === Tools.Brush) {\n            if (this.state.brush.type === BrushTypes.Pattern) {\n                const p = this.state.patterns[this.state.currentPattern].mask;\n                const i = this.state.patterns[this.state.currentPattern].imageMask;\n                ctx.drawImage(i, e.offsetX - p.width / 2, e.offsetY - p.height / 2, p.width, p.height);\n            } else {\n                if (this.state.color.value.toLocaleLowerCase() === \"#ffffff\") {\n                    if (this.state.brush.type === BrushTypes.Square) {\n                        ctx.clearRect(e.offsetX - this.state.brush.size / 2, e.offsetY - this.state.brush.size / 2, this.state.brush.size, this.state.brush.size);\n                    } else if (this.state.brush.type === BrushTypes.Circle) {\n                        cutCircle(ctx, e.offsetX, e.offsetY, this.state.brush.size / 2);\n                    }\n                } else {\n                    ctx.fillStyle = \"#000000\";\n                    if (this.state.brush.type === BrushTypes.Square) {\n                        ctx.fillRect(e.offsetX - this.state.brush.size / 2, e.offsetY - this.state.brush.size / 2, this.state.brush.size, this.state.brush.size);\n                    } else if (this.state.brush.type === BrushTypes.Circle) {\n                        circle(ctx, e.offsetX, e.offsetY, this.state.brush.size / 2);\n                    }\n                }\n            }\n        } else if (this.state.currentTool === Tools.Line) {\n            if (prevE) {\n\n                if (this.state.color.value.toLocaleLowerCase() === \"#ffffff\") {\n\n                    ctx.globalCompositeOperation = 'destination-out';\n                    ctx.beginPath();\n                    ctx.moveTo(prevE.offsetX, prevE.offsetY);\n                    ctx.lineTo(e.offsetX, e.offsetY);\n                    ctx.strokeStyle = 'black';\n                    ctx.lineWidth = this.state.line.size;\n                    ctx.stroke();\n                    ctx.closePath();\n                    ctx.globalCompositeOperation = \"source-over\";\n                } else {\n                    ctx.beginPath();\n                    ctx.moveTo(prevE.offsetX, prevE.offsetY);\n                    ctx.lineTo(e.offsetX, e.offsetY);\n                    ctx.strokeStyle = 'black';\n                    ctx.lineWidth = this.state.line.size;\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n        }\n    };\n\n    maskClickProcessing = (e, ctx, canvas) => {\n        if (this.state.currentTool === Tools.Paint) {\n            if (this.state.paint.fill === Fills.Color) {\n                const imda = ctx.getImageData(0, 0, this.state.canvas.w, this.state.canvas.h);\n\n                let data = imda.data;\n                let width = imda.width;\n                let height = imda.height;\n                let color = this.state.color.value.toLocaleLowerCase() === \"#ffffff\"\n                    ? {r: 0, g: 0, b: 0, a: 0}\n                    : {r: 0, g: 0, b: 0, a: 255}\n\n                floodfill(data, e.offsetX, e.offsetY, color, 55, width, height);\n\n                ctx.putImageData(imda, 0, 0);\n            } else if (this.state.paint.fill === Fills.Pattern) {\n                const imda = ctx.getImageData(0, 0, this.state.canvas.w, this.state.canvas.h);\n\n                let data = imda.data;\n                let width = imda.width;\n                let height = imda.height;\n\n                floodfillmask(data, e.offsetX, e.offsetY, this.state.patterns[this.state.currentPattern].mask, 0, width, height);\n\n                ctx.putImageData(imda, 0, 0);\n            }\n        }\n    };\n\n    save = () => {\n        var dataURL = this.refs.canvas.canvas.toDataURL(\"image/jpeg\");\n        var link = document.createElement(\"a\");\n        document.body.appendChild(link); // Firefox requires the link to be in the body :(\n        link.href = dataURL;\n        link.download = \"ZzZzZzZ.jpg\";\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    keyMap = {\n        PREV: \"1\",\n        NEXT: \"2\",\n        BRUSH: \"q\",\n        BRUSH_S: \"w\",\n        BRUSH_C: \"e\",\n        BRUSH_P: \"r\",\n        PAINT: \"a\",\n        PAINT_C: \"s\",\n        PAINT_P: \"d\",\n        LINE: \"z\",\n        WHITE: \"x\",\n        BLACK: \"c\",\n        RAND: \"v\",\n\n    };\n\n    hotKeysHandlers = {\n        NEXT: () =>\n            this.setState(state => ({currentPattern: (state.currentPattern + 1) % state.patterns.length})),\n        PREV: () =>\n            this.setState(state => ({currentPattern: (state.currentPattern - 1 + state.patterns.length) % state.patterns.length})),\n        BRUSH: () =>\n            this.setState({currentTool: Tools.Brush}),\n        BRUSH_S: () =>\n            this.setState(state => ({brush: {...state.brush, type: BrushTypes.Square}})),\n        BRUSH_C: () =>\n            this.setState(state => ({brush: {...state.brush, type: BrushTypes.Circle}})),\n        BRUSH_P: () =>\n            this.setState(state => ({brush: {...state.brush, type: BrushTypes.Pattern}})),\n        PAINT: () =>\n            this.setState({currentTool: Tools.Paint}),\n        PAINT_C: () =>\n            this.setState(state => ({paint: {...state.paint, fill: Fills.Color}})),\n        PAINT_P: () =>\n            this.setState(state => ({paint: {...state.paint, fill: Fills.Pattern}})),\n        LINE: () =>\n            this.setState({currentTool: Tools.Line}),\n        WHITE: () =>\n            this.setState(state => ({color: {...state.color, value: \"#ffffff\"}})),\n        BLACK: () =>\n            this.setState(state => ({color: {...state.color, value: \"#000000\"}})),\n        RAND: () =>\n            this.setState(state => {\n                const r = randomInteger(0, 255);\n                const g = randomInteger(0, 255);\n                const b = randomInteger(0, 255);\n                const color = Color2.rgb([r, g, b]).hex();\n                return {color: {...state.color, value: color}}\n            }),\n    };\n\n    keydownHandler = e => {\n        const code = e.key.charCodeAt(0);\n        console.log(e);\n\n        if (!this.state.keys[code]) {\n\n            this.setState(state => ({keys: {...state.keys, [code]: true}}), () => console.log(this.state.keys));\n        }\n    };\n\n    keyupHandler = (e) => {\n        const code = e.key.charCodeAt(0);\n\n        this.setState(state => ({keys: _omit(state.keys, code)}), () => console.log(this.state.keys));\n    };\n\n    move = e => {\n        if (this.state.keys[70] || this.state.keys[102]) {\n\n        }\n    }\n\n    render() {\n        return (\n\n            <GlobalHotKeys keyMap={this.keyMap} handlers={this.hotKeysHandlers}>\n                <HotKeys>\n                    <div className={\"all\"}>\n                        <div className=\"App\">\n                            <div className={\"controls\"}>\n                                <div className={\"kunteynir\"}>\n                                    {/*PatternCurr:{Object.keys(this.state.patterns).map(pattern => (*/}\n                                    {/*<button key={pattern}*/}\n                                            {/*onClick={this.handleCurrentPatternChose(pattern)}>{pattern}</button>*/}\n\n                                {/*))}:{this.state.currentPattern}*/}\n\n                                    <Select\n                                        items={Object.values(Tools)}\n                                        value={this.state.currentTool}\n                                        onChange={this.handleToolChose}/>\n                                    {this.state.currentTool === Tools.Brush &&\n                                    <Brush\n                                        value={this.state.brush}\n                                        onChange={this.handleBrushChange}/>}\n                                    {this.state.currentTool === Tools.Paint &&\n                                    <Paint\n                                        value={this.state.paint}\n                                        onChange={this.handlePaintChange}/>}\n                                    {this.state.currentTool === Tools.Line &&\n                                    <Line\n                                        value={this.state.line}\n                                        onChange={this.handleLineChange}/>}\n                                    <Color\n                                        onClick={this.clickProcessing}\n                                        onDraw={this.drawProcessing}\n                                        value={this.state.color}\n                                        onChange={this.handleColorChange}/>\n                                </div>\n                            </div>\n                            <div className={\"patterns\"}>\n                                {this.state.patterns.map((pattern, index) => (\n                                    <PatternEditor\n                                        chosen={index === this.state.currentPattern}\n                                        onChose={this.handleCurrentPatternChose(index)}\n                                        key={index}\n                                        onPatternDraw={this.drawProcessing}\n                                        onPatternClick={this.clickProcessing}\n                                        onMaskDraw={this.maskDrawProcessing}\n                                        onMaskClick={this.maskClickProcessing}\n                                        name={index}\n                                        value={pattern}\n                                        onChange={this.handlePatternChange(index)}/>\n                                ))}\n                                <div className={\"patternEditor\"}>\n                                    <Canvas\n                                        ref=\"canvas\"\n                                        width={this.state.canvas.w}\n                                        height={this.state.canvas.h}\n                                        value={this.state.canvas.image}\n                                        onChange={this.handleCanvasChange}\n                                        onClick={this.clickProcessing}\n                                        onDraw={this.drawProcessing}/>\n                                    <div className={\"btns\"}>\n                                        <button onClick={this.handleAddPattern}>+</button>\n                                        <button onClick={this.save}>save</button>\n                                    </div>\n\n                                </div>\n                            </div>\n\n                            <Enter/>\n\n                            {/*<div>*/}\n                            {/*{tp.map(p => (*/}\n                            {/*<div style={{*/}\n                            {/*display: \"inline-block\",*/}\n                            {/*width: 15,*/}\n                            {/*height: 15,*/}\n                            {/*backgroundColor: p*/}\n                            {/*}}/>*/}\n                            {/*))}*/}\n                            {/*</div>*/}\n                        </div>\n                    </div>\n                </HotKeys>\n            </GlobalHotKeys>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}