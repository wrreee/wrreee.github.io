{"version":3,"sources":["components/Canvas.js","components/utils.js","components/Select.js","components/MoveHandlers.js","components/Brush.js","components/Palette.js","components/Color.js","components/PatternEditor.js","components/floodfill.js","components/floodfillpattern.js","components/Paint.js","components/Line.js","components/Enter.js","components/Pattern.js","App.js","serviceWorker.js","index.js"],"names":["Canvas","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","drawing","mouseDownHandler","e","setState","_this$props","props","onDraw","onClick","ctx","canvas","mouseUpHandler","prevE","_this$props2","onChange","width","height","getImageData","mouseLeaveHandler","mouseMoveHandler","setImageData","image","putImageData","drawImage","_this$ctx","getCtx","clear","fillStyle","fillRect","inherits","createClass","key","value","refs","getContext","addEventListener","document","nextProps","_this$props3","resize","imageData","resizeImageData","setTimeout","_this$props4","_this$props5","readonly","react_default","a","createElement","className","ref","React","Component","Tools","Brush","Paint","Line","Fills","Color","Pattern","BrushTypes","Square","Circle","ResizeType","no","nn","bi","randomInteger","min","max","rand","Math","random","round","createPattern","_ref2","_ref2$w","w","_ref2$h","h","createImageData","i","data","mask","masked","resizeType","cutCircle","context","x","y","radius","globalCompositeOperation","moveTo","beginPath","arc","PI","closePath","fill","circle","createImage","Promise","resolve","reject","tempCanvas","tempCtx","img","Image","onload","src","toDataURL","hexToRgbaObject","hex","c","opacity","undefined","test","substring","split","r","join","g","b","Error","Select","_React$PureComponent","handleChose","_this2","items","map","item","PureComponent","MoveHandlers","pressed","createMouseHandler","startE","startValue","delay","fn","lastCall","now","Date","getTime","throttled","step","keydownHandler","code","charCodeAt","codes","indexOf","handler","keyupHandler","removeEventListener","hide","text","setBrushSize","size","objectSpread","handleSizeChange","target","setOpacity","handleOpacityChang","selectType","type","_this$props4$min","_this$props4$max","MoveHandlers_MoveHandlers","Select_Select","values","colors","Palette","handleClick","onPip","edited","_len2","p","_key2","Color2","offsetX","offsetY","slice","floor","handleDraw","delta","j","color","hsl","Canvas_Canvas","handleChangeHSL","val","p1000","palette","p1000change","togglePalette","changeColor","handlePip","paletteX","paletteY","paletteEdit","currentColor","onWhite","onBlack","onRand","style","backgroundColor","Palette_Palette","nextType","PatternEditor","updateMaskedImage","then","imageMasked","imageMask","maskToggle","sizeChangeHandler","s","defineProperty","mirrorChangeHandler","name","imageChangeHandler","maskChangeHandler","resizeTypeChangeHandler","_this$props6","handleFile","reader","FileReader","event","result","readAsDataURL","files","_this$props7","onPatternDraw","onMaskDraw","onPatternClick","onMaskClick","chosen","onRemove","onChose","react","display","visibility","xMirror","yMirror","id","floodfill","fillcolor","tolerance","me","mw","Q","w2","targetcolor","console","log","pixelCompare","push","kkk","pixelCompareAndSet","pop","parseInt","abs","handlePaintFillChose","handleToleranceChang","setTolerance","Enter","order","open","handleMouseEnter","children","onMouseEnter","onNext","onPrev","patterns","Fragment","App","keys","brush","line","paint","currentPattern","currentTool","handleCanvasChange","handleBrushChange","handleColorChange","handlePaintChange","handleLineChange","handlePatternChange","n","pattern","handleAddPattern","toConsumableArray","removePattern","index","filter","handleCurrentPatternChose","handleToolChose","tool","drawProcessing","hexToRgbaString","globalAlpha","lineTo","strokeStyle","lineWidth","stroke","clickProcessing","imda","pat","patternImageData","maskImageData","getPatX","pWidth","trunc","getPatY","pHeight","P","oldData","Uint8ClampedArray","forEach","maskcolor","floodfillpatternmask","maskDrawProcessing","toLocaleLowerCase","clearRect","maskClickProcessing","floodfillmask","save","dataURL","link","body","appendChild","href","download","click","removeChild","keyMap","PREV","NEXT","BRUSH","BRUSH_S","BRUSH_C","BRUSH_P","PAINT","PAINT_C","PAINT_P","LINE","WHITE","BLACK","RAND","hotKeysHandlers","rgb","index_es","handlers","Brush_Brush","Paint_Paint","Line_Line","Pattern_Pattern","Color_Color","PatternEditor_PatternEditor","Boolean","window","location","hostname","match","ReactDOM","render","Enter_Enter","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c99a1e2.chunk.js","sourcesContent":["import React from 'react';\nimport resizeImageData from \"resize-image-data\";\n\nexport class Canvas extends React.Component {\n\n\n    state = {\n        drawing: false\n    };\n\n    canvas;\n    ctx;\n\n    prevE;\n\n    mouseDownHandler = e => {\n        this.setState({drawing: true});\n\n        const {onDraw, onClick} = this.props;\n\n        onDraw && onDraw(e, this.ctx, this.canvas);\n        onClick && onClick(e, this.ctx, this.canvas);\n    };\n\n    mouseUpHandler = e => {\n        if (this.state.drawing) {\n            this.setState({drawing: false});\n\n            this.prevE = null;\n            const {onChange, width, height} = this.props;\n            onChange && onChange(this.ctx.getImageData(0, 0, width, height));\n        }\n    };\n\n    mouseLeaveHandler = e => {\n        if (this.state.drawing)\n            this.mouseUpHandler();\n    };\n\n    mouseMoveHandler = e => {\n        if (this.state.drawing) {\n            const {onDraw} = this.props;\n\n            onDraw && onDraw(e, this.ctx, this.canvas, this.prevE);\n            this.prevE = e;\n        }\n    };\n\n    componentDidMount() {\n        this.canvas = this.refs.canvas;\n        this.ctx = this.canvas.getContext(\"2d\");\n\n\n        this.canvas.addEventListener(\"mousedown\", this.mouseDownHandler);\n        document.addEventListener(\"mouseup\", this.mouseUpHandler);\n        this.canvas.addEventListener(\"mousemove\", this.mouseMoveHandler);\n        //this.canvas.addEventListener(\"mouseleave\", this.mouseLeaveHandler);\n\n\n        if (this.props.value) {\n            this.ctx.putImageData(this.props.value, 0, 0);\n        }\n\n        // this.clear();\n        // const {onChange, width, height} = this.props;\n        // onChange && onChange(this.ctx.getImageData(0, 0, width, height));\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if ((nextProps.width !== this.props.width || nextProps.height !== this.props.height)) {\n            const {onChange, width, height, resize} = this.props;\n            let imageData = this.ctx.getImageData(0, 0, width, height);\n            resize && (imageData = resizeImageData(imageData, nextProps.width, nextProps.height, resize));\n            setTimeout(() => onChange && onChange(imageData), 0);\n        }\n        if (this.props.value !== nextProps.value) {\n            if (!nextProps.value) {\n                this.clear();\n                const {onChange, width, height} = this.props;\n                onChange && onChange(this.ctx.getImageData(0, 0, width, height));\n            } else {\n                this.ctx.putImageData(nextProps.value, 0, 0);\n            }\n        }\n    }\n\n    setImageData = image =>\n        this.ctx.putImageData(image, 0, 0);\n\n    drawImage = (...p) =>\n        this.ctx.drawImage(...p);\n    getCtx = () =>\n        this.ctx;\n\n    getImageData = () =>\n        this.ctx.getImageData(0, 0, this.props.width, this.props.height);\n\n    clear = () => {\n        this.ctx.fillStyle = \"#ffffff\";\n        this.ctx.fillRect(0, 0, this.props.width, this.props.height);\n    };\n\n    render() {\n        const {width, height, readonly} = this.props;\n        return (\n            <div className={\"canvas\" + (readonly ? \" readonlyCanvas\" : \"\")}>\n                <canvas ref=\"canvas\" width={width > 0 ? width : 1} height={height > 0 ? height : 1}/>\n            </div>\n        )\n    }\n}","export const Tools = {\n    Brush: 'brush(q)',\n    Paint: 'paint(a)',\n    Line: 'line(z)'\n};\n\nexport const Fills = {\n    Color: 'color(s)',\n    Pattern: 'pattern(d)'\n};\n\nexport const BrushTypes = {\n    Square: 'square(w)',\n    Circle: 'circle(e)',\n    Pattern: 'pattern(r)',\n};\n\nexport const ResizeType = {\n    no: \"\",\n    nn: \"nearest-neighbor\",\n    bi: \"biliniear-interpolation\"\n};\n\nexport function throttled(delay, fn) {\n    let lastCall = 0;\n    return function (...args) {\n        const now = (new Date).getTime();\n        if (now - lastCall < delay) {\n            return;\n        }\n        lastCall = now;\n        return fn(...args);\n    }\n}\n\nexport function randomInteger(min, max) {\n    var rand = min - 0.5 + Math.random() * (max - min + 1);\n    rand = Math.round(rand);\n    return rand;\n}\n\nexport const whiteSheet = ctx => ({w, h}) => {\n    const image = ctx.createImageData(w, h);\n    for (let i = 0; i < image.data.length; i++)\n        image.data[i] = 255;\n    return image;\n};\n\nexport const createPattern = ctx => ({w = 50, h = 50}) => {\n    const image = ctx.createImageData(w, h);\n    for (let i = 0; i < image.data.length; i++)\n        image.data[i] = 255;\n\n    const mask = ctx.createImageData(w, h);\n    for (let i = 0; i < mask.data.length; i+=4) {\n        mask.data[i] = 0;\n        mask.data[i+1] = 0;\n        mask.data[i +2] = 0;\n        mask.data[i + 3] = 255;\n    }\n    return {\n        w, h,\n        image: image,\n        mask: mask,\n        masked: ctx.createImageData(w, h),\n        resizeType: \"nn\"\n    }\n};\n\nexport const cutCircle = function (context, x, y, radius) {\n    context.globalCompositeOperation = 'destination-out';\n    context.moveTo(x, y);\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, true);\n    context.closePath();\n    context.fill();\n    context.globalCompositeOperation = \"source-over\";\n};\nexport const circle = function (context, x, y, radius) {\n    context.moveTo(x, y);\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, true);\n    context.closePath();\n    context.fill();\n};\n\nexport const createImage = canvas => {\n    return new Promise((resolve, reject) => {\n        var tempCanvas = document.createElement(\"canvas\");\n        var tempCtx = tempCanvas.getContext(\"2d\");\n\n        tempCanvas.width = canvas.width;\n        tempCanvas.height = canvas.height;\n\n        // put the modified pixels on the temp canvas\n        tempCtx.drawImage(canvas, 0, 0, canvas.width, canvas.height);\n\n        // use the tempCanvas.toDataURL to create an img object\n        var img = new Image();\n        img.onload = () => {\n            resolve(img)\n        };\n        img.src = tempCanvas.toDataURL();\n    });\n};\n\nexport function hexToRgbaObject(hex, opacity = 1) {\n    var c;\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n        c = hex.substring(1).split('');\n        if (c.length === 3) {\n            c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n        }\n        c = '0x' + c.join('');\n        return {\n            r: (c >> 16) & 255,\n            g: (c >> 8) & 255,\n            b: c & 255,\n            a: Math.round(255 * opacity)\n        };\n    }\n    throw new Error('Bad Hex');\n}\n\nexport function hexToRgbaString(hex, opacity) {\n    var c = hexToRgbaObject(hex, opacity);\n    return `rgba(${c.r},${c.g},${c.b},${c.a})`\n}","import React from \"react\";\n\nexport class Select extends React.PureComponent {\n    handleChose = value => e => {\n\n        const {onChange} = this.props;\n        onChange && onChange(value);\n    };\n    render() {\n        const {value, items} = this.props;\n        return (\n            <div>\n                {items.map(item => (\n                    <button\n                        className={\"buttonControle\"}\n                        key={item}\n                        onClick={this.handleChose(item)}>{item + (item === value ? \"*\" : \"\")}</button>))}\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport {throttled} from \"./utils\";\n\nexport class MoveHandlers extends React.Component {\n\n    state = {\n        pressed: false\n    };\n\n    createMouseHandler = () => {\n        let startE = null;\n        let startValue = this.props.value;\n        return throttled(50, e => {\n            if (!startE) {\n                startE = e;\n                return;\n            }\n\n            let value = startValue + this.props.step * (e.x - startE.x);\n            if (value > this.props.max) value = this.props.max;\n            if (value < this.props.min) value = this.props.min;\n\n            this.props.onChange(value);\n        })\n    };\n\n    keydownHandler = e => {\n        const code = e.key.charCodeAt(0);\n\n        if (this.props.codes.indexOf(code) !== -1) {\n            if (!this.state.pressed) {\n                this.setState(state => ({pressed: true}));\n                this.handler = this.createMouseHandler();\n                document.addEventListener(\"mousemove\", this.handler);\n            }\n        }\n    };\n\n    keyupHandler = (e) => {\n        const code = e.key.charCodeAt(0);\n\n        if (this.props.codes.indexOf(code) !== -1) {\n            if (this.state.pressed) {\n                this.setState(state => ({pressed: false}));\n                document.removeEventListener(\"mousemove\", this.handler);\n                this.handler = null;\n            }\n        }\n\n    };\n\n\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.keydownHandler);\n        document.addEventListener(\"keyup\", this.keyupHandler);\n\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"keydown\", this.keydownHandler);\n        document.removeEventListener(\"keyup\", this.keyupHandler);\n        this.handler && document.removeEventListener(\"mousemove\", this.handler);\n\n    }\n\n    render() {\n        const {hide, text} = this.props;\n        return (\n            hide ? null : <button className={\"moveHandlerTip\"}>{text}{this.state.pressed ? \"*\" : \"\"}</button>\n        );\n    }\n}","import React from 'react';\nimport {BrushTypes, Fills} from \"./utils\";\nimport {Select} from \"./Select\";\nimport {MoveHandlers} from \"./MoveHandlers\";\n\nexport class Brush extends React.PureComponent {\n\n    setBrushSize = size => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({\n            ...value,\n            size\n        });\n    };\n\n    handleSizeChange = e => {\n        this.setBrushSize(+e.target.value);\n    };\n\n    setOpacity = opacity => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, opacity});\n    };\n\n    handleOpacityChang = e => {\n        this.setOpacity(+e.target.value);\n    };\n\n    selectType = type => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, type});\n    };\n\n    render() {\n        const {value, min = 1, max = 100} = this.props;\n        return (\n            <div className={\"brush\"}>\n                <div>brush</div>\n                <div className={\"brushbody\"}>\n                    <input type=\"range\" min={min} max={max} value={value.size} onChange={this.handleSizeChange}/>\n                    <MoveHandlers\n                        text={\"(f)\"}\n                        codes={[70, 102, 1072, 1040]}\n                        value={value.size}\n                        onChange={this.setBrushSize}\n                        step={1}\n                        min={min} max={max}/>\n                    <input\n                        type=\"range\"\n                        min={0} max={1} step={0.05}\n                        value={value.opacity}\n                        onChange={this.handleOpacityChang}/>\n                    <MoveHandlers\n                        text={\"(g)\"}\n                        codes={[71, 103]}\n                        value={value.opacity}\n                        step={0.01}\n                        onChange={this.setOpacity}\n                        min={0} max={1}/>\n                    <Select\n                        items={Object.values(BrushTypes)}\n                        value={value.type}\n                        onChange={this.selectType}/>\n                </div>\n\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {Canvas} from \"./Canvas\";\nimport {randomInteger} from \"./utils\";\nimport Color2 from \"color\";\n\nconst w = 10;\n\nlet colors = new Array(1000)\nexport class Palette extends React.PureComponent {\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.value !== this.props.value) {\n\n            const ctx = this.refs.canvas.getCtx();\n            ctx.fillStyle = nextProps.value;\n            const {x, y} = nextProps;\n\n            ctx.fillRect(x, y, w, w);\n        }\n    }\n\n    handleClick = (...p) => {\n        const {onClick, onPip, edited} = this.props;\n        if (edited)\n            onClick && onClick(...p);\n        else {\n            const ctx = this.refs.canvas.getCtx();\n\n            onPip && onPip(Color2(ctx.getImageData(p[0].offsetX, p[0].offsetY, 1, 1).data.slice(0, 3)).hex(), Math.floor(p[0].offsetX / w) * w, Math.floor(p[0].offsetY / w) * w);\n        }\n\n    };\n    handleDraw = (...p) => {\n        const {onDraw, edited} = this.props;\n        if (edited)\n            onDraw && onDraw(...p);\n\n    };\n    random = (delta) => {\n        const ctx = this.refs.canvas.getCtx();\n        colors = new Array(1000);\n        for (let i = 0; i < 40; i++) {\n            for (let j = 0; j < 25; j++) {\n                let color;\n                do {\n                    const r = randomInteger(Math.max(265 - delta * 3, 0), Math.min(280 + delta * 3, 359));\n                    const g = randomInteger(Math.max(60 - delta * delta, 0), Math.min(100 + delta * delta, 100));\n                    const b = randomInteger(Math.max(25 - delta / randomInteger(-20, 20), 0), Math.min(75 + delta / randomInteger(-20, 20), 100));\n                    color = Color2.hsl([r, g, b]).hex();\n                    ctx.fillStyle = color;\n                    ctx.fillRect(i*w, j*w, w, w);\n                } while (colors.indexOf(color) !== -1)\n                colors[i] = color;\n            }\n        }\n\n    };\n    render() {\n        return (\n            <Canvas\n                readonly={!this.props.edited}\n                ref=\"canvas\"\n                width={40 * w} height={25 * w}\n                onClick={this.handleClick}\n                onDraw={this.handleDraw}/>\n        );\n    }\n}","import React from 'react';\nimport Color2 from \"color\";\nimport {Palette} from \"./Palette\";\n\n\nexport class Color extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        const {value} = props;\n\n\n        this.state = {\n            value: Color2(value.value).hsl(),\n            colors: [],\n            currentColor: 0,\n            p1000: 150,\n            palette: false,\n            paletteX: 0,\n            paletteY: 0,\n            paletteEdit: false\n        };\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.value.value !== this.props.value.value) {\n            let colors = this.state.colors;\n            colors[this.state.currentColor] = Color2(nextProps.value.value).hex()\n            this.setState({\n                value: Color2(nextProps.value.value).hsl(),\n                colors\n            });\n        }\n    }\n\n    handleChangeHSL = (i) => e => {\n        const val = +e.target.value;\n        this.setState(state => {\n            let value = [state.value.color[0], state.value.color[1], state.value.color[2]];\n            value[i] = val;\n            return {\n                value: Color2.hsl(value)\n            }\n        }, () => {\n\n            const {onChange, value} = this.props;\n\n            onChange && onChange({...value, value: this.state.value.hex()});\n        });\n    };\n\n    componentDidMount() {\n        this.p1000();\n    }\n\n    p1000 = (e) => {\n        const delta = (this.state.p1000 / 4 - 67 + 100) % 100;\n\n        this.refs.palette.random(delta);\n    };\n\n    p1000change = e => {\n        const delta = +e.target.value;\n        this.setState({p1000: delta});\n    };\n\n    togglePalette = e => this.setState(state => ({palette: !state.palette}));\n\n\n    changeColor = color => () => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, value: color});\n    };\n\n    handlePip = (color, x, y) =>\n        this.setState({\n            paletteX: x,\n            paletteY: y\n        }, () => {\n\n            this.changeColor(color)();\n        });\n\n    paletteEdit = () => this.setState(state => ({paletteEdit: !state.paletteEdit}));\n\n    render() {\n        const {value, onDraw, onClick, onWhite, onBlack, onRand} = this.props;\n        return (\n            <div className={\"color\"}>\n                <div>color</div>\n                <div className={\"flex\"}>\n                    <div className={\"colorValue\"} onClick={this.togglePalette}\n                         style={{\n                        backgroundColor: value.value\n                    }}/>\n                    <input type={\"range\"} min={0} max={359} step={1}\n                           onChange={this.handleChangeHSL(0)}\n                           value={this.state.value.color[0]}/>\n                    <input type={\"range\"} min={0} max={100} step={1}\n                           onChange={this.handleChangeHSL(1)}\n                           value={this.state.value.color[1]}/>\n                    <input type={\"range\"} min={0} max={100} step={1}\n                           onChange={this.handleChangeHSL(2)}\n                           value={this.state.value.color[2]}/>\n\n                    <div>\n                        <button onClick={onWhite}>white(x)</button>\n                    </div>\n                    <div>\n                        <button onClick={onBlack}>black(c)</button>\n                    </div>\n                    <div>\n                        <button onClick={onRand}>random(v)</button>\n                    </div>\n                </div>\n                <div className={\"randomnes\" + (this.state.palette ? \"\" : \" randomes-hide\")}>\n                    <div className={\"flex\"}>\n                        <input type={\"range\"} min={0} max={400} step={1} onChange={this.p1000change}\n                               value={this.state.p1000}/>\n                        <button onClick={this.p1000}>random</button>\n                        <button onClick={this.paletteEdit}\n                                className={\"buttonControle\"}>edit{this.state.paletteEdit ? \"*\" : \"\"}</button>\n                    </div>\n                    <div className={\"palette\"}>\n                        <Palette ref={\"palette\"}\n                                 edited={this.state.paletteEdit}\n                                 onDraw={onDraw}\n                                 onClick={onClick}\n                                 onPip={this.handlePip} x={this.state.paletteX} y={this.state.paletteY}\n                                 value={value.value}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport {Canvas} from \"./Canvas\";\nimport {createImage, ResizeType} from \"./utils\";\n\nconst nextType = {\n    no: \"nn\",\n    nn: \"bi\",\n    bi: \"no\"\n};\n\nexport class PatternEditor extends React.Component {\n\n    constructor(props){\n        super(props);\n\n\n        this.state = {\n            mask: true,\n            w: props.value.w,\n            h: props.value.h,\n        };\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.value.w !== nextProps.value.w)\n            this.setState({w: nextProps.value.w});\n        if (this.props.value.h !== nextProps.value.h)\n            this.setState({h: nextProps.value.h})\n    }\n\n    componentDidMount() {\n        this.updateMaskedImage();\n    }\n\n    updateMaskedImage = () => {\n        try {\n            const {onChange, value} = this.props;\n\n            const ctx = this.refs[\"canvasMasked\"].getCtx();\n\n            ctx.putImageData(this.refs[\"canvasMask\"].getImageData(), 0, 0);\n            ctx.globalCompositeOperation = \"source-in\";\n            ctx.drawImage(this.refs.canvas.canvas, 0, 0, value.w, value.h);\n\n\n            createImage(ctx.canvas).then(img => onChange && onChange({...this.props.value, imageMasked: img}));\n            createImage(this.refs[\"canvasMask\"].canvas).then(img => onChange && onChange({\n                ...this.props.value,\n                imageMask: img\n            }));\n\n        } catch (e) {\n        }\n    };\n\n    maskToggle = e => this.setState(state => ({mask: !state.mask}));\n\n    sizeChangeHandler = s => e => {\n        const {onChange, value} = this.props;\n        const size = +e.target.value;\n\n        this.setState({[s]: e.target.value});\n\n        if (size < 1) return;\n        onChange && onChange({...value, [s]: size});\n        this.updateMaskedImage();\n    };\n    mirrorChangeHandler = name => e => {\n        const {onChange, value} = this.props;\n        onChange && onChange({...value, [name]: !value[name]});\n    };\n    imageChangeHandler = image => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, image});\n        this.updateMaskedImage();\n    };\n    maskChangeHandler = mask => {\n        const {onChange, value} = this.props;\n        onChange && onChange({...value, mask});\n        this.updateMaskedImage();\n    };\n    resizeTypeChangeHandler = e => {\n        const {onChange, value} = this.props;\n        onChange && onChange({...value, resizeType: nextType[value.resizeType]});\n    };\n\n    handleFile = e => {\n        var reader = new FileReader();\n        reader.onload = (event) => {\n            var img = new Image();\n            img.onload = () => {\n                this.refs.canvas.ctx.drawImage(img, 0, 0, this.props.value.w, this.props.value.h);\n                this.updateMaskedImage();\n            };\n            img.src = event.target.result;\n        };\n        reader.readAsDataURL(e.target.files[0]);\n    };\n\n    render() {\n        const {value, onPatternDraw, onMaskDraw, onPatternClick, onMaskClick, onRemove, chosen, onChose} = this.props;\n        return (\n            <div className={\"patternEditor\"}>\n                <div className={value.w < 63 ? \"canvases\" : \"canvases-col\"}>\n                    <Canvas ref=\"canvas\" resize={ResizeType[value.resizeType]}\n                            value={value.image}\n                            width={value.w} height={value.h}\n                            onDraw={onPatternDraw}\n                            onClick={onPatternClick}\n                            onChange={this.imageChangeHandler}/>\n                    <div style={{display: !this.state.mask ? \"none\" : \"\"}}>\n                        <Canvas ref=\"canvasMask\"\n                                resize={ResizeType[value.resizeType === \"bi\" ? \"nn\" : value.resizeType]}\n                                value={value.mask}\n                                width={value.w} height={value.h}\n                                onDraw={onMaskDraw}\n                                onClick={onMaskClick}\n                                onChange={this.maskChangeHandler}/>\n                    </div>\n                    <div style={{display: !this.state.mask ? \"none\" : \"\"}}>\n                        <Canvas ref=\"canvasMasked\"\n                                readonly\n                                resize={ResizeType[value.resizeType === \"bi\" ? \"nn\" : value.resizeType]}\n                                value={value.masked}\n                                width={value.w} height={value.h}/>\n                    </div>\n                </div>\n                <div className={\"btns\"}>\n                    <button onClick={onChose} style={{\n                        visibility: chosen ? \"visible\" : \"\"\n                    }}>c\n                    </button>\n                    <button onClick={this.maskToggle}>{!this.state.mask ? \"show \" : \"hide \"}mask</button>\n                    <br/>\n                    <input type=\"number\" step={1} min={1} max={500} value={this.state.w}\n                           onChange={this.sizeChangeHandler('w')}/>\n                    <input type=\"number\" step={1} min={1} max={500} value={this.state.h}\n                           onChange={this.sizeChangeHandler('h')}/>\n                    stretch:\n                    <button onClick={this.resizeTypeChangeHandler} className={'resizeType'}>{value.resizeType}</button>\n                    <br/>\n                    mirror:x\n                    <input type=\"checkbox\" value={value.xMirror} onChange={this.mirrorChangeHandler('xMirror')}/>\n                    y\n                    <input type=\"checkbox\" value={value.yMirror} onChange={this.mirrorChangeHandler('yMirror')}/>\n                    <br/>\n                    <input type=\"file\" id=\"imageLoader\" name=\"imageLoader\" onChange={this.handleFile}/>\n                    {/*<button onClick={onRemove}>remove</button> todo: !!! багг */}\n                </div>\n            </div>\n        );\n    }\n}","\n\n\nexport function floodfill(data, x, y, fillcolor, tolerance, width, height) {\n\n    var length = data.length;\n    var Q = [];\n    var i = (x + y * width) * 4;\n    var e = i, w = i, me, mw, w2 = width * 4;\n\n    var targetcolor = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\n    console.log(targetcolor, fillcolor);\n\n    if (!pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n        return false;\n    }\n    Q.push(i);\n    let kkk = 0;\n    while (Q.length) {\n        kkk++;\n        i = Q.pop();\n        let a = 0;\n        if (pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n            e = i;\n            w = i;\n            mw = parseInt(i / w2) * w2 - 1; //left bound\n            me = mw + w2 - 1;               //right bound\n\n\n            while (mw < w && mw < (w -= 4) && pixelCompareAndSet(w, targetcolor, fillcolor, data, length, tolerance, width)) {a++} //go left until edge hit\n            while (me > e && me > (e += 4) && pixelCompareAndSet(e, targetcolor, fillcolor, data, length, tolerance, width)) {a++} //go right until edge hit\n            for (var j = w + 4; j < e; j += 4) {\n                if (j - w2 >= 0 && pixelCompare(j - w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j - w2); //queue y-1\n                if (j + w2 < length && pixelCompare(j + w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j + w2); //queue y+1\n            }\n        }\n        //if (kkk > 30000) return data;\n        //console.log(kkk, a);\n    }\n    return data;\n}\n\nfunction pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width) {\n    if (i < 0 || i >= length) return false; //out of bounds\n    if (data[i + 3] === 0 && fillcolor.a > 0) return true;  //surface is invisible and fill is visible\n\n    if (\n        Math.abs(targetcolor[3] - fillcolor.a) <= tolerance &&\n        Math.abs(targetcolor[0] - fillcolor.r) <= tolerance &&\n        Math.abs(targetcolor[1] - fillcolor.g) <= tolerance &&\n        Math.abs(targetcolor[2] - fillcolor.b) <= tolerance\n    ) return false; //target is same as fill\n\n    if (\n        (targetcolor[3] === data[i + 3]) &&\n        (targetcolor[0] === data[i]) &&\n        (targetcolor[1] === data[i + 1]) &&\n        (targetcolor[2] === data[i + 2])\n    ) return true; //target matches surface\n\n    if (\n        Math.abs(targetcolor[3] - data[i + 3]) <= (tolerance) &&\n        Math.abs(targetcolor[0] - data[i]) <= tolerance &&\n        Math.abs(targetcolor[1] - data[i + 1]) <= tolerance &&\n        Math.abs(targetcolor[2] - data[i + 2]) <= tolerance\n    ) return true; //target to surface within tolerance\n\n    return false; //no match\n}\n\nfunction pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width) {\n    if (pixelCompare(i, targetcolor, fillcolor, data, length, tolerance)) {\n        //fill the color\n        data[i] = fillcolor.r;\n        data[i + 1] = fillcolor.g;\n        data[i + 2] = fillcolor.b;\n        data[i + 3] = fillcolor.a;\n        return true;\n    }\n    return false;\n}","export function floodfillmask(data, x, y, maskImageData, tolerance, width, height) {\n\n    const fillcolor = {\n        r: 255,\n        g: 0,\n        b: 0,\n        a: 255\n    };\n    var length = data.length;\n    var Q = [];\n    var P = [];\n    var i = (x + y * width) * 4;\n    var e = i, w = i, me, mw, w2 = width * 4;\n\n    var targetcolor = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\n    const oldData = new Uint8ClampedArray(data);\n\n    if (!pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n        return false;\n    }\n    Q.push(i);\n    let kkk = 0;\n    while (Q.length) {\n        kkk++;\n        i = Q.pop();\n        if (pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n            P.push(i);\n            e = i;\n            w = i;\n            mw = parseInt(i / w2) * w2 - 1; //left bound\n            me = mw + w2 - 1;               //right bound\n            while (mw < w && mw < (w -= 4) && pixelCompareAndSet(w, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(w)\n            } //go left until edge hit\n            while (me > e && me > (e += 4) && pixelCompareAndSet(e, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(e)\n            } //go right until edge hit\n            for (var j = w + 4; j < e; j += 4) {\n                if (j - w2 >= 0 && pixelCompare(j - w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j - w2); //queue y-1\n                if (j + w2 < length && pixelCompare(j + w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j + w2); //queue y+1\n            }\n        }\n    }\n\n    console.log(kkk);\n\n    P.forEach(p => {\n\n        var x = (p / 4) % width % maskImageData.width;\n        var y = Math.floor((p / 4) / width) % maskImageData.height;\n\n\n        var j = (x + y * maskImageData.width) * 4;\n        var targetcolor = [0, 0, 0, 255];\n        var maskcolor = [maskImageData.data[j], maskImageData.data[j + 1], maskImageData.data[j + 2], maskImageData.data[j + 3]];\n\n        // console.log(maskcolor);\n        if (maskcolor[0] === 0 && maskcolor[1] === 0 && maskcolor[2] === 0 && maskcolor[3] === 255) {\n            //black\n            data[p] = targetcolor[0];\n            data[p + 1] = targetcolor[1];\n            data[p + 2] = targetcolor[2];\n            data[p + 3] = targetcolor[3];\n        } else {\n            data[p] = oldData[p];\n            data[p + 1] = oldData[p + 1];\n            data[p + 2] = oldData[p + 2];\n            data[p + 3] = oldData[p + 3];\n        }\n    });\n\n\n    return data;\n}\n\nexport function floodfillpatternmask(data, x, y, patternImageData, maskImageData, tolerance, width, height, xMirror, yMirror) {\n\n    const getPatX = !xMirror\n        ? (i, width, pWidth) => (i / 4) % width % pWidth\n        : (i, width, pWidth) => {\n            const x = (i / 4) % width;\n\n            return Math.trunc(x / pWidth) % 2 === 0\n                ? x % pWidth\n                : pWidth - x % pWidth;\n        };\n    const getPatY = !yMirror\n        ? (i, width, pHeight) => y = Math.floor((i / 4) / width) % pHeight\n        : (i, width, pHeight) => {\n            const y =  Math.floor((i / 4) / width);\n\n            return Math.trunc(y / pHeight) % 2 === 0\n                ? y % pHeight\n                : pHeight - y % pHeight;\n        };\n    const fillcolor = {\n        r: 255,\n        g: 0,\n        b: 0,\n        a: 255\n    };\n    var length = data.length;\n    var Q = [];\n    var P = [];\n    var i = (x + y * width) * 4;\n    var e = i, w = i, me, mw, w2 = width * 4;\n\n    var targetcolor = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\n    const oldData = new Uint8ClampedArray(data);\n\n    if (!pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n        return false;\n    }\n    Q.push(i);\n    let kkk = 0;\n    while (Q.length) {\n        kkk++;\n        i = Q.pop();\n        if (pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n            P.push(i);\n            e = i;\n            w = i;\n            mw = parseInt(i / w2) * w2 - 1; //left bound\n            me = mw + w2 - 1;               //right bound\n            while (mw < w && mw < (w -= 4) && pixelCompareAndSet(w, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(w)\n            } //go left until edge hit\n            while (me > e && me > (e += 4) && pixelCompareAndSet(e, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(e)\n            } //go right until edge hit\n            for (var j = w + 4; j < e; j += 4) {\n                if (j - w2 >= 0 && pixelCompare(j - w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j - w2); //queue y-1\n                if (j + w2 < length && pixelCompare(j + w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j + w2); //queue y+1\n            }\n        }\n    }\n\n    console.log(kkk);\n\n    P.forEach(p => {\n\n        var x = getPatX(p, width, patternImageData.width);\n        var y = getPatY(p, width, patternImageData.height);\n\n\n        var j = (x + y * patternImageData.width) * 4;\n        var targetcolor = [patternImageData.data[j], patternImageData.data[j + 1], patternImageData.data[j + 2], patternImageData.data[j + 3]];\n        var maskcolor = [maskImageData.data[j], maskImageData.data[j + 1], maskImageData.data[j + 2], maskImageData.data[j + 3]];\n\n        // console.log(maskcolor);\n        if (maskcolor[0] === 0 && maskcolor[1] === 0 && maskcolor[2] === 0 && maskcolor[3] === 255) {\n            //\n            data[p] = targetcolor[0];\n            data[p + 1] = targetcolor[1];\n            data[p + 2] = targetcolor[2];\n            data[p + 3] = targetcolor[3];\n        } else {\n            data[p] = oldData[p];\n            data[p + 1] = oldData[p + 1];\n            data[p + 2] = oldData[p + 2];\n            data[p + 3] = oldData[p + 3];\n        }\n    });\n\n\n    return data;\n}\n\nexport function floodfillpattern(data, x, y, patternImageData, tolerance, width, height) {\n\n    const fillcolor = {\n        r: 255,\n        g: 0,\n        b: 0,\n        a: 255\n    };\n    var length = data.length;\n    var Q = [];\n    var P = [];\n    var i = (x + y * width) * 4;\n    var e = i, w = i, me, mw, w2 = width * 4;\n\n    var targetcolor = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\n    if (!pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n        return false;\n    }\n    Q.push(i);\n    let kkk = 0;\n    while (Q.length) {\n        kkk++;\n        i = Q.pop();\n        if (pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n            P.push(i);\n            e = i;\n            w = i;\n            mw = parseInt(i / w2) * w2 - 1; //left bound\n            me = mw + w2 - 1;               //right bound\n            while (mw < w && mw < (w -= 4) && pixelCompareAndSet(w, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(w)\n            } //go left until edge hit\n            while (me > e && me > (e += 4) && pixelCompareAndSet(e, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(e)\n            } //go right until edge hit\n            for (var j = w + 4; j < e; j += 4) {\n                if (j - w2 >= 0 && pixelCompare(j - w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j - w2); //queue y-1\n                if (j + w2 < length && pixelCompare(j + w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j + w2); //queue y+1\n            }\n        }\n    }\n\n    console.log(kkk);\n\n    P.forEach(p => {\n\n        var x = (p / 4) % width % patternImageData.width;\n        var y = Math.floor((p / 4) / width) % patternImageData.height;\n\n\n        var j = (x + y * patternImageData.width) * 4;\n        var targetcolor = [patternImageData.data[j], patternImageData.data[j + 1], patternImageData.data[j + 2], patternImageData.data[j + 3]];\n\n\n        data[p] = targetcolor[0];\n        data[p + 1] = targetcolor[1];\n        data[p + 2] = targetcolor[2];\n        data[p + 3] = targetcolor[3];\n    });\n\n\n    return data;\n}\n\nfunction pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width) {\n    if (i < 0 || i >= length) return false; //out of bounds\n    if (data[i + 3] === 0 && fillcolor.a > 0) return true;  //surface is invisible and fill is visible\n\n    if (\n        Math.abs(targetcolor[3] - fillcolor.a) <= tolerance &&\n        Math.abs(targetcolor[0] - fillcolor.r) <= tolerance &&\n        Math.abs(targetcolor[1] - fillcolor.g) <= tolerance &&\n        Math.abs(targetcolor[2] - fillcolor.b) <= tolerance\n    ) return false; //target is same as fill\n\n    if (\n        (targetcolor[3] === data[i + 3]) &&\n        (targetcolor[0] === data[i]) &&\n        (targetcolor[1] === data[i + 1]) &&\n        (targetcolor[2] === data[i + 2])\n    ) return true; //target matches surface\n\n    if (\n        Math.abs(targetcolor[3] - data[i + 3]) <= (255 - tolerance) &&\n        Math.abs(targetcolor[0] - data[i]) <= tolerance &&\n        Math.abs(targetcolor[1] - data[i + 1]) <= tolerance &&\n        Math.abs(targetcolor[2] - data[i + 2]) <= tolerance\n    ) return true; //target to surface within tolerance\n\n    return false; //no match\n}\n\nfunction pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width) {\n    if (pixelCompare(i, targetcolor, fillcolor, data, length, tolerance)) {\n        //fill the color\n        data[i] = fillcolor.r;\n        data[i + 1] = fillcolor.g;\n        data[i + 2] = fillcolor.b;\n        data[i + 3] = fillcolor.a;\n        return true;\n    }\n    return false;\n}","import React from 'react';\nimport {Fills, Tools} from \"./utils\";\nimport {Select} from \"./Select\";\nimport {MoveHandlers} from \"./MoveHandlers\";\n\nexport class Paint extends React.PureComponent {\n\n    handlePaintFillChose = fill => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({\n            ...value,\n            fill\n        });\n    };\n    handleToleranceChang = e => {\n        this.setTolerance(+e.target.value);\n    };\n\n    setTolerance = tolerance => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({\n            ...value,\n            tolerance\n        });\n    };\n\n    render() {\n        const {value} = this.props;\n        return (\n            <div className={\"paint\"}>\n                <div>paint</div>\n                <div className={\"brushbody\"}>\n                    <input\n                        type=\"range\"\n                        min={0} max={255} step={1}\n                        value={value.tolerance}\n                        onChange={this.handleToleranceChang}/>\n                    <MoveHandlers\n                        text={\"(h)\"}\n                        codes={[72, 104]}\n                        value={value.tolerance}\n                        onChange={this.setTolerance}\n                        step={0.5}\n                        min={0} max={255}/>\n                    <Select\n                        items={Object.values(Fills)}\n                        value={value.fill}\n                        onChange={this.handlePaintFillChose}/>\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport {MoveHandlers} from \"./MoveHandlers\";\n\nexport class Line extends React.PureComponent {\n\n    setBrushSize = size => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({\n            ...value,\n            size\n        });\n    };\n\n    handleSizeChange = e => {\n        this.setBrushSize(+e.target.value);\n    };\n\n    setOpacity = opacity => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, opacity});\n    };\n\n    handleOpacityChang = e => {\n        this.setOpacity(+e.target.value);\n    };\n\n    render() {\n        const {value, min, max} = this.props;\n        return (\n            <div className={\"line\"}>\n                <div>line</div>\n                <div className={\"brushbody\"}>\n                    <input type=\"range\" min={1} max={100} value={value.size} onChange={this.handleSizeChange}/>\n                    <MoveHandlers\n                        text={\"(f)\"}\n                        codes={[70, 102, 1072, 1040]}\n                        value={value.size}\n                        onChange={this.setBrushSize}\n                        step={0.5}\n                        min={min} max={max}/>\n                    <input\n                        type=\"range\"\n                        min={0} max={1} step={0.05}\n                        value={value.opacity}\n                        onChange={this.handleOpacityChang}/>\n                    <MoveHandlers\n                        text={\"(g)\"}\n                        codes={[71, 103]}\n                        value={value.opacity}\n                        step={0.01}\n                        onChange={this.setOpacity}\n                        min={0} max={1}/>\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\n\nexport class Enter extends React.PureComponent {\n    order = [2, 1, 2, 1, 2];\n    state = {\n        i: 0,\n        open: false\n    };\n    handleMouseEnter = i => e => {\n        if (i === this.order[this.state.i]) {\n            console.log(i + 1, this.order[this.state.i]);\n            this.setState(state => ({i: state.i + 1}), () => {\n                if (this.state.i === this.order.length) {\n                    this.setState({open: true});\n                    this.setState({i: 0})\n                }\n            })\n        } else {\n            if (i !== this.order[0]) {\n                this.setState(state => ({i: 0}))\n            } else {\n\n                this.setState(state => ({i: 1}))\n            }\n\n        }\n    };\n\n    render() {\n        return (\n            this.state.open ? this.props.children :\n                <div className={\"enter\"}>\n                    {[0, 1, 2, 3, 4].map(i => (\n                        <div\n                            key={i}\n                            className={\"enter-door\"}\n                            onMouseEnter={this.handleMouseEnter(i)}/>\n                    ))}\n                </div>\n        );\n    }\n\n}","import React from 'react';\nimport {BrushTypes, Fills} from \"./utils\";\nimport {Select} from \"./Select\";\nimport {MoveHandlers} from \"./MoveHandlers\";\n\nexport class Pattern extends React.PureComponent {\n\n    setBrushSize = size => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({\n            ...value,\n            size\n        });\n    };\n\n    handleSizeChange = e => {\n        this.setBrushSize(+e.target.value);\n    };\n\n    setOpacity = opacity => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, opacity});\n    };\n\n    handleOpacityChang = e => {\n        this.setOpacity(+e.target.value);\n    };\n\n    selectType = type => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, type});\n    };\n\n    render() {\n        const {onNext, onPrev, value, patterns} = this.props;\n        return (\n            <div className={\"brush\"}>\n                <div>pattern</div>\n                <div className={\"brushbody\"}>\n                    {patterns.length === 0 && <div>none</div>}\n                    {patterns.length === 1 && value}\n                    {patterns.length > 1 && <>\n                        <div className={\"patternVal\"}> {value} </div>\n                        <div>\n                            <button onClick={onNext} className={'moveHandlerTip'}>{\"<\"}</button>\n                        </div>\n                        <div>\n                            <button onClick={onPrev} className={'moveHandlerTip'}>{\">\"}</button>\n                        </div>\n                    </>}\n                </div>\n\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport './App.css';\nimport {Canvas} from \"./components/Canvas\";\nimport {Brush} from \"./components/Brush\";\nimport {Color} from \"./components/Color\";\nimport {PatternEditor} from \"./components/PatternEditor\";\nimport {floodfill} from \"./components/floodfill\";\nimport {floodfillmask, floodfillpatternmask} from \"./components/floodfillpattern\";\nimport {\n    Tools,\n    Fills,\n    hexToRgbaObject,\n    hexToRgbaString,\n    BrushTypes,\n    createPattern,\n    circle,\n    cutCircle, whiteSheet, randomInteger, throttled\n} from \"./components/utils\";\nimport {Paint} from \"./components/Paint\";\nimport {Line} from \"./components/Line\";\nimport {HotKeys, GlobalHotKeys} from \"react-hotkeys\";\nimport Color2 from \"color\";\nimport {Select} from \"./components/Select\";\nimport _omit from \"lodash/omit\";\nimport {Enter} from \"./components/Enter\";\nimport {MoveHandlers} from \"./components/MoveHandlers\";\nimport {Pattern} from \"./components/Pattern\";\n\n/**\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n отмена операции (история)\n отключение маски при скрытии\nудаление патерна\n *\n *\n *\n *\n *  расстояние между кистями\n *\n\n mouse trottling\n\n *\n * */\n\n\nclass App extends Component {\n\n\n    componentDidMount() {\n\n        // this.setState(state => ({\n        //     patterns: state.patterns.map(createPattern(this.refs.canvas.ctx)),\n        //     canvas: {...state.canvas, image: whiteSheet(this.refs.canvas.ctx)(state.canvas)}\n        // }));\n    }\n\n    state = {\n        keys: {},\n        canvas: {\n            w: 450,\n            h: 450,\n        },\n        brush: {\n            size: 8,\n            opacity: 1,\n            type: BrushTypes.Circle\n        },\n        line: {\n            size: 8,\n            opacity: 1,\n        },\n        color: {\n            value: '#000000'\n        },\n        paint: {\n            fill: Fills.Color,\n            tolerance: 0\n        },\n        patterns: [],\n        // patterns: [{\n        //     w: 50,\n        //     h: 62,\n        //     resizeType: \"zero\"\n        // }, {\n        //     w: 50,\n        //     h: 62,\n        //     resizeType: \"zero\"\n        // }],\n        currentPattern: 0,\n        currentTool: Tools.Brush\n    };\n\n\n    handleCanvasChange = image => this.setState(state => ({canvas: {...state.canvas, image}}));\n\n    handleBrushChange = brush => this.setState({brush});//, () => console.log(this.state.brush));\n    handleColorChange = color => this.setState({color});//, () => console.log(this.state.color));\n    handlePaintChange = paint => this.setState({paint});//, () => console.log(this.state.color));\n    handleLineChange = line => this.setState({line});//, () => console.log(this.state.color));\n\n    handlePatternChange = (n) => pattern => {\n        this.setState(state => ({\n            patterns: state.patterns.map((p, i) => i === n ? pattern : p)\n        }))\n    };\n    handleAddPattern = e => {\n        this.setState(state => ({\n            patterns: [...state.patterns, createPattern(this.refs.canvas.ctx)({\n                w: 50,\n                h: 50,\n            })]\n        }))\n    };\n    removePattern = index => () =>\n        this.setState(state => {\n            const patterns = this.state.patterns.filter((p, i) => i !== index);\n            return {\n                patterns,\n                currentPattern: patterns[state.currentPattern] ? state.currentPattern : (patterns.length !== 0 ? (patterns.length -1) : 0)\n            }\n        });\n\n    handleCurrentPatternChose = pattern => e => this.setState({currentPattern: pattern});\n\n\n    handleToolChose = tool => this.setState({currentTool: tool});\n\n    drawProcessing = (e, ctx, canvas, prevE) => {\n        if (this.state.currentTool === Tools.Brush) {\n            ctx.fillStyle = hexToRgbaString(this.state.color.value);\n            ctx.globalAlpha = this.state.brush.opacity;\n\n            if (this.state.brush.type === BrushTypes.Square) {\n                ctx.fillRect(e.offsetX - this.state.brush.size / 2, e.offsetY - this.state.brush.size / 2, this.state.brush.size, this.state.brush.size);\n            } else if (this.state.brush.type === BrushTypes.Circle) {\n                ctx.beginPath();\n                ctx.arc(e.offsetX, e.offsetY, this.state.brush.size / 2, 0, 2 * Math.PI);\n                ctx.fill();\n            } else if (this.state.brush.type === BrushTypes.Pattern && this.state.patterns[this.state.currentPattern]) {\n                const p = this.state.patterns[this.state.currentPattern].image;\n                const i = this.state.patterns[this.state.currentPattern].imageMasked;\n                ctx.drawImage(i, e.offsetX - p.width / 2, e.offsetY - p.height / 2, p.width, p.height);\n            }\n            ctx.globalAlpha = 1;\n\n        } else if (this.state.currentTool === Tools.Line) {\n            if (prevE) {\n                ctx.globalAlpha = this.state.line.opacity;\n                ctx.beginPath();\n                ctx.moveTo(prevE.offsetX, prevE.offsetY);\n                ctx.lineTo(e.offsetX, e.offsetY);\n                ctx.strokeStyle = this.state.color.value;\n                ctx.lineWidth = this.state.line.size;\n                ctx.stroke();\n                ctx.globalAlpha = 1;\n                ctx.closePath();\n            }\n        }\n    };\n\n    clickProcessing = (e, ctx, canvas) => {\n        if (this.state.currentTool === Tools.Paint) {\n            if (this.state.paint.fill === Fills.Color) {\n                const imda = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n                let data = imda.data;\n                let width = imda.width;\n                let height = imda.height;\n                let color = hexToRgbaObject(this.state.color.value);\n\n                floodfill(data, e.offsetX, e.offsetY, color, this.state.paint.tolerance, width, height);\n\n                ctx.putImageData(imda, 0, 0);\n            } else if (this.state.paint.fill === Fills.Pattern && this.state.patterns[this.state.currentPattern]) {\n                const imda = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n                let data = imda.data;\n                let width = imda.width;\n                let height = imda.height;\n\n                const pat = this.state.patterns[this.state.currentPattern];\n\n                floodfillpatternmask(data, e.offsetX, e.offsetY, pat.image, pat.mask, this.state.paint.tolerance, width, height, pat.xMirror, pat.yMirror);\n\n                ctx.putImageData(imda, 0, 0);\n            }\n        }\n    };\n\n    maskDrawProcessing = (e, ctx, canvas, prevE) => {\n        if (this.state.currentTool === Tools.Brush) {\n            if (this.state.brush.type === BrushTypes.Pattern && this.state.patterns[this.state.currentPattern]) {\n                const p = this.state.patterns[this.state.currentPattern].mask;\n                const i = this.state.patterns[this.state.currentPattern].imageMask;\n                ctx.drawImage(i, e.offsetX - p.width / 2, e.offsetY - p.height / 2, p.width, p.height);\n            } else {\n                if (this.state.color.value.toLocaleLowerCase() === \"#ffffff\") {\n                    if (this.state.brush.type === BrushTypes.Square) {\n                        ctx.clearRect(e.offsetX - this.state.brush.size / 2, e.offsetY - this.state.brush.size / 2, this.state.brush.size, this.state.brush.size);\n                    } else if (this.state.brush.type === BrushTypes.Circle) {\n                        cutCircle(ctx, e.offsetX, e.offsetY, this.state.brush.size / 2);\n                    }\n                } else {\n                    ctx.fillStyle = \"#000000\";\n                    if (this.state.brush.type === BrushTypes.Square) {\n                        ctx.fillRect(e.offsetX - this.state.brush.size / 2, e.offsetY - this.state.brush.size / 2, this.state.brush.size, this.state.brush.size);\n                    } else if (this.state.brush.type === BrushTypes.Circle) {\n                        circle(ctx, e.offsetX, e.offsetY, this.state.brush.size / 2);\n                    }\n                }\n            }\n        } else if (this.state.currentTool === Tools.Line) {\n            if (prevE) {\n\n                if (this.state.color.value.toLocaleLowerCase() === \"#ffffff\") {\n\n                    ctx.globalCompositeOperation = 'destination-out';\n                    ctx.beginPath();\n                    ctx.moveTo(prevE.offsetX, prevE.offsetY);\n                    ctx.lineTo(e.offsetX, e.offsetY);\n                    ctx.strokeStyle = 'black';\n                    ctx.lineWidth = this.state.line.size;\n                    ctx.stroke();\n                    ctx.closePath();\n                    ctx.globalCompositeOperation = \"source-over\";\n                } else {\n                    ctx.beginPath();\n                    ctx.moveTo(prevE.offsetX, prevE.offsetY);\n                    ctx.lineTo(e.offsetX, e.offsetY);\n                    ctx.strokeStyle = 'black';\n                    ctx.lineWidth = this.state.line.size;\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n        }\n    };\n\n    maskClickProcessing = (e, ctx, canvas) => {\n        if (this.state.currentTool === Tools.Paint) {\n            if (this.state.paint.fill === Fills.Color) {\n                const imda = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n                let data = imda.data;\n                let width = imda.width;\n                let height = imda.height;\n                let color = this.state.color.value.toLocaleLowerCase() === \"#ffffff\"\n                    ? {r: 0, g: 0, b: 0, a: 0}\n                    : {r: 0, g: 0, b: 0, a: 255}\n\n                floodfill(data, e.offsetX, e.offsetY, color, this.state.paint.tolerance, width, height);\n\n                ctx.putImageData(imda, 0, 0);\n            } else if (this.state.paint.fill === Fills.Pattern && this.state.patterns[this.state.currentPattern]) {\n                const imda = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n                let data = imda.data;\n                let width = imda.width;\n                let height = imda.height;\n\n                floodfillmask(data, e.offsetX, e.offsetY, this.state.patterns[this.state.currentPattern].mask, this.state.paint.tolerance, width, height);\n\n                ctx.putImageData(imda, 0, 0);\n            }\n        }\n    };\n\n    save = () => {\n        var dataURL = this.refs.canvas.canvas.toDataURL(\"image/jpeg\");\n        var link = document.createElement(\"a\");\n        document.body.appendChild(link); // Firefox requires the link to be in the body :(\n        link.href = dataURL;\n        link.download = \"ZzZzZzZ.jpg\";\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    keyMap = {\n        PREV: \"1\",\n        NEXT: \"2\",\n        BRUSH: \"q\",\n        BRUSH_S: \"w\",\n        BRUSH_C: \"e\",\n        BRUSH_P: \"r\",\n        PAINT: \"a\",\n        PAINT_C: \"s\",\n        PAINT_P: \"d\",\n        LINE: \"z\",\n        WHITE: \"x\",\n        BLACK: \"c\",\n        RAND: \"v\",\n\n    };\n\n    hotKeysHandlers = {\n        NEXT: () =>\n            this.setState(state => ({currentPattern: (state.currentPattern + 1) % state.patterns.length})),\n        PREV: () =>\n            this.setState(state => ({currentPattern: (state.currentPattern - 1 + state.patterns.length) % state.patterns.length})),\n        BRUSH: () =>\n            this.setState({currentTool: Tools.Brush}),\n        BRUSH_S: () =>\n            this.setState(state => ({brush: {...state.brush, type: BrushTypes.Square}})),\n        BRUSH_C: () =>\n            this.setState(state => ({brush: {...state.brush, type: BrushTypes.Circle}})),\n        BRUSH_P: () =>\n            this.setState(state => ({brush: {...state.brush, type: BrushTypes.Pattern}})),\n        PAINT: () =>\n            this.setState({currentTool: Tools.Paint}),\n        PAINT_C: () =>\n            this.setState(state => ({paint: {...state.paint, fill: Fills.Color}})),\n        PAINT_P: () =>\n            this.setState(state => ({paint: {...state.paint, fill: Fills.Pattern}})),\n        LINE: () =>\n            this.setState({currentTool: Tools.Line}),\n        WHITE: () =>\n            this.setState(state => ({color: {...state.color, value: \"#ffffff\"}})),\n        BLACK: () =>\n            this.setState(state => ({color: {...state.color, value: \"#000000\"}})),\n        RAND: () =>\n            this.setState(state => {\n                const r = randomInteger(0, 255);\n                const g = randomInteger(0, 255);\n                const b = randomInteger(0, 255);\n                const color = Color2.rgb([r, g, b]).hex();\n                return {color: {...state.color, value: color}}\n            }),\n    };\n\n    render() {\n        return (\n            <GlobalHotKeys keyMap={this.keyMap} handlers={this.hotKeysHandlers}>\n                <div className={\"all\"}>\n                    <div className=\"App\">\n                        <div className={\"controls\"}>\n                            <div className={\"kunteynir\"}>\n                                {/*PatternCurr:{Object.keys(this.state.patterns).map(pattern => (*/}\n                                {/*<button key={pattern}*/}\n                                {/*onClick={this.handleCurrentPatternChose(pattern)}>{pattern}</button>*/}\n\n                                {/*))}:{this.state.currentPattern}*/}\n\n\n                                <Select\n                                    items={Object.values(Tools)}\n                                    value={this.state.currentTool}\n                                    onChange={this.handleToolChose}/>\n                                {this.state.currentTool === Tools.Brush &&\n                                <Brush\n                                    value={this.state.brush}\n                                    onChange={this.handleBrushChange}/>}\n                                {this.state.currentTool === Tools.Paint &&\n                                <Paint\n                                    value={this.state.paint}\n                                    onChange={this.handlePaintChange}/>}\n                                {this.state.currentTool === Tools.Line &&\n                                <Line\n                                    value={this.state.line}\n                                    onChange={this.handleLineChange}/>}\n                                <Pattern\n                                    value={this.state.currentPattern}\n                                    patterns={this.state.patterns}\n                                    onNext={this.hotKeysHandlers.NEXT}\n                                    onPrev={this.hotKeysHandlers.PREV}/>\n                                <Color\n                                    onClick={this.clickProcessing}\n                                    onDraw={this.drawProcessing}\n                                    value={this.state.color}\n                                    onWhite={this.hotKeysHandlers.WHITE}\n                                    onBlack={this.hotKeysHandlers.BLACK}\n                                    onRand={this.hotKeysHandlers.RAND}\n                                    onChange={this.handleColorChange}/>\n                            </div>\n                        </div>\n                        <div className={\"patterns\"}>\n                            {this.state.patterns.map((pattern, index) => (\n                                <PatternEditor\n                                    chosen={index === this.state.currentPattern}\n                                    onChose={this.handleCurrentPatternChose(index)}\n                                    key={index}\n                                    onPatternDraw={this.drawProcessing}\n                                    onPatternClick={this.clickProcessing}\n                                    onMaskDraw={this.maskDrawProcessing}\n                                    onMaskClick={this.maskClickProcessing}\n                                    name={index}\n                                    value={pattern}\n                                    onRemove={this.removePattern(index)}\n                                    onChange={this.handlePatternChange(index)}/>\n                            ))}\n                            <div className={\"patternEditor\"}>\n                                <Canvas\n                                    ref=\"canvas\"\n                                    width={this.state.canvas.w}\n                                    height={this.state.canvas.h}\n                                    value={this.state.canvas.image}\n                                    onChange={this.handleCanvasChange}\n                                    onClick={this.clickProcessing}\n                                    onDraw={this.drawProcessing}/>\n                                <div className={\"btns\"}>\n                                    <button onClick={this.handleAddPattern}>+ pattern</button>\n                                    <button onClick={this.save}>save</button>\n                                </div>\n\n                            </div>\n                        </div>\n\n\n                        {/*<div>*/}\n                        {/*{tp.map(p => (*/}\n                        {/*<div style={{*/}\n                        {/*display: \"inline-block\",*/}\n                        {/*width: 15,*/}\n                        {/*height: 15,*/}\n                        {/*backgroundColor: p*/}\n                        {/*}}/>*/}\n                        {/*))}*/}\n                        {/*</div>*/}\n                    </div>\n                </div>\n            </GlobalHotKeys>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Enter} from \"./components/Enter\";\n\nReactDOM.render(<Enter><App /></Enter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}