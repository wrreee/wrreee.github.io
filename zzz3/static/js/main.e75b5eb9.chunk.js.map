{"version":3,"sources":["components/Canvas.js","components/utils.js","components/Select.js","components/MoveHandlers.js","components/Brush.js","components/Palette.js","components/Color.js","components/PatternEditor.js","components/floodfill.js","components/floodfillpattern.js","components/Paint.js","components/Line.js","components/Pattern.js","components/History.js","App.js","serviceWorker.js","components/Enter.js","index.js"],"names":["Canvas","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","drawing","mouseDownHandler","e","setState","_this$props","props","onDraw","onClick","ctx","canvas","mouseUpHandler","prevE","_this$props2","onChange","onUp","width","height","imd","getImageData","mouseLeaveHandler","mouseMoveHandler","setImageData","image","putImageData","drawImage","_this$ctx","getCtx","clear","fillStyle","fillRect","inherits","createClass","key","value","refs","getContext","addEventListener","document","nextProps","_this$props3","resize","imageData","resizeImageData","setTimeout","_this$props4","_this$props5","readonly","react_default","a","createElement","className","ref","React","Component","Tools","Brush","Paint","Line","Fills","Color","Pattern","BrushTypes","Square","Circle","ResizeType","no","nn","bi","randomInteger","min","max","rand","Math","random","round","createPattern","_ref2","_ref2$w","w","_ref2$h","h","createImageData","i","data","mask","masked","resizeType","cutCircle","context","x","y","radius","globalCompositeOperation","moveTo","beginPath","arc","PI","closePath","fill","circle","createImage","Promise","resolve","reject","tempCanvas","tempCtx","img","Image","onload","src","toDataURL","hexToRgbaObject","hex","c","opacity","undefined","test","substring","split","r","join","g","b","Error","randomZ","size0","s","Select","_React$PureComponent","handleChose","_this2","items","map","item","PureComponent","MoveHandlers","pressed","createMouseHandler","startE","startValue","delay","fn","lastCall","now","Date","getTime","throttled","step","keydownHandler","code","charCodeAt","codes","indexOf","handler","keyupHandler","removeEventListener","hide","text","setBrushSize","size","objectSpread","handleSizeChange","target","setOpacity","handleOpacityChang","selectType","type","_this$props4$min","_this$props4$max","MoveHandlers_MoveHandlers","Select_Select","values","colors","Palette","handleClick","onPip","edited","_len2","p","_key2","Color2","offsetX","offsetY","slice","floor","handleDraw","delta","j","color","hsl","Canvas_Canvas","handleChangeHSL","val","p1000","palette","p1000change","togglePalette","changeColor","handlePip","paletteX","paletteY","paletteEdit","currentColor","onWhite","onBlack","onRand","style","backgroundColor","Palette_Palette","nextType","PatternEditor","updateMaskedImage","then","imageMasked","imageMask","maskToggle","timer","setSize","defineProperty","sizeChangeHandler","clearTimeout","mirrorChangeHandler","name","imageChangeHandler","maskChangeHandler","resizeTypeChangeHandler","_this$props6","handleFile","reader","FileReader","event","result","file","files","readAsDataURL","_this$props7","onPatternDraw","onMaskDraw","onPatternClick","onMaskClick","chosen","onRemove","onChose","react","display","visibility","xMirror","yMirror","id","floodfill","fillcolor","tolerance","me","mw","Q","w2","targetcolor","console","log","pixelCompare","push","kkk","pixelCompareAndSet","pop","parseInt","abs","handlePaintFillChose","handleToleranceChang","setTolerance","onNext","onPrev","patterns","Fragment","HISTORY_L","History","n","newV","undo","onDo","redo","disabled","lenght","array","newA","toConsumableArray","shift","App","keys","brush","line","paint","currentPattern","currentTool","history","handleCanvasChange","handleBrushChange","handleColorChange","handlePaintChange","handleLineChange","handlePatternChange","pattern","handleAddPattern","removePattern","index","filter","handleCurrentPatternChose","handleToolChose","tool","drawProcessing","hexToRgbaString","globalAlpha","lineTo","strokeStyle","lineWidth","stroke","clickProcessing","imda","pat","patternImageData","maskImageData","getPatX","pWidth","trunc","getPatY","pHeight","P","oldData","Uint8ClampedArray","forEach","maskcolor","floodfillpatternmask","maskDrawProcessing","toLocaleLowerCase","clearRect","maskClickProcessing","floodfillmask","save","dataURL","link","body","appendChild","href","download","click","removeChild","historyPush","handleHistoryChange","handleDo","keyMap","PREV","NEXT","BRUSH","BRUSH_S","BRUSH_C","BRUSH_P","PAINT","PAINT_C","PAINT_P","LINE","WHITE","BLACK","RAND","UNDO","REDO","hotKeysHandlers","rgb","preventDefault","_this3","index_es","handlers","Brush_Brush","Paint_Paint","Line_Line","Pattern_Pattern","Color_Color","PatternEditor_PatternEditor","History_History","Boolean","window","location","hostname","match","Enter","order","open","handleMouseEnter","children","onMouseEnter","ReactDOM","render","Enter_Enter","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e75b5eb9.chunk.js","sourcesContent":["import React from 'react';\nimport resizeImageData from \"resize-image-data\";\n\nexport class Canvas extends React.Component {\n\n\n    state = {\n        drawing: false\n    };\n\n    canvas;\n    ctx;\n\n    prevE;\n\n    mouseDownHandler = e => {\n        this.setState({drawing: true});\n\n        const {onDraw, onClick} = this.props;\n\n        onDraw && onDraw(e, this.ctx, this.canvas);\n        onClick && onClick(e, this.ctx, this.canvas);\n    };\n\n    mouseUpHandler = e => {\n        if (this.state.drawing) {\n            this.setState({drawing: false});\n\n            this.prevE = null;\n            const {onChange, onUp, width, height} = this.props;\n            const imd = this.ctx.getImageData(0, 0, width, height);\n            onChange && onChange(imd);\n            onUp && onUp(imd);\n        }\n    };\n\n    mouseLeaveHandler = e => {\n        if (this.state.drawing)\n            this.mouseUpHandler();\n    };\n\n    mouseMoveHandler = e => {\n        if (this.state.drawing) {\n            const {onDraw} = this.props;\n\n            onDraw && onDraw(e, this.ctx, this.canvas, this.prevE);\n            this.prevE = e;\n        }\n    };\n\n    componentDidMount() {\n        this.canvas = this.refs.canvas;\n        this.ctx = this.canvas.getContext(\"2d\");\n\n\n        this.canvas.addEventListener(\"mousedown\", this.mouseDownHandler);\n        document.addEventListener(\"mouseup\", this.mouseUpHandler);\n        this.canvas.addEventListener(\"mousemove\", this.mouseMoveHandler);\n        //this.canvas.addEventListener(\"mouseleave\", this.mouseLeaveHandler);\n\n\n        if (this.props.value) {\n            this.ctx.putImageData(this.props.value, 0, 0);\n        }\n\n        // this.clear();\n        // const {onChange, width, height} = this.props;\n        // onChange && onChange(this.ctx.getImageData(0, 0, width, height));\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if ((nextProps.width !== this.props.width || nextProps.height !== this.props.height)) {\n            const {onChange, width, height, resize} = this.props;\n            let imageData = this.ctx.getImageData(0, 0, width, height);\n            resize && (imageData = resizeImageData(imageData, nextProps.width, nextProps.height, resize));\n            setTimeout(() => onChange && onChange(imageData), 0);\n        }\n        if (this.props.value !== nextProps.value) {\n            if (!nextProps.value) {\n                this.clear();\n                const {onChange, width, height} = this.props;\n                onChange && onChange(this.ctx.getImageData(0, 0, width, height));\n            } else {\n                this.ctx.putImageData(nextProps.value, 0, 0);\n            }\n        }\n    }\n\n    setImageData = image =>\n        this.ctx.putImageData(image, 0, 0);\n\n    drawImage = (...p) =>\n        this.ctx.drawImage(...p);\n    getCtx = () =>\n        this.ctx;\n\n    getImageData = () =>\n        this.ctx.getImageData(0, 0, this.props.width, this.props.height);\n\n    clear = () => {\n        this.ctx.fillStyle = \"#ffffff\";\n        this.ctx.fillRect(0, 0, this.props.width, this.props.height);\n    };\n\n    render() {\n        const {width, height, readonly} = this.props;\n        return (\n            <div className={\"canvas\" + (readonly ? \" readonlyCanvas\" : \"\")}>\n                <canvas ref=\"canvas\" width={width > 0 ? width : 1} height={height > 0 ? height : 1}/>\n            </div>\n        )\n    }\n}","export const Tools = {\n    Brush: 'brush(q)',\n    Paint: 'paint(a)',\n    Line: 'line(z)'\n};\n\nexport const Fills = {\n    Color: 'color(s)',\n    Pattern: 'pattern(d)'\n};\n\nexport const BrushTypes = {\n    Square: 'square(w)',\n    Circle: 'circle(e)',\n    Pattern: 'pattern(r)',\n};\n\nexport const ResizeType = {\n    no: \"\",\n    nn: \"nearest-neighbor\",\n    bi: \"biliniear-interpolation\"\n};\n\nexport function throttled(delay, fn) {\n    let lastCall = 0;\n    return function (...args) {\n        const now = (new Date).getTime();\n        if (now - lastCall < delay) {\n            return;\n        }\n        lastCall = now;\n        return fn(...args);\n    }\n}\n\nexport function randomInteger(min, max) {\n    var rand = min - 0.5 + Math.random() * (max - min + 1);\n    rand = Math.round(rand);\n    return rand;\n}\n\nexport const whiteSheet = ctx => ({w, h}) => {\n    const image = ctx.createImageData(w, h);\n    for (let i = 0; i < image.data.length; i++)\n        image.data[i] = 255;\n    return image;\n};\n\nexport const createPattern = ctx => ({w = 50, h = 50}) => {\n    const image = ctx.createImageData(w, h);\n    for (let i = 0; i < image.data.length; i++)\n        image.data[i] = 255;\n\n    const mask = ctx.createImageData(w, h);\n    for (let i = 0; i < mask.data.length; i+=4) {\n        mask.data[i] = 0;\n        mask.data[i+1] = 0;\n        mask.data[i +2] = 0;\n        mask.data[i + 3] = 255;\n    }\n    return {\n        w, h,\n        image: image,\n        mask: mask,\n        masked: ctx.createImageData(w, h),\n        resizeType: \"nn\"\n    }\n};\n\nexport const cutCircle = function (context, x, y, radius) {\n    context.globalCompositeOperation = 'destination-out';\n    context.moveTo(x, y);\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, true);\n    context.closePath();\n    context.fill();\n    context.globalCompositeOperation = \"source-over\";\n};\nexport const circle = function (context, x, y, radius) {\n    context.moveTo(x, y);\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2, true);\n    context.closePath();\n    context.fill();\n};\n\nexport const createImage = canvas => {\n    return new Promise((resolve, reject) => {\n        var tempCanvas = document.createElement(\"canvas\");\n        var tempCtx = tempCanvas.getContext(\"2d\");\n\n        tempCanvas.width = canvas.width;\n        tempCanvas.height = canvas.height;\n\n        // put the modified pixels on the temp canvas\n        tempCtx.drawImage(canvas, 0, 0, canvas.width, canvas.height);\n\n        // use the tempCanvas.toDataURL to create an img object\n        var img = new Image();\n        img.onload = () => {\n            resolve(img)\n        };\n        img.src = tempCanvas.toDataURL();\n    });\n};\n\nexport function hexToRgbaObject(hex, opacity = 1) {\n    var c;\n    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n        c = hex.substring(1).split('');\n        if (c.length === 3) {\n            c = [c[0], c[0], c[1], c[1], c[2], c[2]];\n        }\n        c = '0x' + c.join('');\n        return {\n            r: (c >> 16) & 255,\n            g: (c >> 8) & 255,\n            b: c & 255,\n            a: Math.round(255 * opacity)\n        };\n    }\n    throw new Error('Bad Hex');\n}\n\nexport function hexToRgbaString(hex, opacity) {\n    var c = hexToRgbaObject(hex, opacity);\n    return `rgba(${c.r},${c.g},${c.b},${c.a})`\n}\n\nexport const randomZ = () => {\n    const size0 = randomInteger(4, 11);\n\n    let s = \"\";\n    for (let i = 0; i < size0; i++) {\n        const ff = randomInteger(1, 20) > 10;\n        s += ff ? \"Z\" : \"z\"\n    }\n\n    return s;\n\n};","import React from \"react\";\n\nexport class Select extends React.PureComponent {\n    handleChose = value => e => {\n\n        const {onChange} = this.props;\n        onChange && onChange(value);\n    };\n    render() {\n        const {value, items} = this.props;\n        return (\n            <div>\n                {items.map(item => (\n                    <button\n                        className={\"buttonControle\"}\n                        key={item}\n                        onClick={this.handleChose(item)}>{item + (item === value ? \"*\" : \"\")}</button>))}\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport {throttled} from \"./utils\";\n\nexport class MoveHandlers extends React.Component {\n\n    state = {\n        pressed: false\n    };\n\n    createMouseHandler = () => {\n        let startE = null;\n        let startValue = this.props.value;\n        return throttled(50, e => {\n            if (!startE) {\n                startE = e;\n                return;\n            }\n\n            let value = startValue + this.props.step * (e.x - startE.x);\n            if (value > this.props.max) value = this.props.max;\n            if (value < this.props.min) value = this.props.min;\n\n            this.props.onChange(value);\n        })\n    };\n\n    keydownHandler = e => {\n        const code = e.key.charCodeAt(0);\n\n        if (this.props.codes.indexOf(code) !== -1) {\n            if (!this.state.pressed) {\n                this.setState(state => ({pressed: true}));\n                this.handler = this.createMouseHandler();\n                document.addEventListener(\"mousemove\", this.handler);\n            }\n        }\n    };\n\n    keyupHandler = (e) => {\n        const code = e.key.charCodeAt(0);\n\n        if (this.props.codes.indexOf(code) !== -1) {\n            if (this.state.pressed) {\n                this.setState(state => ({pressed: false}));\n                document.removeEventListener(\"mousemove\", this.handler);\n                this.handler = null;\n            }\n        }\n\n    };\n\n\n    componentDidMount() {\n        document.addEventListener(\"keydown\", this.keydownHandler);\n        document.addEventListener(\"keyup\", this.keyupHandler);\n\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"keydown\", this.keydownHandler);\n        document.removeEventListener(\"keyup\", this.keyupHandler);\n        this.handler && document.removeEventListener(\"mousemove\", this.handler);\n\n    }\n\n    render() {\n        const {hide, text} = this.props;\n        return (\n            hide ? null : <button className={\"moveHandlerTip\"}>{text}{this.state.pressed ? \"*\" : \"\"}</button>\n        );\n    }\n}","import React from 'react';\nimport {BrushTypes, Fills} from \"./utils\";\nimport {Select} from \"./Select\";\nimport {MoveHandlers} from \"./MoveHandlers\";\n\nexport class Brush extends React.PureComponent {\n\n    setBrushSize = size => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({\n            ...value,\n            size\n        });\n    };\n\n    handleSizeChange = e => {\n        this.setBrushSize(+e.target.value);\n    };\n\n    setOpacity = opacity => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, opacity});\n    };\n\n    handleOpacityChang = e => {\n        this.setOpacity(+e.target.value);\n    };\n\n    selectType = type => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, type});\n    };\n\n    render() {\n        const {value, min = 1, max = 100} = this.props;\n        return (\n            <div className={\"brush\"}>\n                <div>brush</div>\n                <div className={\"brushbody\"}>\n                    <input type=\"range\" min={min} max={max} value={value.size} onChange={this.handleSizeChange}/>\n                    <MoveHandlers\n                        text={\"(f)\"}\n                        codes={[70, 102, 1072, 1040]}\n                        value={value.size}\n                        onChange={this.setBrushSize}\n                        step={1}\n                        min={min} max={max}/>\n                    <input\n                        type=\"range\"\n                        min={0} max={1} step={0.05}\n                        value={value.opacity}\n                        onChange={this.handleOpacityChang}/>\n                    <MoveHandlers\n                        text={\"(g)\"}\n                        codes={[71, 103]}\n                        value={value.opacity}\n                        step={0.01}\n                        onChange={this.setOpacity}\n                        min={0} max={1}/>\n                    <Select\n                        items={Object.values(BrushTypes)}\n                        value={value.type}\n                        onChange={this.selectType}/>\n                </div>\n\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {Canvas} from \"./Canvas\";\nimport {randomInteger} from \"./utils\";\nimport Color2 from \"color\";\n\nconst w = 10;\n\nlet colors = new Array(1000)\nexport class Palette extends React.PureComponent {\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.value !== this.props.value) {\n\n            const ctx = this.refs.canvas.getCtx();\n            ctx.fillStyle = nextProps.value;\n            const {x, y} = nextProps;\n\n            ctx.fillRect(x, y, w, w);\n        }\n    }\n\n    handleClick = (...p) => {\n        const {onClick, onPip, edited} = this.props;\n        if (edited)\n            onClick && onClick(...p);\n        else {\n            const ctx = this.refs.canvas.getCtx();\n\n            onPip && onPip(Color2(ctx.getImageData(p[0].offsetX, p[0].offsetY, 1, 1).data.slice(0, 3)).hex(), Math.floor(p[0].offsetX / w) * w, Math.floor(p[0].offsetY / w) * w);\n        }\n\n    };\n    handleDraw = (...p) => {\n        const {onDraw, edited} = this.props;\n        if (edited)\n            onDraw && onDraw(...p);\n\n    };\n    random = (delta) => {\n        const ctx = this.refs.canvas.getCtx();\n        colors = new Array(1000);\n        for (let i = 0; i < 40; i++) {\n            for (let j = 0; j < 25; j++) {\n                let color;\n                do {\n                    const r = randomInteger(Math.max(265 - delta * 3, 0), Math.min(280 + delta * 3, 359));\n                    const g = randomInteger(Math.max(60 - delta * delta, 0), Math.min(100 + delta * delta, 100));\n                    const b = randomInteger(Math.max(25 - delta / randomInteger(-20, 20), 0), Math.min(75 + delta / randomInteger(-20, 20), 100));\n                    color = Color2.hsl([r, g, b]).hex();\n                    ctx.fillStyle = color;\n                    ctx.fillRect(i*w, j*w, w, w);\n                } while (colors.indexOf(color) !== -1)\n                colors[i] = color;\n            }\n        }\n\n    };\n    render() {\n        return (\n            <Canvas\n                readonly={!this.props.edited}\n                ref=\"canvas\"\n                width={40 * w} height={25 * w}\n                onClick={this.handleClick}\n                onDraw={this.handleDraw}/>\n        );\n    }\n}","import React from 'react';\nimport Color2 from \"color\";\nimport {Palette} from \"./Palette\";\n\n\nexport class Color extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        const {value} = props;\n\n\n        this.state = {\n            value: Color2(value.value).hsl(),\n            colors: [],\n            currentColor: 0,\n            p1000: 150,\n            palette: false,\n            paletteX: 0,\n            paletteY: 0,\n            paletteEdit: false\n        };\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.value.value !== this.props.value.value) {\n            let colors = this.state.colors;\n            colors[this.state.currentColor] = Color2(nextProps.value.value).hex()\n            this.setState({\n                value: Color2(nextProps.value.value).hsl(),\n                colors\n            });\n        }\n    }\n\n    handleChangeHSL = (i) => e => {\n        const val = +e.target.value;\n        this.setState(state => {\n            let value = [state.value.color[0], state.value.color[1], state.value.color[2]];\n            value[i] = val;\n            return {\n                value: Color2.hsl(value)\n            }\n        }, () => {\n\n            const {onChange, value} = this.props;\n\n            onChange && onChange({...value, value: this.state.value.hex()});\n        });\n    };\n\n    componentDidMount() {\n        this.p1000();\n    }\n\n    p1000 = (e) => {\n        const delta = (this.state.p1000 / 4 - 67 + 100) % 100;\n\n        this.refs.palette.random(delta);\n    };\n\n    p1000change = e => {\n        const delta = +e.target.value;\n        this.setState({p1000: delta});\n    };\n\n    togglePalette = e => this.setState(state => ({palette: !state.palette}));\n\n\n    changeColor = color => () => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, value: color});\n    };\n\n    handlePip = (color, x, y) =>\n        this.setState({\n            paletteX: x,\n            paletteY: y\n        }, () => {\n\n            this.changeColor(color)();\n        });\n\n    paletteEdit = () => this.setState(state => ({paletteEdit: !state.paletteEdit}));\n\n    render() {\n        const {value, onDraw, onClick, onWhite, onBlack, onRand} = this.props;\n        return (\n            <div className={\"color\"}>\n                <div>color</div>\n                <div className={\"flex\"}>\n                    <div className={\"colorValue\"} onClick={this.togglePalette}\n                         style={{\n                        backgroundColor: value.value\n                    }}/>\n                    <input type={\"range\"} min={0} max={359} step={1}\n                           onChange={this.handleChangeHSL(0)}\n                           value={this.state.value.color[0]}/>\n                    <input type={\"range\"} min={0} max={100} step={1}\n                           onChange={this.handleChangeHSL(1)}\n                           value={this.state.value.color[1]}/>\n                    <input type={\"range\"} min={0} max={100} step={1}\n                           onChange={this.handleChangeHSL(2)}\n                           value={this.state.value.color[2]}/>\n\n                    <div>\n                        <button onClick={onWhite}>white(x)</button>\n                    </div>\n                    <div>\n                        <button onClick={onBlack}>black(c)</button>\n                    </div>\n                    <div>\n                        <button onClick={onRand}>random(v)</button>\n                    </div>\n                </div>\n                <div className={\"randomnes\" + (this.state.palette ? \"\" : \" randomes-hide\")}>\n                    <div className={\"flex\"}>\n                        <input type={\"range\"} min={0} max={400} step={1} onChange={this.p1000change}\n                               value={this.state.p1000}/>\n                        <button onClick={this.p1000}>random</button>\n                        <button onClick={this.paletteEdit}\n                                className={\"buttonControle\"}>edit{this.state.paletteEdit ? \"*\" : \"\"}</button>\n                    </div>\n                    <div className={\"palette\"}>\n                        <Palette ref={\"palette\"}\n                                 edited={this.state.paletteEdit}\n                                 onDraw={onDraw}\n                                 onClick={onClick}\n                                 onPip={this.handlePip} x={this.state.paletteX} y={this.state.paletteY}\n                                 value={value.value}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport {Canvas} from \"./Canvas\";\nimport {createImage, ResizeType} from \"./utils\";\n\nconst nextType = {\n    no: \"nn\",\n    nn: \"bi\",\n    bi: \"no\"\n};\n\nexport class PatternEditor extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mask: true,\n            w: props.value.w,\n            h: props.value.h,\n        };\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.value.w !== nextProps.value.w)\n            this.setState({w: nextProps.value.w});\n        if (this.props.value.h !== nextProps.value.h)\n            this.setState({h: nextProps.value.h})\n    }\n\n    componentDidMount() {\n        this.updateMaskedImage();\n    }\n\n    updateMaskedImage = () => {\n        try {\n            const {onChange, value} = this.props;\n\n            const ctx = this.refs[\"canvasMasked\"].getCtx();\n\n            ctx.putImageData(this.refs[\"canvasMask\"].getImageData(), 0, 0);\n            ctx.globalCompositeOperation = \"source-in\";\n            ctx.drawImage(this.refs.canvas.canvas, 0, 0, value.w, value.h);\n\n\n            createImage(ctx.canvas).then(img => onChange && onChange({...this.props.value, imageMasked: img}));\n            createImage(this.refs[\"canvasMask\"].canvas).then(img => onChange && onChange({\n                ...this.props.value,\n                imageMask: img\n            }));\n\n        } catch (e) {\n        }\n    };\n\n    maskToggle = e => this.setState(state => ({mask: !state.mask}));\n\n    timer = {};\n    setSize = s => size => {\n\n        if (size < 1) return;\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, [s]: size});\n        this.updateMaskedImage();\n    };\n\n    sizeChangeHandler = s => e => {\n        const size = +e.target.value;\n\n        this.setState({[s]: e.target.value});\n\n        this.timer[s] && clearTimeout(this.timer[s]);\n        this.timer[s] = setTimeout(() => {\n            this.setSize(s)(size)\n        }, 700);\n    };\n\n    mirrorChangeHandler = name => e => {\n        const {onChange, value} = this.props;\n        onChange && onChange({...value, [name]: !value[name]});\n    };\n    imageChangeHandler = image => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, image});\n        this.updateMaskedImage();\n    };\n    maskChangeHandler = mask => {\n        const {onChange, value} = this.props;\n        onChange && onChange({...value, mask});\n        this.updateMaskedImage();\n    };\n    resizeTypeChangeHandler = e => {\n        const {onChange, value} = this.props;\n        onChange && onChange({...value, resizeType: nextType[value.resizeType]});\n    };\n\n    handleFile = e => {\n        var reader = new FileReader();\n        reader.onload = (event) => {\n            var img = new Image();\n            img.onload = () => {\n                this.refs.canvas.ctx.drawImage(img, 0, 0, this.props.value.w, this.props.value.h);\n                this.updateMaskedImage();\n            };\n            img.src = event.target.result;\n            this.refs.file.value = null;\n        };\n        if (e.target.files[0])\n            reader.readAsDataURL(e.target.files[0]);\n    };\n\n    render() {\n        const {value, onPatternDraw, onMaskDraw, onPatternClick, onMaskClick, onRemove, chosen, onChose} = this.props;\n        return (\n            <div className={\"patternEditor\"}>\n                <div className={value.w < 63 ? \"canvases\" : \"canvases-col\"}>\n                    <Canvas ref=\"canvas\" resize={ResizeType[value.resizeType]}\n                            value={value.image}\n                            width={value.w} height={value.h}\n                            onDraw={onPatternDraw}\n                            onClick={onPatternClick}\n                            onChange={this.imageChangeHandler}/>\n                    <div style={{display: !this.state.mask ? \"none\" : \"\"}}>\n                        <Canvas ref=\"canvasMask\"\n                                resize={ResizeType[value.resizeType === \"bi\" ? \"nn\" : value.resizeType]}\n                                value={value.mask}\n                                width={value.w} height={value.h}\n                                onDraw={onMaskDraw}\n                                onClick={onMaskClick}\n                                onChange={this.maskChangeHandler}/>\n                    </div>\n                    <div style={{display: !this.state.mask ? \"none\" : \"\"}}>\n                        <Canvas ref=\"canvasMasked\"\n                                readonly\n                                resize={ResizeType[value.resizeType === \"bi\" ? \"nn\" : value.resizeType]}\n                                value={value.masked}\n                                width={value.w} height={value.h}/>\n                    </div>\n                </div>\n                <div className={\"btns\"}>\n                    <button onClick={onChose} style={{\n                        visibility: chosen ? \"visible\" : \"\"\n                    }}>c\n                    </button>\n                    <button onClick={this.maskToggle}>{!this.state.mask ? \"show \" : \"hide \"}mask</button>\n                    <br/>\n                    <input type=\"number\" step={1} min={1} max={500} value={this.state.w}\n                           onChange={this.sizeChangeHandler('w')}/>\n                    <input type=\"number\" step={1} min={1} max={500} value={this.state.h}\n                           onChange={this.sizeChangeHandler('h')}/>\n                    stretch:\n                    <button onClick={this.resizeTypeChangeHandler} className={'resizeType'}>{value.resizeType}</button>\n                    <br/>\n                    mirror:x\n                    <input type=\"checkbox\" value={value.xMirror} onChange={this.mirrorChangeHandler('xMirror')}/>\n                    y\n                    <input type=\"checkbox\" value={value.yMirror} onChange={this.mirrorChangeHandler('yMirror')}/>\n                    <br/>\n                    <input type=\"file\" id=\"imageLoader\" name=\"imageLoader\" ref=\"file\" onChange={this.handleFile}/>\n                    {/*<button onClick={onRemove}>remove</button>*/}\n                </div>\n            </div>\n        );\n    }\n}","\n\n\nexport function floodfill(data, x, y, fillcolor, tolerance, width, height) {\n\n    var length = data.length;\n    var Q = [];\n    var i = (x + y * width) * 4;\n    var e = i, w = i, me, mw, w2 = width * 4;\n\n    var targetcolor = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\n    console.log(targetcolor, fillcolor);\n\n    if (!pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n        return false;\n    }\n    Q.push(i);\n    let kkk = 0;\n    while (Q.length) {\n        kkk++;\n        i = Q.pop();\n        let a = 0;\n        if (pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n            e = i;\n            w = i;\n            mw = parseInt(i / w2) * w2 - 1; //left bound\n            me = mw + w2 - 1;               //right bound\n\n\n            while (mw < w && mw < (w -= 4) && pixelCompareAndSet(w, targetcolor, fillcolor, data, length, tolerance, width)) {a++} //go left until edge hit\n            while (me > e && me > (e += 4) && pixelCompareAndSet(e, targetcolor, fillcolor, data, length, tolerance, width)) {a++} //go right until edge hit\n            for (var j = w + 4; j < e; j += 4) {\n                if (j - w2 >= 0 && pixelCompare(j - w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j - w2); //queue y-1\n                if (j + w2 < length && pixelCompare(j + w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j + w2); //queue y+1\n            }\n        }\n        //if (kkk > 30000) return data;\n        //console.log(kkk, a);\n    }\n    return data;\n}\n\nfunction pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width) {\n    if (i < 0 || i >= length) return false; //out of bounds\n    if (data[i + 3] === 0 && fillcolor.a > 0) return true;  //surface is invisible and fill is visible\n\n    if (\n        Math.abs(targetcolor[3] - fillcolor.a) <= tolerance &&\n        Math.abs(targetcolor[0] - fillcolor.r) <= tolerance &&\n        Math.abs(targetcolor[1] - fillcolor.g) <= tolerance &&\n        Math.abs(targetcolor[2] - fillcolor.b) <= tolerance\n    ) return false; //target is same as fill\n\n    if (\n        (targetcolor[3] === data[i + 3]) &&\n        (targetcolor[0] === data[i]) &&\n        (targetcolor[1] === data[i + 1]) &&\n        (targetcolor[2] === data[i + 2])\n    ) return true; //target matches surface\n\n    if (\n        Math.abs(targetcolor[3] - data[i + 3]) <= (tolerance) &&\n        Math.abs(targetcolor[0] - data[i]) <= tolerance &&\n        Math.abs(targetcolor[1] - data[i + 1]) <= tolerance &&\n        Math.abs(targetcolor[2] - data[i + 2]) <= tolerance\n    ) return true; //target to surface within tolerance\n\n    return false; //no match\n}\n\nfunction pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width) {\n    if (pixelCompare(i, targetcolor, fillcolor, data, length, tolerance)) {\n        //fill the color\n        data[i] = fillcolor.r;\n        data[i + 1] = fillcolor.g;\n        data[i + 2] = fillcolor.b;\n        data[i + 3] = fillcolor.a;\n        return true;\n    }\n    return false;\n}","export function floodfillmask(data, x, y, maskImageData, tolerance, width, height) {\n\n    const fillcolor = {\n        r: 255,\n        g: 0,\n        b: 0,\n        a: 255\n    };\n    var length = data.length;\n    var Q = [];\n    var P = [];\n    var i = (x + y * width) * 4;\n    var e = i, w = i, me, mw, w2 = width * 4;\n\n    var targetcolor = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\n    const oldData = new Uint8ClampedArray(data);\n\n    if (!pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n        return false;\n    }\n    Q.push(i);\n    let kkk = 0;\n    while (Q.length) {\n        kkk++;\n        i = Q.pop();\n        if (pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n            P.push(i);\n            e = i;\n            w = i;\n            mw = parseInt(i / w2) * w2 - 1; //left bound\n            me = mw + w2 - 1;               //right bound\n            while (mw < w && mw < (w -= 4) && pixelCompareAndSet(w, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(w)\n            } //go left until edge hit\n            while (me > e && me > (e += 4) && pixelCompareAndSet(e, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(e)\n            } //go right until edge hit\n            for (var j = w + 4; j < e; j += 4) {\n                if (j - w2 >= 0 && pixelCompare(j - w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j - w2); //queue y-1\n                if (j + w2 < length && pixelCompare(j + w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j + w2); //queue y+1\n            }\n        }\n    }\n\n    console.log(kkk);\n\n    P.forEach(p => {\n\n        var x = (p / 4) % width % maskImageData.width;\n        var y = Math.floor((p / 4) / width) % maskImageData.height;\n\n\n        var j = (x + y * maskImageData.width) * 4;\n        var targetcolor = [0, 0, 0, 255];\n        var maskcolor = [maskImageData.data[j], maskImageData.data[j + 1], maskImageData.data[j + 2], maskImageData.data[j + 3]];\n\n        // console.log(maskcolor);\n        if (maskcolor[0] === 0 && maskcolor[1] === 0 && maskcolor[2] === 0 && maskcolor[3] === 255) {\n            //black\n            data[p] = targetcolor[0];\n            data[p + 1] = targetcolor[1];\n            data[p + 2] = targetcolor[2];\n            data[p + 3] = targetcolor[3];\n        } else {\n            data[p] = oldData[p];\n            data[p + 1] = oldData[p + 1];\n            data[p + 2] = oldData[p + 2];\n            data[p + 3] = oldData[p + 3];\n        }\n    });\n\n\n    return data;\n}\n\nexport function floodfillpatternmask(data, x, y, patternImageData, maskImageData, tolerance, width, height, xMirror, yMirror) {\n\n    const getPatX = !xMirror\n        ? (i, width, pWidth) => (i / 4) % width % pWidth\n        : (i, width, pWidth) => {\n            const x = (i / 4) % width;\n\n            return Math.trunc(x / pWidth) % 2 === 0\n                ? x % pWidth\n                : pWidth - x % pWidth;\n        };\n    const getPatY = !yMirror\n        ? (i, width, pHeight) => y = Math.floor((i / 4) / width) % pHeight\n        : (i, width, pHeight) => {\n            const y =  Math.floor((i / 4) / width);\n\n            return Math.trunc(y / pHeight) % 2 === 0\n                ? y % pHeight\n                : pHeight - y % pHeight;\n        };\n    const fillcolor = {\n        r: 255,\n        g: 0,\n        b: 0,\n        a: 255\n    };\n    var length = data.length;\n    var Q = [];\n    var P = [];\n    var i = (x + y * width) * 4;\n    var e = i, w = i, me, mw, w2 = width * 4;\n\n    var targetcolor = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\n    const oldData = new Uint8ClampedArray(data);\n\n    if (!pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n        return false;\n    }\n    Q.push(i);\n    let kkk = 0;\n    while (Q.length) {\n        kkk++;\n        i = Q.pop();\n        if (pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n            P.push(i);\n            e = i;\n            w = i;\n            mw = parseInt(i / w2) * w2 - 1; //left bound\n            me = mw + w2 - 1;               //right bound\n            while (mw < w && mw < (w -= 4) && pixelCompareAndSet(w, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(w)\n            } //go left until edge hit\n            while (me > e && me > (e += 4) && pixelCompareAndSet(e, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(e)\n            } //go right until edge hit\n            for (var j = w + 4; j < e; j += 4) {\n                if (j - w2 >= 0 && pixelCompare(j - w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j - w2); //queue y-1\n                if (j + w2 < length && pixelCompare(j + w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j + w2); //queue y+1\n            }\n        }\n    }\n\n    console.log(kkk);\n\n    P.forEach(p => {\n\n        var x = getPatX(p, width, patternImageData.width);\n        var y = getPatY(p, width, patternImageData.height);\n\n\n        var j = (x + y * patternImageData.width) * 4;\n        var targetcolor = [patternImageData.data[j], patternImageData.data[j + 1], patternImageData.data[j + 2], patternImageData.data[j + 3]];\n        var maskcolor = [maskImageData.data[j], maskImageData.data[j + 1], maskImageData.data[j + 2], maskImageData.data[j + 3]];\n\n        // console.log(maskcolor);\n        if (maskcolor[0] === 0 && maskcolor[1] === 0 && maskcolor[2] === 0 && maskcolor[3] === 255) {\n            //\n            data[p] = targetcolor[0];\n            data[p + 1] = targetcolor[1];\n            data[p + 2] = targetcolor[2];\n            data[p + 3] = targetcolor[3];\n        } else {\n            data[p] = oldData[p];\n            data[p + 1] = oldData[p + 1];\n            data[p + 2] = oldData[p + 2];\n            data[p + 3] = oldData[p + 3];\n        }\n    });\n\n\n    return data;\n}\n\nexport function floodfillpattern(data, x, y, patternImageData, tolerance, width, height) {\n\n    const fillcolor = {\n        r: 255,\n        g: 0,\n        b: 0,\n        a: 255\n    };\n    var length = data.length;\n    var Q = [];\n    var P = [];\n    var i = (x + y * width) * 4;\n    var e = i, w = i, me, mw, w2 = width * 4;\n\n    var targetcolor = [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\n    if (!pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n        return false;\n    }\n    Q.push(i);\n    let kkk = 0;\n    while (Q.length) {\n        kkk++;\n        i = Q.pop();\n        if (pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width)) {\n            P.push(i);\n            e = i;\n            w = i;\n            mw = parseInt(i / w2) * w2 - 1; //left bound\n            me = mw + w2 - 1;               //right bound\n            while (mw < w && mw < (w -= 4) && pixelCompareAndSet(w, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(w)\n            } //go left until edge hit\n            while (me > e && me > (e += 4) && pixelCompareAndSet(e, targetcolor, fillcolor, data, length, tolerance, width)) {\n                P.push(e)\n            } //go right until edge hit\n            for (var j = w + 4; j < e; j += 4) {\n                if (j - w2 >= 0 && pixelCompare(j - w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j - w2); //queue y-1\n                if (j + w2 < length && pixelCompare(j + w2, targetcolor, fillcolor, data, length, tolerance, width)) Q.push(j + w2); //queue y+1\n            }\n        }\n    }\n\n    console.log(kkk);\n\n    P.forEach(p => {\n\n        var x = (p / 4) % width % patternImageData.width;\n        var y = Math.floor((p / 4) / width) % patternImageData.height;\n\n\n        var j = (x + y * patternImageData.width) * 4;\n        var targetcolor = [patternImageData.data[j], patternImageData.data[j + 1], patternImageData.data[j + 2], patternImageData.data[j + 3]];\n\n\n        data[p] = targetcolor[0];\n        data[p + 1] = targetcolor[1];\n        data[p + 2] = targetcolor[2];\n        data[p + 3] = targetcolor[3];\n    });\n\n\n    return data;\n}\n\nfunction pixelCompare(i, targetcolor, fillcolor, data, length, tolerance, width) {\n    if (i < 0 || i >= length) return false; //out of bounds\n    if (data[i + 3] === 0 && fillcolor.a > 0) return true;  //surface is invisible and fill is visible\n\n    if (\n        Math.abs(targetcolor[3] - fillcolor.a) <= tolerance &&\n        Math.abs(targetcolor[0] - fillcolor.r) <= tolerance &&\n        Math.abs(targetcolor[1] - fillcolor.g) <= tolerance &&\n        Math.abs(targetcolor[2] - fillcolor.b) <= tolerance\n    ) return false; //target is same as fill\n\n    if (\n        (targetcolor[3] === data[i + 3]) &&\n        (targetcolor[0] === data[i]) &&\n        (targetcolor[1] === data[i + 1]) &&\n        (targetcolor[2] === data[i + 2])\n    ) return true; //target matches surface\n\n    if (\n        Math.abs(targetcolor[3] - data[i + 3]) <= (255 - tolerance) &&\n        Math.abs(targetcolor[0] - data[i]) <= tolerance &&\n        Math.abs(targetcolor[1] - data[i + 1]) <= tolerance &&\n        Math.abs(targetcolor[2] - data[i + 2]) <= tolerance\n    ) return true; //target to surface within tolerance\n\n    return false; //no match\n}\n\nfunction pixelCompareAndSet(i, targetcolor, fillcolor, data, length, tolerance, width) {\n    if (pixelCompare(i, targetcolor, fillcolor, data, length, tolerance)) {\n        //fill the color\n        data[i] = fillcolor.r;\n        data[i + 1] = fillcolor.g;\n        data[i + 2] = fillcolor.b;\n        data[i + 3] = fillcolor.a;\n        return true;\n    }\n    return false;\n}","import React from 'react';\nimport {Fills, Tools} from \"./utils\";\nimport {Select} from \"./Select\";\nimport {MoveHandlers} from \"./MoveHandlers\";\n\nexport class Paint extends React.PureComponent {\n\n    handlePaintFillChose = fill => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({\n            ...value,\n            fill\n        });\n    };\n    handleToleranceChang = e => {\n        this.setTolerance(+e.target.value);\n    };\n\n    setTolerance = tolerance => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({\n            ...value,\n            tolerance\n        });\n    };\n\n    render() {\n        const {value} = this.props;\n        return (\n            <div className={\"paint\"}>\n                <div>paint</div>\n                <div className={\"brushbody\"}>\n                    <input\n                        type=\"range\"\n                        min={0} max={255} step={1}\n                        value={value.tolerance}\n                        onChange={this.handleToleranceChang}/>\n                    <MoveHandlers\n                        text={\"(h)\"}\n                        codes={[72, 104]}\n                        value={value.tolerance}\n                        onChange={this.setTolerance}\n                        step={0.5}\n                        min={0} max={255}/>\n                    <Select\n                        items={Object.values(Fills)}\n                        value={value.fill}\n                        onChange={this.handlePaintFillChose}/>\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport {MoveHandlers} from \"./MoveHandlers\";\n\nexport class Line extends React.PureComponent {\n\n    setBrushSize = size => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({\n            ...value,\n            size\n        });\n    };\n\n    handleSizeChange = e => {\n        this.setBrushSize(+e.target.value);\n    };\n\n    setOpacity = opacity => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, opacity});\n    };\n\n    handleOpacityChang = e => {\n        this.setOpacity(+e.target.value);\n    };\n\n    render() {\n        const {value, min, max} = this.props;\n        return (\n            <div className={\"line\"}>\n                <div>line</div>\n                <div className={\"brushbody\"}>\n                    <input type=\"range\" min={1} max={100} value={value.size} onChange={this.handleSizeChange}/>\n                    <MoveHandlers\n                        text={\"(f)\"}\n                        codes={[70, 102, 1072, 1040]}\n                        value={value.size}\n                        onChange={this.setBrushSize}\n                        step={0.5}\n                        min={min} max={max}/>\n                    <input\n                        type=\"range\"\n                        min={0} max={1} step={0.05}\n                        value={value.opacity}\n                        onChange={this.handleOpacityChang}/>\n                    <MoveHandlers\n                        text={\"(g)\"}\n                        codes={[71, 103]}\n                        value={value.opacity}\n                        step={0.01}\n                        onChange={this.setOpacity}\n                        min={0} max={1}/>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {BrushTypes, Fills} from \"./utils\";\nimport {Select} from \"./Select\";\nimport {MoveHandlers} from \"./MoveHandlers\";\n\nexport class Pattern extends React.PureComponent {\n\n    setBrushSize = size => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({\n            ...value,\n            size\n        });\n    };\n\n    handleSizeChange = e => {\n        this.setBrushSize(+e.target.value);\n    };\n\n    setOpacity = opacity => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, opacity});\n    };\n\n    handleOpacityChang = e => {\n        this.setOpacity(+e.target.value);\n    };\n\n    selectType = type => {\n        const {onChange, value} = this.props;\n\n        onChange && onChange({...value, type});\n    };\n\n    render() {\n        const {onNext, onPrev, value, patterns} = this.props;\n        return (\n            <div className={\"brush\"}>\n                <div>pattern</div>\n                <div className={\"brushbody\"}>\n                    {patterns.length === 0 && <div>none</div>}\n                    {patterns.length === 1 && value}\n                    {patterns.length > 1 && <>\n                        <div className={\"patternVal\"}> {value} </div>\n                        <div>\n                            <button onClick={onNext} className={'moveHandlerTip'}>{\"<\"}</button>\n                        </div>\n                        <div>\n                            <button onClick={onPrev} className={'moveHandlerTip'}>{\">\"}</button>\n                        </div>\n                    </>}\n                </div>\n\n            </div>\n        );\n    }\n}","import React from \"react\";\n\nconst HISTORY_L = 23;\n\nexport class History extends React.PureComponent {\n\n    state = {\n        n: 0\n    };\n\n    push = imd => {\n\n        const {value, onChange} = this.props;\n\n        const newV = push(HISTORY_L + 1)(value, imd, this.state.n + 1);\n\n        onChange && onChange(newV);\n\n        this.setState({n: newV.length - 1});\n    };\n\n\n    undo = e => {\n        if (this.state.n === 0) return;\n\n        this.setState(state => ({\n            n: state.n - 1\n        }), () => {\n            const {value, onDo} = this.props;\n\n            onDo && onDo(value[this.state.n]);\n        });\n    };\n    redo = e => {\n        if (this.state.n === this.props.value.length - 1) return;\n\n        this.setState(state => ({\n            n: state.n + 1\n        }), () => {\n            const {value, onDo} = this.props;\n\n            onDo && onDo(value[this.state.n]);\n        });\n    };\n\n    render() {\n        return (\n            <>\n                <button onClick={this.undo} disabled={this.state.n === 0}>undo</button>\n                <button onClick={this.redo} disabled={this.state.n === this.props.value.length - 1}>redo</button>\n            </>\n        );\n    }\n\n}\n\n\nexport const push = lenght => (array, item, n) => {\n    let newA = [...array.slice(0, n), item];\n    if (newA.length > lenght)\n        newA.shift();\n    return newA;\n};","import React, {Component} from 'react';\nimport './App.css';\nimport {Canvas} from \"./components/Canvas\";\nimport {Brush} from \"./components/Brush\";\nimport {Color} from \"./components/Color\";\nimport {PatternEditor} from \"./components/PatternEditor\";\nimport {floodfill} from \"./components/floodfill\";\nimport {floodfillmask, floodfillpatternmask} from \"./components/floodfillpattern\";\nimport {\n    Tools,\n    Fills,\n    hexToRgbaObject,\n    hexToRgbaString,\n    BrushTypes,\n    createPattern,\n    circle,\n    cutCircle, randomInteger, randomZ\n} from \"./components/utils\";\nimport {Paint} from \"./components/Paint\";\nimport {Line} from \"./components/Line\";\nimport {GlobalHotKeys} from \"react-hotkeys\";\nimport Color2 from \"color\";\nimport {Select} from \"./components/Select\";\nimport {Pattern} from \"./components/Pattern\";\nimport {History} from \"./components/History\";\n\n/**\n *\n *\n *\n отключение маски при скрытии\n удаление патерна\n *\n * */\n\n\nclass App extends Component {\n\n\n    componentDidMount() {\n\n        //создание белого канваса запись его в историю\n        this.setState(state => ({\n            canvas: {\n                ...state.canvas,\n                image: createPattern(this.refs.canvas.ctx)(state.canvas).image\n            }\n        }), () =>\n            this.setState({\n                history: [this.refs.canvas.ctx.getImageData(0, 0, this.state.canvas.w, this.state.canvas.h)]\n            }));\n    }\n\n    state = {\n        keys: {},\n        canvas: {\n            w: 450,\n            h: 450,\n        },\n        brush: {\n            size: 8,\n            opacity: 1,\n            type: BrushTypes.Circle\n        },\n        line: {\n            size: 8,\n            opacity: 1,\n        },\n        color: {\n            value: '#000000'\n        },\n        paint: {\n            fill: Fills.Color,\n            tolerance: 0\n        },\n        patterns: [],\n        currentPattern: 0,\n        currentTool: Tools.Brush,\n        history: []\n    };\n\n\n    handleCanvasChange = image => this.setState(state => ({canvas: {...state.canvas, image}}));\n\n    handleBrushChange = brush => this.setState({brush});//, () => console.log(this.state.brush));\n    handleColorChange = color => this.setState({color});//, () => console.log(this.state.color));\n    handlePaintChange = paint => this.setState({paint});//, () => console.log(this.state.color));\n    handleLineChange = line => this.setState({line});//, () => console.log(this.state.color));\n\n    handlePatternChange = (n) => pattern => {\n        this.setState(state => ({\n            patterns: state.patterns.map((p, i) => i === n ? pattern : p)\n        }))\n    };\n    handleAddPattern = e => {\n        this.setState(state => ({\n            patterns: [...state.patterns, createPattern(this.refs.canvas.ctx)({\n                w: 50,\n                h: 50,\n            })]\n        }))\n    };\n    removePattern = index => () => {\n        console.log(index);\n        this.setState(state => {\n            const patterns = this.state.patterns.filter((p, i) => i !== index);\n            return {\n                patterns,\n                currentPattern: patterns[state.currentPattern] ? state.currentPattern : (patterns.length !== 0 ? (patterns.length - 1) : 0)\n            }\n        });\n    };\n\n    handleCurrentPatternChose = pattern => e => this.setState({currentPattern: pattern});\n\n\n    handleToolChose = tool => this.setState({currentTool: tool});\n\n    drawProcessing = (e, ctx, canvas, prevE) => {\n        if (this.state.currentTool === Tools.Brush) {\n            ctx.fillStyle = hexToRgbaString(this.state.color.value);\n            ctx.globalAlpha = this.state.brush.opacity;\n\n            if (this.state.brush.type === BrushTypes.Square) {\n                ctx.fillRect(e.offsetX - this.state.brush.size / 2, e.offsetY - this.state.brush.size / 2, this.state.brush.size, this.state.brush.size);\n            } else if (this.state.brush.type === BrushTypes.Circle) {\n                ctx.beginPath();\n                ctx.arc(e.offsetX, e.offsetY, this.state.brush.size / 2, 0, 2 * Math.PI);\n                ctx.fill();\n            } else if (this.state.brush.type === BrushTypes.Pattern && this.state.patterns[this.state.currentPattern]) {\n                const p = this.state.patterns[this.state.currentPattern].image;\n                const i = this.state.patterns[this.state.currentPattern].imageMasked;\n                ctx.drawImage(i, e.offsetX - p.width / 2, e.offsetY - p.height / 2, p.width, p.height);\n            }\n            ctx.globalAlpha = 1;\n\n        } else if (this.state.currentTool === Tools.Line) {\n            if (prevE) {\n                ctx.globalAlpha = this.state.line.opacity;\n                ctx.beginPath();\n                ctx.moveTo(prevE.offsetX, prevE.offsetY);\n                ctx.lineTo(e.offsetX, e.offsetY);\n                ctx.strokeStyle = this.state.color.value;\n                ctx.lineWidth = this.state.line.size;\n                ctx.stroke();\n                ctx.globalAlpha = 1;\n                ctx.closePath();\n            }\n        }\n    };\n\n    clickProcessing = (e, ctx, canvas) => {\n        if (this.state.currentTool === Tools.Paint) {\n            if (this.state.paint.fill === Fills.Color) {\n                const imda = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n                let data = imda.data;\n                let width = imda.width;\n                let height = imda.height;\n                let color = hexToRgbaObject(this.state.color.value);\n\n                floodfill(data, e.offsetX, e.offsetY, color, this.state.paint.tolerance, width, height);\n\n                ctx.putImageData(imda, 0, 0);\n            } else if (this.state.paint.fill === Fills.Pattern && this.state.patterns[this.state.currentPattern]) {\n                const imda = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n                let data = imda.data;\n                let width = imda.width;\n                let height = imda.height;\n\n                const pat = this.state.patterns[this.state.currentPattern];\n\n                floodfillpatternmask(data, e.offsetX, e.offsetY, pat.image, pat.mask, this.state.paint.tolerance, width, height, pat.xMirror, pat.yMirror);\n\n                ctx.putImageData(imda, 0, 0);\n            }\n        }\n    };\n\n    maskDrawProcessing = (e, ctx, canvas, prevE) => {\n        if (this.state.currentTool === Tools.Brush) {\n            if (this.state.brush.type === BrushTypes.Pattern && this.state.patterns[this.state.currentPattern]) {\n                const p = this.state.patterns[this.state.currentPattern].mask;\n                const i = this.state.patterns[this.state.currentPattern].imageMask;\n                ctx.drawImage(i, e.offsetX - p.width / 2, e.offsetY - p.height / 2, p.width, p.height);\n            } else {\n                if (this.state.color.value.toLocaleLowerCase() === \"#ffffff\") {\n                    if (this.state.brush.type === BrushTypes.Square) {\n                        ctx.clearRect(e.offsetX - this.state.brush.size / 2, e.offsetY - this.state.brush.size / 2, this.state.brush.size, this.state.brush.size);\n                    } else if (this.state.brush.type === BrushTypes.Circle) {\n                        cutCircle(ctx, e.offsetX, e.offsetY, this.state.brush.size / 2);\n                    }\n                } else {\n                    ctx.fillStyle = \"#000000\";\n                    if (this.state.brush.type === BrushTypes.Square) {\n                        ctx.fillRect(e.offsetX - this.state.brush.size / 2, e.offsetY - this.state.brush.size / 2, this.state.brush.size, this.state.brush.size);\n                    } else if (this.state.brush.type === BrushTypes.Circle) {\n                        circle(ctx, e.offsetX, e.offsetY, this.state.brush.size / 2);\n                    }\n                }\n            }\n        } else if (this.state.currentTool === Tools.Line) {\n            if (prevE) {\n\n                if (this.state.color.value.toLocaleLowerCase() === \"#ffffff\") {\n\n                    ctx.globalCompositeOperation = 'destination-out';\n                    ctx.beginPath();\n                    ctx.moveTo(prevE.offsetX, prevE.offsetY);\n                    ctx.lineTo(e.offsetX, e.offsetY);\n                    ctx.strokeStyle = 'black';\n                    ctx.lineWidth = this.state.line.size;\n                    ctx.stroke();\n                    ctx.closePath();\n                    ctx.globalCompositeOperation = \"source-over\";\n                } else {\n                    ctx.beginPath();\n                    ctx.moveTo(prevE.offsetX, prevE.offsetY);\n                    ctx.lineTo(e.offsetX, e.offsetY);\n                    ctx.strokeStyle = 'black';\n                    ctx.lineWidth = this.state.line.size;\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n        }\n    };\n\n    maskClickProcessing = (e, ctx, canvas) => {\n        if (this.state.currentTool === Tools.Paint) {\n            if (this.state.paint.fill === Fills.Color) {\n                const imda = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n                let data = imda.data;\n                let width = imda.width;\n                let height = imda.height;\n                let color = this.state.color.value.toLocaleLowerCase() === \"#ffffff\"\n                    ? {r: 0, g: 0, b: 0, a: 0}\n                    : {r: 0, g: 0, b: 0, a: 255}\n\n                floodfill(data, e.offsetX, e.offsetY, color, this.state.paint.tolerance, width, height);\n\n                ctx.putImageData(imda, 0, 0);\n            } else if (this.state.paint.fill === Fills.Pattern && this.state.patterns[this.state.currentPattern]) {\n                const imda = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n                let data = imda.data;\n                let width = imda.width;\n                let height = imda.height;\n\n                floodfillmask(data, e.offsetX, e.offsetY, this.state.patterns[this.state.currentPattern].mask, this.state.paint.tolerance, width, height);\n\n                ctx.putImageData(imda, 0, 0);\n            }\n        }\n    };\n\n    save = () => {\n        var dataURL = this.refs.canvas.canvas.toDataURL(\"image/jpeg\");\n        var link = document.createElement(\"a\");\n        document.body.appendChild(link); // Firefox requires the link to be in the body :(\n        link.href = dataURL;\n        link.download = `${randomZ()}.jpg`;\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    historyPush = (imd) => {\n        this.refs.history.push(imd);\n    };\n\n    handleHistoryChange = history => {\n        this.setState({history})\n    };\n    handleDo = image =>\n        this.setState(state => ({\n            canvas: {\n                ...state.canvas,\n                image\n            }\n        }));\n\n    keyMap = {\n        PREV: \"1\",\n        NEXT: \"2\",\n        BRUSH: \"q\",\n        BRUSH_S: \"w\",\n        BRUSH_C: \"e\",\n        BRUSH_P: \"r\",\n        PAINT: \"a\",\n        PAINT_C: \"s\",\n        PAINT_P: \"d\",\n        LINE: \"z\",\n        WHITE: \"x\",\n        BLACK: \"c\",\n        RAND: \"v\",\n        UNDO: [\"command+z\", \"ctrl+z\"],\n        REDO: [\"command+x\", \"ctrl+x\"],\n\n    };\n\n    hotKeysHandlers = {\n        NEXT: () =>\n            this.setState(state => ({currentPattern: (state.currentPattern + 1) % state.patterns.length})),\n        PREV: () =>\n            this.setState(state => ({currentPattern: (state.currentPattern - 1 + state.patterns.length) % state.patterns.length})),\n        BRUSH: () =>\n            this.setState({currentTool: Tools.Brush}),\n        BRUSH_S: () =>\n            this.setState(state => ({brush: {...state.brush, type: BrushTypes.Square}})),\n        BRUSH_C: () =>\n            this.setState(state => ({brush: {...state.brush, type: BrushTypes.Circle}})),\n        BRUSH_P: () =>\n            this.setState(state => ({brush: {...state.brush, type: BrushTypes.Pattern}})),\n        PAINT: () =>\n            this.setState({currentTool: Tools.Paint}),\n        PAINT_C: () =>\n            this.setState(state => ({paint: {...state.paint, fill: Fills.Color}})),\n        PAINT_P: () =>\n            this.setState(state => ({paint: {...state.paint, fill: Fills.Pattern}})),\n        LINE: () =>\n            this.setState({currentTool: Tools.Line}),\n        WHITE: () =>\n            this.setState(state => ({color: {...state.color, value: \"#ffffff\"}})),\n        BLACK: () =>\n            this.setState(state => ({color: {...state.color, value: \"#000000\"}})),\n        RAND: () =>\n            this.setState(state => {\n                const r = randomInteger(0, 255);\n                const g = randomInteger(0, 255);\n                const b = randomInteger(0, 255);\n                const color = Color2.rgb([r, g, b]).hex();\n                return {color: {...state.color, value: color}}\n            }),\n        UNDO: (e) => {\n            e.preventDefault();\n            this.refs.history.undo()\n        },\n        REDO: (e) => {\n            e.preventDefault();\n            this.refs.history.redo()\n        },\n    };\n\n    render() {\n        return (\n            <GlobalHotKeys keyMap={this.keyMap} handlers={this.hotKeysHandlers}>\n                <div className={\"all\"}>\n                    <div className=\"App\">\n                        <div className={\"controls\"}>\n                            <div className={\"kunteynir\"}>\n                                {/*PatternCurr:{Object.keys(this.state.patterns).map(pattern => (*/}\n                                {/*<button key={pattern}*/}\n                                {/*onClick={this.handleCurrentPatternChose(pattern)}>{pattern}</button>*/}\n\n                                {/*))}:{this.state.currentPattern}*/}\n\n\n                                <Select\n                                    items={Object.values(Tools)}\n                                    value={this.state.currentTool}\n                                    onChange={this.handleToolChose}/>\n                                {this.state.currentTool === Tools.Brush &&\n                                <Brush\n                                    value={this.state.brush}\n                                    onChange={this.handleBrushChange}/>}\n                                {this.state.currentTool === Tools.Paint &&\n                                <Paint\n                                    value={this.state.paint}\n                                    onChange={this.handlePaintChange}/>}\n                                {this.state.currentTool === Tools.Line &&\n                                <Line\n                                    value={this.state.line}\n                                    onChange={this.handleLineChange}/>}\n                                <Pattern\n                                    value={this.state.currentPattern}\n                                    patterns={this.state.patterns}\n                                    onNext={this.hotKeysHandlers.NEXT}\n                                    onPrev={this.hotKeysHandlers.PREV}/>\n                                <Color\n                                    onClick={this.clickProcessing}\n                                    onDraw={this.drawProcessing}\n                                    value={this.state.color}\n                                    onWhite={this.hotKeysHandlers.WHITE}\n                                    onBlack={this.hotKeysHandlers.BLACK}\n                                    onRand={this.hotKeysHandlers.RAND}\n                                    onChange={this.handleColorChange}/>\n                            </div>\n                        </div>\n                        <div className={\"patterns\"}>\n                            {this.state.patterns.map((pattern, index) => (\n                                <PatternEditor\n                                    chosen={index === this.state.currentPattern}\n                                    onChose={this.handleCurrentPatternChose(index)}\n                                    key={index}\n                                    i={index}\n                                    onPatternDraw={this.drawProcessing}\n                                    onPatternClick={this.clickProcessing}\n                                    onMaskDraw={this.maskDrawProcessing}\n                                    onMaskClick={this.maskClickProcessing}\n                                    name={index}\n                                    value={pattern}\n                                    onRemove={this.removePattern(index)}\n                                    onChange={this.handlePatternChange(index)}/>\n                            ))}\n                            <div className={\"patternEditor\"}>\n                                <Canvas\n                                    ref=\"canvas\"\n                                    width={this.state.canvas.w}\n                                    height={this.state.canvas.h}\n                                    value={this.state.canvas.image}\n                                    onChange={this.handleCanvasChange}\n                                    onClick={this.clickProcessing}\n                                    onDraw={this.drawProcessing}\n                                    onUp={this.historyPush}/>\n                                <div className={\"btns\"}>\n                                    <button onClick={this.handleAddPattern}>+ pattern</button>\n                                    <button onClick={this.save}>save</button>\n                                    <History\n                                        ref=\"history\"\n                                        value={this.state.history}\n                                        onChange={this.handleHistoryChange}\n                                        onDo={this.handleDo}/>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </GlobalHotKeys>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\n\nexport class Enter extends React.PureComponent {\n    order = [2, 1, 2, 1, 2];\n    state = {\n        i: 0,\n        open: false\n    };\n    handleMouseEnter = i => e => {\n        if (i === this.order[this.state.i]) {\n            // console.log(i + 1, this.order[this.state.i]);\n            this.setState(state => ({i: state.i + 1}), () => {\n                if (this.state.i === this.order.length) {\n                    this.setState({open: true});\n                    this.setState({i: 0})\n                }\n            })\n        } else {\n            if (i !== this.order[0]) {\n                this.setState(state => ({i: 0}))\n            } else {\n\n                this.setState(state => ({i: 1}))\n            }\n\n        }\n    };\n\n    render() {\n        return (\n            this.state.open ? this.props.children :\n                <div className={\"enter\"}>\n                    {[0, 1, 2, 3, 4].map(i => (\n                        <div\n                            key={i}\n                            className={\"enter-door\"}\n                            onMouseEnter={this.handleMouseEnter(i)}/>\n                    ))}\n                </div>\n        );\n    }\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Enter} from \"./components/Enter\";\n\nReactDOM.render(<Enter><App /></Enter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}